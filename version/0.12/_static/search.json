[{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/index.html#the-materialspy-module","title":"The materials.py module","text":"The materials.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/index.html#summary","title":"The materials.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMaterialsServiceV1\n\nMaterials service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/index.html#description","title":"The materials.py module > Description","text":"Description\n\nModule containing the materials service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/GRPCCoordinateSystemServiceV1.html#grpccoordinatesystemservicev1","title":"GRPCCoordinateSystemServiceV1","text":"GRPCCoordinateSystemServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.coordinate_systems.GRPCCoordinateSystemServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.coordinate_systems.GRPCCoordinateSystemService\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ncoordinate systems service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/GRPCCoordinateSystemServiceV1.html#overview","title":"GRPCCoordinateSystemServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate\n\nCreate a coordinate system.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/GRPCCoordinateSystemServiceV1.html#import-detail","title":"GRPCCoordinateSystemServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/GRPCCoordinateSystemServiceV1.html#attribute-detail","title":"GRPCCoordinateSystemServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCoordinateSystemServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/GRPCCoordinateSystemServiceV1.html#method-detail","title":"GRPCCoordinateSystemServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCoordinateSystemServiceV1.create(**kwargs) -> dict\n\nCreate a coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/index.html#the-surfaces-package","title":"The surfaces package","text":"The surfaces package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/index.html#summary","title":"The surfaces package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ncone\n\nProvides for creating and managing a cone.\n\ncylinder\n\nProvides for creating and managing a cylinder.\n\nnurbs\n\nProvides for creating and managing a NURBS surface.\n\nplane\n\nProvides for creating and managing a plane.\n\nsphere\n\nProvides for creating and managing a sphere.\n\nsurface\n\nProvides the Surface class.\n\nsurface_evaluation\n\nProvides for evaluating a surface.\n\ntorus\n\nProvides for creating and managing a torus.\n\ntrimmed_surface\n\nProvides the TrimmedSurface class.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/index.html#description","title":"The surfaces package > Description","text":"Description\n\nProvides the PyAnsys Geometry surface subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SmallFaceProblemAreas.html#smallfaceproblemareas","title":"SmallFaceProblemAreas","text":"SmallFaceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.SmallFaceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, faces: list[ansys.geometry.core.designer.face.Face])\n\nBases: ProblemArea\n\nRepresents a small face problem area with a unique identifier and associated faces.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nfaces\n\npython:list[Face]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SmallFaceProblemAreas.html#overview","title":"SmallFaceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nfaces\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SmallFaceProblemAreas.html#import-detail","title":"SmallFaceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SmallFaceProblemAreas.html#property-detail","title":"SmallFaceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty SmallFaceProblemAreas.faces: list[ansys.geometry.core.designer.face.Face]\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SmallFaceProblemAreas.html#method-detail","title":"SmallFaceProblemAreas > Method detail","text":"Method detail\n\n\n\nSmallFaceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/launcher/index.html#the-launcherpy-module","title":"The launcher.py module","text":"The launcher.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/launcher/index.html#summary","title":"The launcher.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nlaunch_modeler\n\nStart the Modeler interface for PyAnsys Geometry.\n\nlaunch_remote_modeler\n\nStart the Geometry service remotely using the PIM API.\n\nlaunch_docker_modeler\n\nStart the Geometry service locally using Docker.\n\nlaunch_modeler_with_discovery_and_pimlight\n\nStart Ansys Discovery remotely using the PIM API.\n\nlaunch_modeler_with_geometry_service_and_pimlight\n\nStart the Geometry service remotely using the PIM API.\n\nlaunch_modeler_with_spaceclaim_and_pimlight\n\nStart Ansys SpaceClaim remotely using the PIM API.\n\nlaunch_modeler_with_geometry_service\n\nStart the Geometry service locally using the ProductInstance class.\n\nlaunch_modeler_with_discovery\n\nStart Ansys Discovery locally using the ProductInstance class.\n\nlaunch_modeler_with_spaceclaim\n\nStart Ansys SpaceClaim locally using the ProductInstance class.\n\nlaunch_modeler_with_core_service\n\nStart the Geometry Core service locally using the ProductInstance class."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/launcher/index.html#description","title":"The launcher.py module > Description","text":"Description\n\nModule for connecting to instances of the Geometry service."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/launcher/index.html#module-detail","title":"The launcher.py module > Module detail","text":"Module detail\n\n\n\nlauncher.launch_modeler(mode: str = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Modeler interface for PyAnsys Geometry.\n\nParameters\n\nmode\n\npython:str, default: python:None\n\nMode in which to launch the Modeler service. The default is None,\nin which case the method tries to determine the mode automatically. The\npossible values are:\n\n\"pypim\": Launches the Modeler service remotely using the PIM API.\n\n\"docker\": Launches the Modeler service locally using Docker.\n\n\"geometry_service\": Launches the Modeler service locally using the\nAnsys Geometry Service.\n\n\"spaceclaim\": Launches the Modeler service locally using Ansys SpaceClaim.\n\n\"discovery\": Launches the Modeler service locally using Ansys Discovery.\n\n**kwargs\n\npython:dict, default: python:None\n\nKeyword arguments for the launching methods. For allowable keyword arguments, see the\ncorresponding methods for each mode:\n\nFor \"pypim\" mode, see the launch_remote_modeler() method.\n\nFor \"docker\" mode, see the launch_docker_modeler() method.\n\nFor \"geometry_service\" mode, see the\nlaunch_modeler_with_geometry_service() method.\n\nFor \"core_service\" mode, see the launch_modeler_with_core_service() method.\n\nFor \"spaceclaim\" mode, see the launch_modeler_with_spaceclaim() method.\n\nFor \"discovery\" mode, see the launch_modeler_with_discovery() method.\n\nReturns\n\nansys.geometry.core.modeler.Modeler\n\nPythonic interface for geometry modeling.\n\nExamples\n\nLaunch the Geometry service.\n\n>>> from ansys.geometry.core import launch_modeler\n>>> modeler = launch_modeler()\n\n\n\nlauncher.launch_remote_modeler(platform: str = 'windows', version: str | None = None, client_log_level: int = logging.INFO, client_log_file: str | None = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Geometry service remotely using the PIM API.\n\nWhen calling this method, you must ensure that you are in an\nenvironment where PyPIM is\nconfigured. You can use the\npypim.is_configured\nmethod to check if it is configured.\n\nParameters\n\nplatform\n\npython:str, default: python:None\n\nSpecific for Ansys Lab. The platform option for the Geometry service.\nThe default is \"windows\".\nThis parameter is used to specify the operating system on which the\nGeometry service will run. The possible values are:\n\n\"windows\": The Geometry service runs on a Windows machine.\n\n\"linux\": The Geometry service runs on a Linux machine.\n\nversion\n\npython:str, default: python:None\n\nVersion of the Geometry service to run in the three-digit format.\nFor example, “241”. If you do not specify the version, the server\nchooses the version.\n\nclient_log_level\n\npython:int, default: logging.INFO\n\nLog level for the client. The default is logging.INFO.\n\nclient_log_file\n\npython:str, default: python:None\n\nPath to the log file for the client. The default is None,\nin which case the client logs to the console.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nansys.geometry.core.modeler.Modeler\n\nInstance of the Geometry service.\n\n\n\nlauncher.launch_docker_modeler(port: int = pygeom_defaults.DEFAULT_PORT, connect_to_existing_service: bool = True, restart_if_existing_service: bool = False, name: str | None = None, image: ansys.geometry.core.connection.docker_instance.GeometryContainers | None = None, client_log_level: int = logging.INFO, client_log_file: str | None = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Geometry service locally using Docker.\n\nWhen calling this method, a Geometry service (as a local Docker container)\nis started. By default, if a container with the Geometry service already exists\nat the given port, it connects to it. Otherwise, it tries to launch its own\nservice.\n\nParameters\n\nport\n\npython:int, optional\n\nLocalhost port to deploy the Geometry service on or the\nthe Modeler interface to connect to (if it is already deployed). By default,\nthe value is the one for the DEFAULT_PORT connection parameter.\n\nconnect_to_existing_service\n\nbool, default: python:True\n\nWhether the Modeler interface should connect to a Geometry\nservice already deployed at the specified port.\n\nrestart_if_existing_service\n\nbool, default: python:False\n\nWhether the Geometry service (which is already running)\nshould be restarted when attempting connection.\n\nname\n\npython:str, default: python:None\n\nName of the Docker container to deploy. The default is None,\nin which case Docker assigns it a random name.\n\nimage\n\nGeometryContainers, default: python:None\n\nThe Geometry service Docker image to deploy. The default is None,\nin which case the LocalDockerInstance class identifies the OS of your\nDocker engine and deploys the latest version of the Geometry service for\nthat OS.\n\nclient_log_level\n\npython:int, default: logging.INFO\n\nLog level for the client. The default is logging.INFO.\n\nclient_log_file\n\npython:str, default: python:None\n\nPath to the log file for the client. The default is None,\nin which case the client logs to the console.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nModeler\n\nInstance of the Geometry service.\n\n\n\nlauncher.launch_modeler_with_discovery_and_pimlight(version: str | None = None, client_log_level: int = logging.INFO, client_log_file: str | None = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart Ansys Discovery remotely using the PIM API.\n\nWhen calling this method, you must ensure that you are in an\nenvironment where PyPIM is configured.\nYou can use the pypim.is_configured\nmethod to check if it is configured.\n\nParameters\n\nversion\n\npython:str, default: python:None\n\nVersion of Discovery to run in the three-digit format.\nFor example, “241”. If you do not specify the version, the server\nchooses the version.\n\nclient_log_level\n\npython:int, default: logging.INFO\n\nLog level for the client. The default is logging.INFO.\n\nclient_log_file\n\npython:str, default: python:None\n\nPath to the log file for the client. The default is None,\nin which case the client logs to the console.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nansys.geometry.core.modeler.Modeler\n\nInstance of Modeler.\n\n\n\nlauncher.launch_modeler_with_geometry_service_and_pimlight(version: str | None = None, client_log_level: int = logging.INFO, client_log_file: str | None = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Geometry service remotely using the PIM API.\n\nWhen calling this method, you must ensure that you are in an\nenvironment where PyPIM is configured.\nYou can use the pypim.is_configured\nmethod to check if it is configured.\n\nParameters\n\nversion\n\npython:str, default: python:None\n\nVersion of the Geometry service to run in the three-digit format.\nFor example, “241”. If you do not specify the version, the server\nchooses the version.\n\nclient_log_level\n\npython:int, default: logging.INFO\n\nLog level for the client. The default is logging.INFO.\n\nclient_log_file\n\npython:str, default: python:None\n\nPath to the log file for the client. The default is None,\nin which case the client logs to the console.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nansys.geometry.core.modeler.Modeler\n\nInstance of Modeler.\n\n\n\nlauncher.launch_modeler_with_spaceclaim_and_pimlight(version: str | None = None, client_log_level: int = logging.INFO, client_log_file: str | None = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart Ansys SpaceClaim remotely using the PIM API.\n\nWhen calling this method, you must ensure that you are in an\nenvironment where PyPIM is configured.\nYou can use the pypim.is_configured\nmethod to check if it is configured.\n\nParameters\n\nversion\n\npython:str, default: python:None\n\nVersion of SpaceClaim to run in the three-digit format.\nFor example, “241”. If you do not specify the version, the server\nchooses the version.\n\nclient_log_level\n\npython:int, default: logging.INFO\n\nLog level for the client. The default is logging.INFO.\n\nclient_log_file\n\npython:str, default: python:None\n\nPath to the log file for the client. The default is None,\nin which case the client logs to the console.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nansys.geometry.core.modeler.Modeler\n\nInstance of Modeler.\n\n\n\nlauncher.launch_modeler_with_geometry_service(version: str | int | None = None, host: str = 'localhost', port: int = None, enable_trace: bool = False, timeout: int = 60, server_log_level: int = 2, client_log_level: int = logging.INFO, server_logs_folder: str = None, client_log_file: str = None, product_version: int = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Geometry service locally using the ProductInstance class.\n\nWhen calling this method, a standalone Geometry service is started.\nBy default, if an endpoint is specified (by defining host and port parameters)\nbut the endpoint is not available, the startup will fail. Otherwise, it will try to\nlaunch its own service.\n\nParameters\n\nversion: str | int, optional\n\nThe product version to be started. Goes from v24.1 to\nthe latest. Default is None.\nIf a specific product version is requested but not installed locally,\na SystemError will be raised.\n\nAnsys products versions and their corresponding int values:\n\n241 : Ansys 24R1\n\n242 : Ansys 24R2\n\nhost: str, optional\n\nIP address at which the Geometry service will be deployed. By default,\nits value will be localhost.\n\nport\n\npython:int, optional\n\nPort at which the Geometry service will be deployed. By default, its\nvalue will be None.\n\nenable_trace\n\nbool, optional\n\nBoolean enabling the logs trace on the Geometry service console window.\nBy default its value is False.\n\ntimeout\n\npython:int, optional\n\nTimeout for starting the backend startup process. The default is 60.\n\nserver_log_level\n\npython:int, optional\n\nBackend’s log level from 0 to 3:\n\n0: Chatterbox\n1: Debug\n2: Warning\n3: Error\n\nThe default is 2 (Warning).\n\nclient_log_level\n\npython:int, optional\n\nLogging level to apply to the client. By default, INFO level is used.\nUse the logging module’s levels: DEBUG, INFO, WARNING, ERROR, CRITICAL.\n\nserver_logs_folder\n\npython:str, optional\n\nSets the backend’s logs folder path. If nothing is defined,\nthe backend will use its default path.\n\nclient_log_file\n\npython:str, optional\n\nSets the client’s log file path. If nothing is defined,\nthe client will log to the console.\n\nproduct_version: int, optional\n\nThe product version to be started. Deprecated, use version instead.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nModeler\n\nInstance of the Geometry service.\n\nRaises\n\nConnectionError\n\nIf the specified endpoint is already in use, a connection\nerror will be raised.\n\nSystemError\n\nIf there is not an Ansys product 24.1 version or later installed\na SystemError will be raised.\n\nExamples\n\nStarting a geometry service with the default parameters and getting back a Modeler\nobject:\n\n>>> from ansys.geometry.core import launch_modeler_with_geometry_service\n>>> modeler = launch_modeler_with_geometry_service()\n\nStarting a geometry service, on address 10.171.22.44, port 5001, with chatty\nlogs, traces enabled and a 300 seconds timeout:\n\n>>> from ansys.geometry.core import launch_modeler_with_geometry_service\n>>> modeler = launch_modeler_with_geometry_service(host=\"10.171.22.44\",\n    port=5001,\n    enable_trace= True,\n    timeout=300,\n    server_log_level=0)\n\n\n\nlauncher.launch_modeler_with_discovery(version: str | int | None = None, host: str = 'localhost', port: int = None, api_version: ansys.geometry.core.connection.backend.ApiVersions = ApiVersions.LATEST, timeout: int = 150, manifest_path: str = None, hidden: bool = False, server_log_level: int = 2, client_log_level: int = logging.INFO, client_log_file: str = None, product_version: int = None, **kwargs: dict | None)\n\nStart Ansys Discovery locally using the ProductInstance class.\n\nWhen calling this method, a standalone Discovery session is started.\nBy default, if an endpoint is specified (by defining host and port parameters)\nbut the endpoint is not available, the startup will fail. Otherwise, it will try to\nlaunch its own service.\n\nParameters\n\nversion: str | int, optional\n\nThe product version to be started. Goes from v24.1 to\nthe latest. Default is None.\nIf a specific product version is requested but not installed locally,\na SystemError will be raised.\n\nAnsys products versions and their corresponding int values:\n\n241 : Ansys 24R1\n\n242 : Ansys 24R2\n\nhost: str, optional\n\nIP address at which the Discovery session will be deployed. By default,\nits value will be localhost.\n\nport\n\npython:int, optional\n\nPort at which the Geometry service will be deployed. By default, its\nvalue will be None.\n\napi_version: ApiVersions, optional\n\nThe backend’s API version to be used at runtime. Goes from API v21 to\nthe latest. Default is ApiVersions.LATEST.\n\ntimeout\n\npython:int, optional\n\nTimeout for starting the backend startup process. The default is 150.\n\nmanifest_path\n\npython:str, optional\n\nUsed to specify a manifest file path for the ApiServerAddin. This way,\nit is possible to run an ApiServerAddin from a version an older product\nversion.\n\nhidden\n\nstarts the product hiding its UI. Default is False.\n\n\n\nserver_log_level\n\npython:int, optional\n\nBackend’s log level from 0 to 3:\n\n0: Chatterbox\n1: Debug\n2: Warning\n3: Error\n\nThe default is 2 (Warning).\n\nclient_log_level\n\npython:int, optional\n\nLogging level to apply to the client. By default, INFO level is used.\nUse the logging module’s levels: DEBUG, INFO, WARNING, ERROR, CRITICAL.\n\nclient_log_file\n\npython:str, optional\n\nSets the client’s log file path. If nothing is defined,\nthe client will log to the console.\n\nproduct_version: int, optional\n\nThe product version to be started. Deprecated, use version instead.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nModeler\n\nInstance of the Geometry service.\n\nRaises\n\nConnectionError\n\nIf the specified endpoint is already in use, a connection error will be raised.\n\nSystemError:\n\nIf there is not an Ansys product 24.1 version or later installed\nor if a specific product’s version is requested but not installed locally then\na SystemError will be raised.\n\nExamples\n\nStarting an Ansys Discovery session with the default parameters and getting back a Modeler\nobject:\n\n>>> from ansys.geometry.core import launch_modeler_with_discovery\n>>> modeler = launch_modeler_with_discovery()\n\nStarting an Ansys Discovery V 24.1 session, on address 10.171.22.44, port 5001,\nwith chatty logs, using API v231 and a 300 seconds timeout:\n\n>>> from ansys.geometry.core import launch_modeler_with_discovery\n>>> modeler = launch_modeler_with_discovery(product_version = 241,\n    host=\"10.171.22.44\",\n    port=5001,\n    api_version= 231,\n    timeout=300,\n    server_log_level=0)\n\n\n\nlauncher.launch_modeler_with_spaceclaim(version: str | int | None = None, host: str = 'localhost', port: int = None, api_version: ansys.geometry.core.connection.backend.ApiVersions = ApiVersions.LATEST, timeout: int = 150, manifest_path: str = None, hidden: bool = False, server_log_level: int = 2, client_log_level: int = logging.INFO, client_log_file: str = None, product_version: int = None, **kwargs: dict | None)\n\nStart Ansys SpaceClaim locally using the ProductInstance class.\n\nWhen calling this method, a standalone SpaceClaim session is started.\nBy default, if an endpoint is specified (by defining host and port parameters)\nbut the endpoint is not available, the startup will fail. Otherwise, it will try to\nlaunch its own service.\n\nParameters\n\nversion: str | int, optional\n\nThe product version to be started. Goes from v24.1 to\nthe latest. Default is None.\nIf a specific product version is requested but not installed locally,\na SystemError will be raised.\n\nAnsys products versions and their corresponding int values:\n\n241 : Ansys 24R1\n\n242 : Ansys 24R2\n\nhost: str, optional\n\nIP address at which the SpaceClaim session will be deployed. By default,\nits value will be localhost.\n\nport\n\npython:int, optional\n\nPort at which the Geometry service will be deployed. By default, its\nvalue will be None.\n\napi_version: ApiVersions, optional\n\nThe backend’s API version to be used at runtime. Goes from API v21 to\nthe latest. Default is ApiVersions.LATEST.\n\ntimeout\n\npython:int, optional\n\nTimeout for starting the backend startup process. The default is 150.\n\nmanifest_path\n\npython:str, optional\n\nUsed to specify a manifest file path for the ApiServerAddin. This way,\nit is possible to run an ApiServerAddin from a version an older product\nversion.\n\nhidden\n\nstarts the product hiding its UI. Default is False.\n\n\n\nserver_log_level\n\npython:int, optional\n\nBackend’s log level from 0 to 3:\n\n0: Chatterbox\n1: Debug\n2: Warning\n3: Error\n\nThe default is 2 (Warning).\n\nclient_log_level\n\npython:int, optional\n\nLogging level to apply to the client. By default, INFO level is used.\nUse the logging module’s levels: DEBUG, INFO, WARNING, ERROR, CRITICAL.\n\nclient_log_file\n\npython:str, optional\n\nSets the client’s log file path. If nothing is defined,\nthe client will log to the console.\n\nproduct_version: int, optional\n\nThe product version to be started. Deprecated, use version instead.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nModeler\n\nInstance of the Geometry service.\n\nRaises\n\nConnectionError\n\nIf the specified endpoint is already in use, a connection error will be raised.\n\nSystemError\n\nIf there is not an Ansys product 24.1 version or later installed\nor if a specific product’s version is requested but not installed locally then\na SystemError will be raised.\n\nExamples\n\nStarting an Ansys SpaceClaim session with the default parameters and get back a Modeler\nobject:\n\n>>> from ansys.geometry.core import launch_modeler_with_spaceclaim\n>>> modeler = launch_modeler_with_spaceclaim()\n\nStarting an Ansys SpaceClaim V 24.1 session, on address 10.171.22.44, port 5001,\nwith chatty logs, using API v231 and a 300 seconds timeout:\n\n>>> from ansys.geometry.core import launch_modeler_with_spaceclaim\n>>> modeler = launch_modeler_with_spaceclaim(product_version = 241,\n    host=\"10.171.22.44\",\n    port=5001,\n    api_version= 231,\n    timeout=300,\n    server_log_level=0)\n\n\n\nlauncher.launch_modeler_with_core_service(version: str | int | None = None, host: str = 'localhost', port: int = None, enable_trace: bool = False, timeout: int = 60, server_log_level: int = 2, client_log_level: int = logging.INFO, server_logs_folder: str = None, client_log_file: str = None, product_version: int = None, **kwargs: dict | None) -> ansys.geometry.core.modeler.Modeler\n\nStart the Geometry Core service locally using the ProductInstance class.\n\nWhen calling this method, a standalone Geometry Core service is started.\nBy default, if an endpoint is specified (by defining host and port parameters)\nbut the endpoint is not available, the startup will fail. Otherwise, it will try to\nlaunch its own service.\n\nParameters\n\nversion: str | int, optional\n\nThe product version to be started. Goes from v25.2 to\nthe latest. Default is None.\nIf a specific product version is requested but not installed locally,\na SystemError will be raised.\n\nAnsys products versions and their corresponding int values:\n\n252 : Ansys 25R2\n\n261 : Ansys 26R1\n\nhost: str, optional\n\nIP address at which the service will be deployed. By default,\nits value will be localhost.\n\nport\n\npython:int, optional\n\nPort at which the service will be deployed. By default, its\nvalue will be None.\n\nenable_trace\n\nbool, optional\n\nBoolean enabling the logs trace on the service console window.\nBy default its value is False.\n\ntimeout\n\npython:int, optional\n\nTimeout for starting the backend startup process. The default is 60.\n\nserver_log_level\n\npython:int, optional\n\nBackend’s log level from 0 to 3:\n\n0: Chatterbox\n1: Debug\n2: Warning\n3: Error\n\nThe default is 2 (Warning).\n\nclient_log_level\n\npython:int, optional\n\nLogging level to apply to the client. By default, INFO level is used.\nUse the logging module’s levels: DEBUG, INFO, WARNING, ERROR, CRITICAL.\n\nserver_logs_folder\n\npython:str, optional\n\nSets the backend’s logs folder path. If nothing is defined,\nthe backend will use its default path.\n\nclient_log_file\n\npython:str, optional\n\nSets the client’s log file path. If nothing is defined,\nthe client will log to the console.\n\nproduct_version: int, optional\n\nThe product version to be started. Deprecated, use version instead.\n\n**kwargs\n\npython:dict, default: python:None\n\nPlaceholder to prevent errors when passing additional arguments that\nare not compatible with this method.\n\nReturns\n\nModeler\n\nInstance of the Geometry Core service.\n\nRaises\n\nConnectionError\n\nIf the specified endpoint is already in use, a connection\nerror will be raised.\n\nSystemError\n\nIf there is not an Ansys product 25.2 version or later installed\na SystemError will be raised.\n\nExamples\n\nStarting a geometry core service with the default parameters and getting back a Modeler\nobject:\n\n>>> from ansys.geometry.core import launch_modeler_with_core_service\n>>> modeler = launch_modeler_with_core_service()\n\nStarting a geometry service, on address 10.171.22.44, port 5001, with chatty\nlogs, traces enabled and a 300 seconds timeout:\n\n>>> from ansys.geometry.core import launch_modeler_with_core_service\n>>> modeler = launch_modeler_with_core_service(host=\"10.171.22.44\",\n    port=5001,\n    enable_trace= True,\n    timeout=300,\n    server_log_level=0)"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/index.html#the-polygonpy-module","title":"The polygon.py module","text":"The polygon.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/index.html#summary","title":"The polygon.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPolygon\n\nProvides for modeling regular polygons.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/index.html#description","title":"The polygon.py module > Description","text":"Description\n\nProvides for creating and managing a polygon."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/index.html#the-spherepy-module","title":"The sphere.py module","text":"The sphere.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/index.html#summary","title":"The sphere.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSphere\n\nProvides 3D sphere representation.\n\nSphereEvaluation\n\nEvaluate a sphere at given parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/index.html#description","title":"The sphere.py module > Description","text":"Description\n\nProvides for creating and managing a sphere."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Area.html#area","title":"Area","text":"Area\n\n\n\nclass ansys.geometry.core.misc.measurements.Area(value: ansys.geometry.core.typing.Real | pint.Quantity, unit: pint.Unit | None = None)\n\nBases: Measurement\n\nProvides the Measurement subclass for holding an area.\n\nParameters\n\nvalue\n\nReal | Quantity\n\nValue of the area.\n\nunit\n\nUnit, default: DEFAULT_UNITS.AREA\n\nUnits for the area."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Area.html#import-detail","title":"Area > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/index.html#the-sketchpy-module","title":"The sketch.py module","text":"The sketch.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/index.html#summary","title":"The sketch.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketch\n\nProvides for building 2D sketch elements.\n\nAttributes\n\n\n\n\n\nSketchObject\n\nType to refer to both SketchEdge and SketchFace.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/index.html#description","title":"The sketch.py module > Description","text":"Description\n\nProvides for creating and managing a sketch."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/index.html#module-detail","title":"The sketch.py module > Module detail","text":"Module detail\n\n\n\nsketch.SketchObject\n\nType to refer to both SketchEdge and SketchFace."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/GRPCPartsServiceV1.html#grpcpartsservicev1","title":"GRPCPartsServiceV1","text":"GRPCPartsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.parts.GRPCPartsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.parts.GRPCPartsService\n\nParts service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nparts service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/GRPCPartsServiceV1.html#overview","title":"GRPCPartsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nexport\n\nExport a part to a file.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/GRPCPartsServiceV1.html#import-detail","title":"GRPCPartsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/GRPCPartsServiceV1.html#attribute-detail","title":"GRPCPartsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPartsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/GRPCPartsServiceV1.html#method-detail","title":"GRPCPartsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPartsServiceV1.export(**kwargs) -> dict\n\nExport a part to a file."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/GRPCMaterialsServiceV0.html#grpcmaterialsservicev0","title":"GRPCMaterialsServiceV0","text":"GRPCMaterialsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.materials.GRPCMaterialsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.materials.GRPCMaterialsService\n\nMaterials service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmaterials service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/GRPCMaterialsServiceV0.html#overview","title":"GRPCMaterialsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_material\n\nAdd material to the service design.\n\nremove_material\n\nRemove material from the service design.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/GRPCMaterialsServiceV0.html#import-detail","title":"GRPCMaterialsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/GRPCMaterialsServiceV0.html#attribute-detail","title":"GRPCMaterialsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCMaterialsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/GRPCMaterialsServiceV0.html#method-detail","title":"GRPCMaterialsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCMaterialsServiceV0.add_material(**kwargs) -> dict\n\nAdd material to the service design.\n\n\n\nGRPCMaterialsServiceV0.remove_material(**kwargs) -> dict\n\nRemove material from the service design."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SweepWithGuideData.html#sweepwithguidedata","title":"SweepWithGuideData","text":"SweepWithGuideData\n\n\n\nclass ansys.geometry.core.designer.component.SweepWithGuideData\n\nData class for sweep with guide parameters.\n\nParameters\n\nname\n\npython:str\n\nName of the body to be generated by the sweep operation.\n\nparent_id\n\npython:str\n\nID of the parent component.\n\nsketch\n\nSketch\n\nSketch to use for the sweep operation.\n\npath\n\nTrimmedCurve\n\nPath to sweep along.\n\nguide\n\nTrimmedCurve\n\nGuide curve for the sweep operation.\n\ntight_tolerance\n\nbool\n\nWhether to use tight tolerance for the sweep operation."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SweepWithGuideData.html#overview","title":"SweepWithGuideData > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nname\n\n\n\nparent_id\n\n\n\nsketch\n\n\n\npath\n\n\n\nguide\n\n\n\ntight_tolerance\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SweepWithGuideData.html#import-detail","title":"SweepWithGuideData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SweepWithGuideData.html#attribute-detail","title":"SweepWithGuideData > Attribute detail","text":"Attribute detail\n\n\n\nSweepWithGuideData.name: str\n\n\n\n\n\nSweepWithGuideData.parent_id: str\n\n\n\n\n\nSweepWithGuideData.sketch: ansys.geometry.core.sketch.sketch.Sketch\n\n\n\n\n\nSweepWithGuideData.path: ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve\n\n\n\n\n\nSweepWithGuideData.guide: ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve\n\n\n\n\n\nSweepWithGuideData.tight_tolerance: bool = False\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/index.html#the-planepy-module","title":"The plane.py module","text":"The plane.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/index.html#summary","title":"The plane.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPlane\n\nProvides primitive representation of a 2D plane in 3D space.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/index.html#description","title":"The plane.py module > Description","text":"Description\n\nProvides primitive representation of a 2D plane in 3D space."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/GRPCUnsupportedServiceV0.html#grpcunsupportedservicev0","title":"GRPCUnsupportedServiceV0","text":"GRPCUnsupportedServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.unsupported.GRPCUnsupportedServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.unsupported.GRPCUnsupportedService\n\nUnsupported service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/GRPCUnsupportedServiceV0.html#overview","title":"GRPCUnsupportedServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_import_id_map\n\nGet the import ID map.\n\nset_export_ids\n\nSet the export IDs for the entities.\n\nset_single_export_id\n\nSet a single export ID for an entity.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/GRPCUnsupportedServiceV0.html#import-detail","title":"GRPCUnsupportedServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/GRPCUnsupportedServiceV0.html#attribute-detail","title":"GRPCUnsupportedServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCUnsupportedServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/GRPCUnsupportedServiceV0.html#method-detail","title":"GRPCUnsupportedServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCUnsupportedServiceV0.get_import_id_map(**kwargs) -> dict\n\nGet the import ID map.\n\n\n\nGRPCUnsupportedServiceV0.set_export_ids(**kwargs) -> dict\n\nSet the export IDs for the entities.\n\n\n\nGRPCUnsupportedServiceV0.set_single_export_id(**kwargs) -> dict\n\nSet a single export ID for an entity."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/index.html#the-facespy-module","title":"The faces.py module","text":"The faces.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/index.html#summary","title":"The faces.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCFacesService\n\nFaces service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/index.html#description","title":"The faces.py module > Description","text":"Description\n\nModule containing the faces service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/index.html#the-prepare_toolspy-module","title":"The prepare_tools.py module","text":"The prepare_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/index.html#summary","title":"The prepare_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPrepareToolsServiceV1\n\nPrepare tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/index.html#description","title":"The prepare_tools.py module > Description","text":"Description\n\nModule containing the Prepare Tools service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/GRPCModelToolsServiceV0.html#grpcmodeltoolsservicev0","title":"GRPCModelToolsServiceV0","text":"GRPCModelToolsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.model_tools.GRPCModelToolsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.model_tools.GRPCModelToolsService\n\nModel tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmodel tools service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/GRPCModelToolsServiceV0.html#overview","title":"GRPCModelToolsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nchamfer\n\nCreate a chamfer on the specified edges of a body.\n\nfillet\n\nCreate a fillet on the specified edges of a body.\n\nfull_fillet\n\nCreate a full fillet on the specified edges of a body.\n\nmove_rotate\n\nRotate the specified entities.\n\nmove_translate\n\nTranslate the specified entities.\n\ncreate_sketch_line\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/GRPCModelToolsServiceV0.html#import-detail","title":"GRPCModelToolsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/GRPCModelToolsServiceV0.html#method-detail","title":"GRPCModelToolsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCModelToolsServiceV0.chamfer(**kwargs) -> dict\n\nCreate a chamfer on the specified edges of a body.\n\n\n\nGRPCModelToolsServiceV0.fillet(**kwargs) -> dict\n\nCreate a fillet on the specified edges of a body.\n\n\n\nGRPCModelToolsServiceV0.full_fillet(**kwargs) -> dict\n\nCreate a full fillet on the specified edges of a body.\n\n\n\nGRPCModelToolsServiceV0.move_rotate(**kwargs) -> dict\n\nRotate the specified entities.\n\n\n\nGRPCModelToolsServiceV0.move_translate(**kwargs) -> dict\n\nTranslate the specified entities.\n\n\n\nGRPCModelToolsServiceV0.create_sketch_line(**kwargs) -> dict\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/index.html#the-unsupportedpy-module","title":"The unsupported.py module","text":"The unsupported.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/index.html#summary","title":"The unsupported.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCUnsupportedService\n\nUnsupported service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/index.html#description","title":"The unsupported.py module > Description","text":"Description\n\nModule containing the unsupported service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/SketchFace.html#sketchface","title":"SketchFace","text":"SketchFace\n\n\n\nclass ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling a face."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/SketchFace.html#overview","title":"SketchFace > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nplane_change\n\nRedefine the plane containing SketchFace objects.\n\nProperties\n\n\n\n\n\nedges\n\nList of all component edges forming the face.\n\nperimeter\n\nPerimeter of the face.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/SketchFace.html#import-detail","title":"SketchFace > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/SketchFace.html#property-detail","title":"SketchFace > Property detail","text":"Property detail\n\n\n\nproperty SketchFace.edges: list[ansys.geometry.core.sketch.edge.SketchEdge]\n\nList of all component edges forming the face.\n\n\n\nproperty SketchFace.perimeter: pint.Quantity\n\nPerimeter of the face.\n\n\n\nproperty SketchFace.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/SketchFace.html#method-detail","title":"SketchFace > Method detail","text":"Method detail\n\n\n\nSketchFace.plane_change(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nRedefine the plane containing SketchFace objects.\n\nParameters\n\nplane\n\nPlane\n\nDesired new plane that is to contain the sketched face.\n\nNotes\n\nThis implies that their 3D definition might suffer changes. This method does\nnothing by default. It is required to be implemented in child SketchFace classes."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/index.html#the-unsupportedpy-module","title":"The unsupported.py module","text":"The unsupported.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/index.html#summary","title":"The unsupported.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCUnsupportedServiceV0\n\nUnsupported service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/unsupported/index.html#description","title":"The unsupported.py module > Description","text":"Description\n\nModule containing the unsupported service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/index.html#the-nurbspy-module","title":"The nurbs.py module","text":"The nurbs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/index.html#summary","title":"The nurbs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchNurbs\n\nRepresents a NURBS sketch curve.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/index.html#description","title":"The nurbs.py module > Description","text":"Description\n\nProvides for creating and managing a nurbs sketch curve."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/PersistentIdType.html#persistentidtype","title":"PersistentIdType","text":"PersistentIdType\n\n\n\nclass ansys.geometry.core.tools.unsupported.PersistentIdType(*args, **kwds)\n\nBases: enum.Enum\n\nType of persistent id."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/PersistentIdType.html#overview","title":"PersistentIdType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nPNAME\n\n\n\nPRIME_ID\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/PersistentIdType.html#import-detail","title":"PersistentIdType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/PersistentIdType.html#attribute-detail","title":"PersistentIdType > Attribute detail","text":"Attribute detail\n\n\n\nPersistentIdType.PNAME = 1\n\n\n\n\n\nPersistentIdType.PRIME_ID = 700\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/GRPCCoordinateSystemServiceV0.html#grpccoordinatesystemservicev0","title":"GRPCCoordinateSystemServiceV0","text":"GRPCCoordinateSystemServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.coordinate_systems.GRPCCoordinateSystemServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.coordinate_systems.GRPCCoordinateSystemService\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ncoordinate systems service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/GRPCCoordinateSystemServiceV0.html#overview","title":"GRPCCoordinateSystemServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate\n\nCreate a coordinate system.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/GRPCCoordinateSystemServiceV0.html#import-detail","title":"GRPCCoordinateSystemServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/GRPCCoordinateSystemServiceV0.html#attribute-detail","title":"GRPCCoordinateSystemServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCoordinateSystemServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/GRPCCoordinateSystemServiceV0.html#method-detail","title":"GRPCCoordinateSystemServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCCoordinateSystemServiceV0.create(**kwargs) -> dict\n\nCreate a coordinate system."},{"objectID":"Home","href":"getting_started/compatibility.html#ansys-version-compatibility","title":"Ansys version compatibility","text":"Ansys version compatibility\n\nThe following table summarizes the compatibility matrix between the PyAnsys Geometry service\nand the Ansys product versions.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPyAnsys Geometry versions\n\nAnsys Product versions\n\nGeometry Service (dockerized)\n\nGeometry Service (standalone)\n\nDiscovery\n\nSpaceClaim\n\n0.2.X\n\n23R2\n\n\n\n\n\n\n\n\n\n0.3.X\n\n23R2 (partially)\n\n\n\n\n\n\n\n\n\n0.4.X\n\n24R1 onward\n\n\n\n\n\n\n\n\n\n0.5.X\n\n24R1 onward\n\n\n\n\n\n\n\n\n\nForth- and back-compatibility mechanism\n\nStarting on version 0.5.X and onward, PyAnsys Geometry has implemented a forth- and back-compatibility mechanism to\nensure that the Python library can be used with different versions of the Ansys products.\n\nMethods are now decorated with the @min_backend_version decorator to indicate the compatibility with the Ansys product versions.\nIf an unsupported method is called, a GeometryRuntimeError is raised when attempting to use the method. Users are informed of the\nminimum Ansys product version required to use the method.\n\nAccess to the documentation for the preceding versions is found at the Versions page.\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/Design.html#design","title":"Design","text":"Design\n\n\n\nclass ansys.geometry.core.designer.design.Design(name: str, modeler: ansys.geometry.core.modeler.Modeler, read_existing_design: bool = False)\n\nBases: ansys.geometry.core.designer.component.Component\n\nProvides for organizing geometry assemblies.\n\nThis class synchronizes to a supporting Geometry service instance.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the design.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling.\n\nread_existing_design\n\nbool, default: python:False\n\nWhether an existing design on the service should be read. This parameter is\nonly valid when connecting to an existing service session. Otherwise, avoid\nusing this optional parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/Design.html#overview","title":"Design > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nclose\n\nClose the design.\n\nadd_material\n\nAdd a material to the design.\n\nremove_material\n\nRemove a material from the design.\n\nsave\n\nSave a design to disk on the active Geometry server instance.\n\ndownload\n\nExport and download the design from the server.\n\nexport_to_scdocx\n\nExport the design to an scdocx file.\n\nexport_to_disco\n\nExport the design to an dsco file.\n\nexport_to_stride\n\nExport the design to an stride file.\n\nexport_to_parasolid_text\n\nExport the design to a Parasolid text file.\n\nexport_to_parasolid_bin\n\nExport the design to a Parasolid binary file.\n\nexport_to_fmd\n\nExport the design to an FMD file.\n\nexport_to_step\n\nExport the design to a STEP file.\n\nexport_to_iges\n\nExport the design to an IGES file.\n\nexport_to_pmdb\n\nExport the design to a PMDB file.\n\ncreate_named_selection\n\nCreate a named selection on the active Geometry server instance.\n\ndelete_named_selection\n\nDelete a named selection on the active Geometry server instance.\n\ndelete_component\n\nDelete a component (itself or its children).\n\nset_shared_topology\n\nSet the shared topology to apply to the component.\n\nadd_beam_circular_profile\n\nAdd a new beam circular profile under the design for creating beams.\n\nget_all_parameters\n\nGet parameters for the design.\n\nset_parameter\n\nSet or update a parameter of the design.\n\nadd_midsurface_thickness\n\nAdd a mid-surface thickness to a list of bodies.\n\nadd_midsurface_offset\n\nAdd a mid-surface offset type to a list of bodies.\n\ndelete_beam_profile\n\nRemove a beam profile on the active geometry server instance.\n\ninsert_file\n\nInsert a file into the design.\n\nget_raw_tessellation\n\nTessellate the entire design and return the geometry as triangles.\n\nProperties\n\n\n\n\n\ndesign_id\n\nThe design’s object unique id.\n\nmaterials\n\nList of materials available for the design.\n\nnamed_selections\n\nList of named selections available for the design.\n\nbeam_profiles\n\nList of beam profile available for the design.\n\nparameters\n\nList of parameters available for the design.\n\nis_active\n\nWhether the design is currently active.\n\nis_closed\n\nWhether the design is closed (i.e. not active).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the Design as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/Design.html#import-detail","title":"Design > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/Design.html#property-detail","title":"Design > Property detail","text":"Property detail\n\n\n\nproperty Design.design_id: str\n\nThe design’s object unique id.\n\n\n\nproperty Design.materials: list[ansys.geometry.core.materials.material.Material]\n\nList of materials available for the design.\n\n\n\nproperty Design.named_selections: list[ansys.geometry.core.designer.selection.NamedSelection]\n\nList of named selections available for the design.\n\n\n\nproperty Design.beam_profiles: list[ansys.geometry.core.designer.beam.BeamProfile]\n\nList of beam profile available for the design.\n\n\n\nproperty Design.parameters: list[ansys.geometry.core.parameters.parameter.Parameter]\n\nList of parameters available for the design.\n\n\n\nproperty Design.is_active: bool\n\nWhether the design is currently active.\n\n\n\nproperty Design.is_closed: bool\n\nWhether the design is closed (i.e. not active)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/Design.html#method-detail","title":"Design > Method detail","text":"Method detail\n\n\n\nDesign.close() -> None\n\nClose the design.\n\n\n\nDesign.add_material(material: ansys.geometry.core.materials.material.Material) -> None\n\nAdd a material to the design.\n\nParameters\n\nmaterial\n\nMaterial\n\nMaterial to add.\n\n\n\nDesign.remove_material(material: ansys.geometry.core.materials.material.Material | list[ansys.geometry.core.materials.material.Material]) -> None\n\nRemove a material from the design.\n\nParameters\n\nmaterial\n\nMaterial | python:list[Material]\n\nMaterial or list of materials to remove.\n\n\n\nDesign.save(file_location: pathlib.Path | str, write_body_facets: bool = False) -> None\n\nSave a design to disk on the active Geometry server instance.\n\nParameters\n\nfile_location\n\nPath | python:str\n\nLocation on disk to save the file to.\n\nwrite_body_facets\n\nbool, default: python:False\n\nOption to write body facets into the saved file. 26R1 and later.\n\n\n\nDesign.download(file_location: pathlib.Path | str, format: DesignFileFormat = DesignFileFormat.SCDOCX, write_body_facets: bool = False) -> None\n\nExport and download the design from the server.\n\nParameters\n\nfile_location\n\nPath | python:str\n\nLocation on disk to save the file to.\n\nformat\n\nDesignFileFormat, default: DesignFileFormat.SCDOCX\n\nFormat for the file to save to.\n\nwrite_body_facets\n\nbool, default: python:False\n\nOption to write body facets into the saved file. SCDOCX and DISCO only, 26R1 and later.\n\n\n\nDesign.export_to_scdocx(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to an scdocx file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_disco(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to an dsco file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_stride(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to an stride file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_parasolid_text(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to a Parasolid text file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_parasolid_bin(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to a Parasolid binary file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_fmd(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to an FMD file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_step(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to a STEP file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_iges(location: pathlib.Path | str = None) -> pathlib.Path\n\nExport the design to an IGES file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.export_to_pmdb(location: pathlib.Path | str | None = None) -> pathlib.Path\n\nExport the design to a PMDB file.\n\nParameters\n\nlocation\n\nPath | python:str, optional\n\nLocation on disk to save the file to. If None, the file will be saved\nin the current working directory.\n\nReturns\n\nPath\n\nThe path to the saved file.\n\n\n\nDesign.create_named_selection(name: str, bodies: list[ansys.geometry.core.designer.body.Body] | None = None, faces: list[ansys.geometry.core.designer.face.Face] | None = None, edges: list[ansys.geometry.core.designer.edge.Edge] | None = None, beams: list[ansys.geometry.core.designer.beam.Beam] | None = None, design_points: list[ansys.geometry.core.designer.designpoint.DesignPoint] | None = None, components: list[ansys.geometry.core.designer.component.Component] | None = None, vertices: list[ansys.geometry.core.designer.vertex.Vertex] | None = None) -> ansys.geometry.core.designer.selection.NamedSelection\n\nCreate a named selection on the active Geometry server instance.\n\nParameters\n\nname\n\npython:str\n\nUser-defined name for the named selection.\n\nbodies\n\npython:list[Body], default: python:None\n\nAll bodies to include in the named selection.\n\nfaces\n\npython:list[Face], default: python:None\n\nAll faces to include in the named selection.\n\nedges\n\npython:list[Edge], default: python:None\n\nAll edges to include in the named selection.\n\nbeams\n\npython:list[Beam], default: python:None\n\nAll beams to include in the named selection.\n\ndesign_points\n\npython:list[DesignPoint], default: python:None\n\nAll design points to include in the named selection.\n\ncomponents\n\npython:list[Component], default: python:None\n\nAll components to include in the named selection.\n\nvertices\n\npython:list[Vertex], default: python:None\n\nAll vertices to include in the named selection.\n\nReturns\n\nNamedSelection\n\nNewly created named selection that maintains references to all target entities.\n\nRaises\n\nValueError\n\nIf no entities are provided for the named selection. At least\none of the optional parameters must be provided.\n\n\n\nDesign.delete_named_selection(named_selection: ansys.geometry.core.designer.selection.NamedSelection | str) -> None\n\nDelete a named selection on the active Geometry server instance.\n\nParameters\n\nnamed_selection\n\nNamedSelection | python:str\n\nName of the named selection or instance.\n\n\n\nDesign.delete_component(component: ansys.geometry.core.designer.component.Component | str) -> None\n\nDelete a component (itself or its children).\n\nParameters\n\nid\n\nUnion[Component, python:str]\n\nName of the component or instance to delete.\n\nRaises\n\nValueError\n\nThe design itself cannot be deleted.\n\nNotes\n\nIf the component is not this component (or its children), it\nis not deleted.\n\n\n\nDesign.set_shared_topology(share_type: ansys.geometry.core.designer.component.SharedTopologyType) -> None\n\nSet the shared topology to apply to the component.\n\nParameters\n\nshare_type\n\nSharedTopologyType\n\nShared topology type to assign.\n\nRaises\n\nValueError\n\nShared topology does not apply to a design.\n\n\n\nDesign.add_beam_circular_profile(name: str, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance, center: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D = ZERO_POINT3D, direction_x: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, direction_y: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Y) -> ansys.geometry.core.designer.beam.BeamCircularProfile\n\nAdd a new beam circular profile under the design for creating beams.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new beam circular profile.\n\nradius\n\nQuantity | Distance\n\nRadius of the beam circular profile.\n\ncenter\n\nndarray | RealSequence | Point3D\n\nCenter of the beam circular profile.\n\ndirection_x\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-plane direction.\n\ndirection_y\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nY-plane direction.\n\n\n\nDesign.get_all_parameters() -> list[ansys.geometry.core.parameters.parameter.Parameter]\n\nGet parameters for the design.\n\nReturns\n\npython:list[Parameter]\n\nList of parameters for the design.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nDesign.set_parameter(dimension: ansys.geometry.core.parameters.parameter.Parameter) -> ansys.geometry.core.parameters.parameter.ParameterUpdateStatus\n\nSet or update a parameter of the design.\n\nParameters\n\ndimension\n\nParameter\n\nParameter to set.\n\nReturns\n\nParameterUpdateStatus\n\nStatus of the update operation.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nDesign.add_midsurface_thickness(thickness: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, bodies: list[ansys.geometry.core.designer.body.Body]) -> None\n\nAdd a mid-surface thickness to a list of bodies.\n\nParameters\n\nthickness\n\nQuantity\n\nThickness to be assigned.\n\nbodies\n\npython:list[Body]\n\nAll bodies to include in the mid-surface thickness assignment.\n\nNotes\n\nOnly surface bodies will be eligible for mid-surface thickness assignment.\n\n\n\nDesign.add_midsurface_offset(offset_type: ansys.geometry.core.designer.body.MidSurfaceOffsetType, bodies: list[ansys.geometry.core.designer.body.Body]) -> None\n\nAdd a mid-surface offset type to a list of bodies.\n\nParameters\n\noffset_type\n\nMidSurfaceOffsetType\n\nSurface offset to be assigned.\n\nbodies\n\npython:list[Body]\n\nAll bodies to include in the mid-surface offset assignment.\n\nNotes\n\nOnly surface bodies will be eligible for mid-surface offset assignment.\n\n\n\nDesign.delete_beam_profile(beam_profile: ansys.geometry.core.designer.beam.BeamProfile | str) -> None\n\nRemove a beam profile on the active geometry server instance.\n\nParameters\n\nbeam_profile\n\nBeamProfile | python:str\n\nA beam profile name or instance that should be deleted.\n\n\n\nDesign.insert_file(file_location: pathlib.Path | str, import_options: ansys.geometry.core.misc.options.ImportOptions = ImportOptions()) -> ansys.geometry.core.designer.component.Component\n\nInsert a file into the design.\n\nParameters\n\nfile_location\n\nPath | python:str\n\nLocation on disk where the file is located.\n\nimport_options\n\nImportOptions\n\nThe options to pass into upload file\n\nReturns\n\nComponent\n\nThe newly inserted component.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nDesign.get_raw_tessellation(tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> dict\n\nTessellate the entire design and return the geometry as triangles.\n\nParameters\n\ntess_options\n\nTessellationOptions, optional\n\nOptions for the tessellation. If None, default options are used.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the cache before performing the tessellation.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include faces in the tessellation.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edges in the tessellation.\n\nReturns\n\npython:dict\n\nA dictionary with body IDs as keys and another dictionary as values.\nThe inner dictionary has face and edge IDs as keys and the corresponding face/vertice\narrays as values.\n\n\n\nDesign.__repr__() -> str\n\nRepresent the Design as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/GRPCDrivingDimensionsServiceV1.html#grpcdrivingdimensionsservicev1","title":"GRPCDrivingDimensionsServiceV1","text":"GRPCDrivingDimensionsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.driving_dimensions.GRPCDrivingDimensionsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.driving_dimensions.GRPCDrivingDimensionsService\n\nDriving Dimensions service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nDriving Dimensions service. It is specifically designed for the v1 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/GRPCDrivingDimensionsServiceV1.html#overview","title":"GRPCDrivingDimensionsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_all_parameters\n\nGet driving dimensions.\n\nset_parameter\n\nSet driving dimensions.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/GRPCDrivingDimensionsServiceV1.html#import-detail","title":"GRPCDrivingDimensionsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/GRPCDrivingDimensionsServiceV1.html#attribute-detail","title":"GRPCDrivingDimensionsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDrivingDimensionsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/GRPCDrivingDimensionsServiceV1.html#method-detail","title":"GRPCDrivingDimensionsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDrivingDimensionsServiceV1.get_all_parameters(**kwargs) -> dict\n\nGet driving dimensions.\n\n\n\nabstractmethod GRPCDrivingDimensionsServiceV1.set_parameter(**kwargs) -> dict\n\nSet driving dimensions."},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#sketching-basic-usage","title":"Examples > Sketching: Basic usage","text":"Sketching: Basic usage\n\nThis example shows how to use basic PyAnsys Geometry sketching capabilities."},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#perform-required-imports","title":"Examples > Sketching: Basic usage > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#create-a-sketch","title":"Examples > Sketching: Basic usage > Create a sketch","text":"Create a sketch\n\nSketches are fundamental objects for drawing basic shapes like lines, segments, circles, ellipses, arcs, and polygons.\n\nYou create a Sketch instance by defining a drawing plane. To define a plane, you declare a point and two fundamental orthogonal directions.\n\n\n\n\n\nDefine a plane for creating a sketch.\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-shapes","title":"Examples > Sketching: Basic usage > Draw shapes","text":"Draw shapes\n\nTo draw different shapes in the sketch, you use draw methods."},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-a-circle","title":"Examples > Sketching: Basic usage > Draw a circle","text":"Draw a circle\n\nYou draw a circle in a sketch by specifying the center and radius.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-an-ellipse","title":"Examples > Sketching: Basic usage > Draw an ellipse","text":"Draw an ellipse\n\nYou draw an ellipse in a sketch by specifying the center, major radius, and minor radius.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-a-polygon","title":"Examples > Sketching: Basic usage > Draw a polygon","text":"Draw a polygon\n\nYou draw a regular polygon by specifying the center, radius, and desired number of sides.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-an-arc","title":"Examples > Sketching: Basic usage > Draw an arc","text":"Draw an arc\n\nYou draw an arc of circumference by specifying the center, starting point, and ending point.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are also additional ways to draw arcs, such as by specifying the start, center point, and angle.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOr by specifying the start, end point, and radius.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-a-slot","title":"Examples > Sketching: Basic usage > Draw a slot","text":"Draw a slot\n\nYou draw a slot by specifying the center, width, and height.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-a-box","title":"Examples > Sketching: Basic usage > Draw a box","text":"Draw a box\n\nYou draw a box by specifying the center, width, and height.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#draw-a-segment","title":"Examples > Sketching: Basic usage > Draw a segment","text":"Draw a segment\n\nYou draw a segment by specifying the starting point and ending point.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/basic_usage.html#plot-the-sketch","title":"Examples > Sketching: Basic usage > Plot the sketch","text":"Plot the sketch\n\nThe Plotter class provides capabilities for plotting different PyAnsys Geometry objects. PyAnsys Geometry uses PyVista as the visualization backend.\n\nYou use the plot_sketch method to plot a sketch. This method accepts a Sketch instance and some extra arguments to further customize the visualization of the sketch. These arguments include showing the plane of the sketch and its frame.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/typing/index.html#the-typingpy-module","title":"The typing.py module","text":"The typing.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/typing/index.html#summary","title":"The typing.py module > Summary","text":"Summary\n\nAttributes\n\n\n\n\n\nReal\n\nType used to refer to both integers and floats as possible values.\n\nRealSequence\n\nType used to refer to Real types as a Sequence type."},{"objectID":"Home","href":"api/ansys/geometry/core/typing/index.html#description","title":"The typing.py module > Description","text":"Description\n\nProvides typing of values for PyAnsys Geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/typing/index.html#module-detail","title":"The typing.py module > Module detail","text":"Module detail\n\n\n\ntyping.Real\n\nType used to refer to both integers and floats as possible values.\n\n\n\ntyping.RealSequence\n\nType used to refer to Real types as a Sequence type.\n\nNotes\n\nnumpy.ndarrays are also accepted because they are\nthe overlaying data structure behind most PyAnsys Geometry objects."},{"objectID":"Home","href":"getting_started/faq.html#frequently-asked-questions","title":"Frequently asked questions","text":"Frequently asked questions"},{"objectID":"Home","href":"getting_started/faq.html#what-is-pyansys","title":"Frequently asked questions > What is PyAnsys?","text":"What is PyAnsys?\n\nPyAnsys is a set of open source Python libraries that allow you to interface\nwith Ansys Electronics Desktop (AEDT), Ansys Mechanical, Ansys Parametric\nDesign Language (APDL), Ansys Fluent, and other Ansys products.\n\nYou can use PyAnsys libraries within a Python environment of your choice\nin conjunction with external Python libraries."},{"objectID":"Home","href":"getting_started/faq.html#how-is-the-ansys-geometry-service-installed","title":"Frequently asked questions > How is the Ansys Geometry Service installed?","text":"How is the Ansys Geometry Service installed?\n\nThis question is answered in https://github.com/ansys/pyansys-geometry/issues/1022 and\nhttps://github.com/ansys/pyansys-geometry/discussions/883\n\nThe Ansys Geometry service is available as a standalone service and it is installed\nthrough the Ansys unified installer or the automated installer. Both are available\nfor download from the Ansys Customer Portal.\n\nWhen using the unified or automated installer, it is necessary to pass in the\n-geometryservice flag to install it.\n\nOverall, the command to install the Ansys Geometry service with the unified installer is:\n\nYou can verify that the installation was successful by checking whether the\nproduct has been installed on your file directory. If you are using the default\ninstallation directory, the product is installed in the following directory:\n\nWhere vXXX is the Ansys version that you have installed."},{"objectID":"Home","href":"getting_started/faq.html#what-ansys-license-is-needed-to-run-the-geometry-service","title":"Frequently asked questions > What Ansys license is needed to run the Geometry service?","text":"What Ansys license is needed to run the Geometry service?\n\nThis question is answered in https://github.com/ansys/pyansys-geometry/discussions/754.\n\nThe Ansys Geometry service is a headless service developed on top of the\nmodeling libraries for Discovery and SpaceClaim.\n\nBoth in its standalone and Docker versions, the Ansys Geometry service\nrequires a Discovery Modeling license to run.\n\nTo run PyAnsys Geometry against other backends, such as Discovery\nor SpaceClaim, users must have an Ansys license that allows them to run these\nAnsys products.\n\nThe Discovery Modeling license is one of these licenses, but there are others,\nsuch as the Ansys Mechanical Enterprise license, that also allow users to run\nthese Ansys products. However, the Geometry service is only compatible with\nthe Discovery Modeling license."},{"objectID":"Home","href":"getting_started/faq.html#how-to-build-the-docker-image-for-the-ansys-geometry-service","title":"Frequently asked questions > How to build the Docker image for the Ansys Geometry service?","text":"How to build the Docker image for the Ansys Geometry service?\n\nThis question is answered in https://github.com/ansys/pyansys-geometry/discussions/883\n\nTo build your own Docker image for the Ansys Geometry service, users should follow\nthe instructions provided in ref_build_windows_docker_image_from_ansys_installation. The\nresulting image is a Windows-based Docker image that contains the Ansys Geometry\nservice.\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/GRPCDrivingDimensionsServiceV0.html#grpcdrivingdimensionsservicev0","title":"GRPCDrivingDimensionsServiceV0","text":"GRPCDrivingDimensionsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.driving_dimensions.GRPCDrivingDimensionsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.driving_dimensions.GRPCDrivingDimensionsService\n\nDriving Dimension service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ndriving dimension service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/GRPCDrivingDimensionsServiceV0.html#overview","title":"GRPCDrivingDimensionsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_all_parameters\n\nGet driving dimensions.\n\nset_parameter\n\nSet driving dimensions.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/GRPCDrivingDimensionsServiceV0.html#import-detail","title":"GRPCDrivingDimensionsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/GRPCDrivingDimensionsServiceV0.html#attribute-detail","title":"GRPCDrivingDimensionsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDrivingDimensionsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/GRPCDrivingDimensionsServiceV0.html#method-detail","title":"GRPCDrivingDimensionsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCDrivingDimensionsServiceV0.get_all_parameters(**kwargs) -> dict\n\nGet driving dimensions.\n\n\n\nGRPCDrivingDimensionsServiceV0.set_parameter(**kwargs) -> dict\n\nSet driving dimensions."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/GRPCCurvesServiceV1.html#grpccurvesservicev1","title":"GRPCCurvesServiceV1","text":"GRPCCurvesServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.curves.GRPCCurvesServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.curves.GRPCCurvesService\n\nCurves service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ncurves service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/GRPCCurvesServiceV1.html#overview","title":"GRPCCurvesServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nrevolve_edges\n\nRevolve edges around an axis to create a surface of revolution.\n\nintersect_curves\n\nGet intersection points of curves.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/GRPCCurvesServiceV1.html#import-detail","title":"GRPCCurvesServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/GRPCCurvesServiceV1.html#attribute-detail","title":"GRPCCurvesServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCurvesServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/GRPCCurvesServiceV1.html#method-detail","title":"GRPCCurvesServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCurvesServiceV1.revolve_edges(**kwargs) -> dict\n\nRevolve edges around an axis to create a surface of revolution.\n\n\n\nabstractmethod GRPCCurvesServiceV1.intersect_curves(**kwargs) -> dict\n\nGet intersection points of curves."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InterferenceProblemAreas.html#interferenceproblemareas","title":"InterferenceProblemAreas","text":"InterferenceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.InterferenceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, bodies: list[ansys.geometry.core.designer.body.Body])\n\nBases: ProblemArea\n\nRepresents an interference problem area with a unique identifier and associated bodies.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nbodies\n\npython:list[Body]\n\nList of bodies in the problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InterferenceProblemAreas.html#overview","title":"InterferenceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nbodies\n\nThe list of the bodies connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InterferenceProblemAreas.html#import-detail","title":"InterferenceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InterferenceProblemAreas.html#property-detail","title":"InterferenceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty InterferenceProblemAreas.bodies: list[ansys.geometry.core.designer.body.Body]\n\nThe list of the bodies connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InterferenceProblemAreas.html#method-detail","title":"InterferenceProblemAreas > Method detail","text":"Method detail\n\n\n\nInterferenceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies.\n\nNotes\n\nThe current implementation does not properly track changes.\nThe list of created and modified bodies are empty."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/OffsetMode.html#offsetmode","title":"OffsetMode","text":"OffsetMode\n\n\n\nclass ansys.geometry.core.designer.geometry_commands.OffsetMode(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for offset modes during extrusions."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/OffsetMode.html#overview","title":"OffsetMode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nIGNORE_RELATIONSHIPS\n\n\n\nMOVE_FACES_TOGETHER\n\n\n\nMOVE_FACES_APART\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/OffsetMode.html#import-detail","title":"OffsetMode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/OffsetMode.html#attribute-detail","title":"OffsetMode > Attribute detail","text":"Attribute detail\n\n\n\nOffsetMode.IGNORE_RELATIONSHIPS = 0\n\n\n\n\n\nOffsetMode.MOVE_FACES_TOGETHER = 1\n\n\n\n\n\nOffsetMode.MOVE_FACES_APART = 2\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/index.html#the-parameterpy-module","title":"The parameter.py module","text":"The parameter.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/index.html#summary","title":"The parameter.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nParameter\n\nRepresents a parameter.\n\nEnums\n\n\n\n\n\nParameterType\n\nProvides values for the parameter types supported.\n\nParameterUpdateStatus\n\nProvides values for the status messages associated with parameter updates.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/index.html#description","title":"The parameter.py module > Description","text":"Description\n\nProvides get and set methods for parameters."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/GRPCPrepareToolsServiceV0.html#grpcpreparetoolsservicev0","title":"GRPCPrepareToolsServiceV0","text":"GRPCPrepareToolsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.prepare_tools.GRPCPrepareToolsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.prepare_tools.GRPCPrepareToolsService\n\nPrepare tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nPrepare Tools service. It is specifically designed for the v0 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/GRPCPrepareToolsServiceV0.html#overview","title":"GRPCPrepareToolsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nextract_volume_from_faces\n\nExtract a volume from input faces.\n\nextract_volume_from_edge_loops\n\nExtract a volume from input edge loop.\n\nremove_rounds\n\nRemove rounds from geometry.\n\nshare_topology\n\nShare topology between the given bodies.\n\nenhanced_share_topology\n\nShare topology between the given bodies.\n\nfind_logos\n\nDetect logos in geometry.\n\nfind_and_remove_logos\n\nDetect and remove logos in geometry.\n\nremove_logo\n\nRemove logos in geometry.\n\ndetect_helixes\n\nDetect helixes in geometry.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/GRPCPrepareToolsServiceV0.html#import-detail","title":"GRPCPrepareToolsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/GRPCPrepareToolsServiceV0.html#attribute-detail","title":"GRPCPrepareToolsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPrepareToolsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/GRPCPrepareToolsServiceV0.html#method-detail","title":"GRPCPrepareToolsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCPrepareToolsServiceV0.extract_volume_from_faces(**kwargs) -> dict\n\nExtract a volume from input faces.\n\n\n\nGRPCPrepareToolsServiceV0.extract_volume_from_edge_loops(**kwargs) -> dict\n\nExtract a volume from input edge loop.\n\n\n\nGRPCPrepareToolsServiceV0.remove_rounds(**kwargs) -> dict\n\nRemove rounds from geometry.\n\n\n\nGRPCPrepareToolsServiceV0.share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nGRPCPrepareToolsServiceV0.enhanced_share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nGRPCPrepareToolsServiceV0.find_logos(**kwargs) -> dict\n\nDetect logos in geometry.\n\n\n\nGRPCPrepareToolsServiceV0.find_and_remove_logos(**kwargs) -> dict\n\nDetect and remove logos in geometry.\n\n\n\nGRPCPrepareToolsServiceV0.remove_logo(**kwargs)\n\nRemove logos in geometry.\n\n\n\nGRPCPrepareToolsServiceV0.detect_helixes(**kwargs) -> dict\n\nDetect helixes in geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/Body.html#body","title":"Body","text":"Body\n\n\n\nclass ansys.geometry.core.designer.body.Body(id, name, parent_component: ansys.geometry.core.designer.component.Component, template: MasterBody)\n\nBases: IBody\n\nRepresents solids and surfaces organized within the design assembly.\n\nSolids and surfaces synchronize to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the body.\n\nname\n\npython:str\n\nUser-defined label for the body.\n\nparent_component\n\nComponent\n\nParent component to place the new component under within the design assembly.\n\ntemplate\n\nMasterBody\n\nMaster body that this body is an occurrence of."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/Body.html#overview","title":"Body > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nreset_tessellation_cache\n\nDecorate Body methods that require a tessellation cache update.\n\nassign_material\n\nAssign a material against the active design.\n\nget_assigned_material\n\nGet the assigned material of the body.\n\nremove_assigned_material\n\nRemove the material assigned to the body.\n\nadd_midsurface_thickness\n\nAdd a mid-surface thickness to a surface body.\n\nadd_midsurface_offset\n\nAdd a mid-surface offset to a surface body.\n\nimprint_curves\n\nImprint curves onto the specified faces using a sketch or edges.\n\nproject_curves\n\nProject all specified geometries onto the body.\n\nimprint_projected_curves\n\nProject and imprint specified geometries onto the body.\n\nset_name\n\nSet the name of the body.\n\nset_fill_style\n\nSet the fill style of the body.\n\nset_suppressed\n\nSet the body suppression state.\n\nset_color\n\nSet the color of the body.\n\ntranslate\n\nTranslate the body in a specified direction and distance.\n\nrotate\n\nRotate the geometry body around the specified axis by a given angle.\n\nscale\n\nScale the geometry body by the given value.\n\nmap\n\nMap the geometry body to the new specified frame.\n\nmirror\n\nMirror the geometry body across the specified plane.\n\nget_collision\n\nGet the collision state between bodies.\n\ncopy\n\nCreate a copy of the body under the specified parent.\n\nget_raw_tessellation\n\nTessellate the body and return the raw tessellation data.\n\ntessellate\n\nTessellate the body and return the geometry as triangles.\n\nshell_body\n\nShell the body to the thickness specified.\n\nremove_faces\n\nShell by removing a given set of faces.\n\nplot\n\nPlot the body.\n\nintersect\n\nIntersect two (or more) bodies.\n\nsubtract\n\nSubtract two (or more) bodies.\n\nunite\n\nUnite two (or more) bodies.\n\ncombine_merge\n\nCombine this body with another body or bodies, merging them into a single body.\n\nProperties\n\n\n\n\n\nid\n\nGet the ID of the body as a string.\n\nname\n\nGet the name of the body.\n\nfill_style\n\nGet the fill style of the body.\n\nis_suppressed\n\nGet the body suppression state.\n\ncolor\n\nGet the color of the body.\n\nopacity\n\nGet the float value of the opacity for the body.\n\nparent_component\n\n\n\nfaces\n\nGet a list of all faces within the body.\n\nedges\n\nGet a list of all edges within the body.\n\nvertices\n\nGet a list of all vertices within the body.\n\nis_alive\n\nCheck if the body is still alive and has not been deleted.\n\nis_surface\n\nCheck if the body is a planar body.\n\nsurface_thickness\n\nGet the surface thickness of a surface body.\n\nsurface_offset\n\nGet the surface offset type of a surface body.\n\nvolume\n\nCalculate the volume of the body.\n\nmaterial\n\nGet the assigned material of the body.\n\nbounding_box\n\nGet the bounding box of the body.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the Body as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/Body.html#import-detail","title":"Body > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/Body.html#property-detail","title":"Body > Property detail","text":"Property detail\n\n\n\nproperty Body.id: str\n\nGet the ID of the body as a string.\n\n\n\nproperty Body.name: str\n\nGet the name of the body.\n\n\n\nproperty Body.fill_style: str\n\nGet the fill style of the body.\n\n\n\nproperty Body.is_suppressed: bool\n\nGet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nproperty Body.color: str\n\nGet the color of the body.\n\n\n\nproperty Body.opacity: float\n\nGet the float value of the opacity for the body.\n\n\n\nproperty Body.parent_component: ansys.geometry.core.designer.component.Component\n\n\n\n\n\nproperty Body.faces: list[ansys.geometry.core.designer.face.Face]\n\nGet a list of all faces within the body.\n\nReturns\n\npython:list[Face]\n\n\n\n\n\nproperty Body.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nGet a list of all edges within the body.\n\nReturns\n\npython:list[Edge]\n\n\n\n\n\nproperty Body.vertices: list[ansys.geometry.core.designer.vertex.Vertex]\n\nGet a list of all vertices within the body.\n\nReturns\n\npython:list[Vertex]\n\n\n\n\n\nproperty Body.is_alive: bool\n\nCheck if the body is still alive and has not been deleted.\n\n\n\nproperty Body.is_surface: bool\n\nCheck if the body is a planar body.\n\n\n\nproperty Body.surface_thickness: pint.Quantity | None\n\nGet the surface thickness of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface thickness.\n\n\n\nproperty Body.surface_offset: MidSurfaceOffsetType | None\n\nGet the surface offset type of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface offset.\n\n\n\nproperty Body.volume: pint.Quantity\n\nCalculate the volume of the body.\n\nNotes\n\nWhen dealing with a planar surface, a value of 0 is returned as a volume.\n\n\n\nproperty Body.material: ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nproperty Body.bounding_box: ansys.geometry.core.math.bbox.BoundingBox\n\nGet the bounding box of the body.\n\nReturns\n\nBoundingBox\n\nBounding box of the body.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/Body.html#method-detail","title":"Body > Method detail","text":"Method detail\n\n\n\nBody.reset_tessellation_cache()\n\nDecorate Body methods that require a tessellation cache update.\n\nParameters\n\nfunc\n\nmethod\n\nMethod to call.\n\nReturns\n\nAny\n\nOutput of the method, if any.\n\n\n\nBody.assign_material(material: ansys.geometry.core.materials.material.Material) -> None\n\nAssign a material against the active design.\n\nParameters\n\nmaterial\n\nMaterial\n\nSource material data.\n\n\n\nBody.get_assigned_material() -> ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nBody.remove_assigned_material()\n\nRemove the material assigned to the body.\n\n\n\nBody.add_midsurface_thickness(thickness: pint.Quantity) -> None\n\nAdd a mid-surface thickness to a surface body.\n\nParameters\n\nthickness\n\nDistance | Quantity | Real\n\nThickness to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface thickness assignment.\n\n\n\nBody.add_midsurface_offset(offset: MidSurfaceOffsetType) -> None\n\nAdd a mid-surface offset to a surface body.\n\nParameters\n\noffset_type\n\nMidSurfaceOffsetType\n\nSurface offset to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface offset assignment.\n\n\n\nBody.imprint_curves(faces: list[ansys.geometry.core.designer.face.Face], sketch: ansys.geometry.core.sketch.sketch.Sketch = None, trimmed_curves: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve] = None) -> tuple[list[ansys.geometry.core.designer.edge.Edge], list[ansys.geometry.core.designer.face.Face]]\n\nImprint curves onto the specified faces using a sketch or edges.\n\nParameters\n\nfaces\n\npython:list[Face]\n\nThe list of faces to imprint the curves onto.\n\nsketch\n\nSketch, optional\n\nThe sketch containing curves to imprint.\n\ntrimmed_curves\n\npython:list[TrimmedCurve], optional\n\nThe list of curves to be imprinted. If sketch is provided, this parameter is ignored.\n\nReturns\n\npython:tuple[python:list[Edge], python:list[Face]]\n\nA tuple containing the list of new edges and faces created by the imprint operation.\n\n\n\nBody.project_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject all specified geometries onto the body.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll faces from the project curves operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nBody.imprint_projected_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject and imprint specified geometries onto the body.\n\nThis method combines the project_curves() and imprint_curves() method into\none method. It has higher performance than calling them back-to-back when dealing\nwith many curves. Because it is a specialized function, this method only returns\nthe faces (and not the edges) from the imprint operation.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll imprinted faces from the operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nBody.set_name(name: str) -> None\n\nSet the name of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nBody.set_fill_style(fill_style: FillStyle) -> None\n\nSet the fill style of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nBody.set_suppressed(suppressed: bool) -> None\n\nSet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nBody.set_color(color: str | tuple[float, float, float] | tuple[float, float, float, float]) -> None\n\nSet the color of the body.\n\nParameters\n\ncolor\n\npython:str | python:tuple[python:float, python:float, python:float] | python:tuple[python:float, python:float, python:float, python:float]\n\nColor to set the body to. This can be a string representing a color name\nor a tuple of RGB values in the range [0, 1] (RGBA) or [0, 255] (pure RGB).\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nBody.translate(direction: ansys.geometry.core.math.vector.UnitVector3D, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> None\n\nTranslate the body in a specified direction and distance.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the translation.\n\ndistance: ~pint.Quantity | Distance | Real\n\nDistance (magnitude) of the translation.\n\n\n\nBody.rotate(axis_origin: ansys.geometry.core.math.point.Point3D, axis_direction: ansys.geometry.core.math.vector.UnitVector3D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real) -> None\n\nRotate the geometry body around the specified axis by a given angle.\n\nParameters\n\naxis_origin: Point3D\n\nOrigin of the rotational axis.\n\naxis_direction: UnitVector3D\n\nThe axis of rotation.\n\nangle: ~pint.Quantity | Angle | Real\n\nAngle (magnitude) of the rotation.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nBody.scale(value: ansys.geometry.core.typing.Real) -> None\n\nScale the geometry body by the given value.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nvalue: Real\n\nValue to scale the body by.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nBody.map(frame: ansys.geometry.core.math.frame.Frame) -> None\n\nMap the geometry body to the new specified frame.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nframe: Frame\n\nStructure defining the orientation of the body.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nBody.mirror(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nMirror the geometry body across the specified plane.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nplane: Plane\n\nRepresents the mirror.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nBody.get_collision(body: Body) -> CollisionType\n\nGet the collision state between bodies.\n\nParameters\n\nbody: Body\n\nObject that the collision state is checked with.\n\nReturns\n\nCollisionType\n\nEnum that defines the collision state between bodies.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nBody.copy(parent: ansys.geometry.core.designer.component.Component, name: str = None) -> Body\n\nCreate a copy of the body under the specified parent.\n\nParameters\n\nparent: Component\n\nParent component to place the new body under within the design assembly.\n\nname: str\n\nName to give the new body.\n\nReturns\n\nBody\n\nCopy of the body.\n\n\n\nBody.get_raw_tessellation(tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> dict\n\nTessellate the body and return the raw tessellation data.\n\nParameters\n\ntransform\n\nMatrix44, default: IDENTITY_MATRIX44\n\nA transformation matrix to apply to the tessellation.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\npython:dict\n\nDictionary with face and edge IDs as keys and face and edge tessellation data as values.\n\n\n\nBody.tessellate(merge: bool = False, tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> pyvista.PolyData | pyvista.MultiBlock\n\nTessellate the body and return the geometry as triangles.\n\nParameters\n\nmerge\n\nbool, default: python:False\n\nWhether to merge the body into a single mesh. When False (default), the\nnumber of triangles are preserved and only the topology is merged.\nWhen True, the individual faces of the tessellation are merged.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\nPolyData, MultiBlock\n\nMerged pyvista.PolyData if merge=True or a composite dataset.\n\nExamples\n\nExtrude a box centered at the origin to create a rectangular body and\ntessellate it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> my_comp = design.add_component(\"my-comp\")\n>>> body = my_comp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> blocks = body.tessellate()\n>>> blocks\n>>> MultiBlock(0x7F94EC757460)\n     N Blocks:  6\n     X Bounds:  0.000, 4.000\n     Y Bounds:  -1.000, 0.000\n     Z Bounds:  -0.500, 4.500\n\nMerge the body:\n\n>>> mesh = body.tessellate(merge=True)\n>>> mesh\nPolyData (0x7f94ec75f3a0)\n  N Cells:      12\n  N Points:     24\n  X Bounds:     0.000e+00, 4.000e+00\n  Y Bounds:     -1.000e+00, 0.000e+00\n  Z Bounds:     -5.000e-01, 4.500e+00\n  N Arrays:     0\n\n\n\nBody.shell_body(offset: ansys.geometry.core.typing.Real) -> bool\n\nShell the body to the thickness specified.\n\nParameters\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nBody.remove_faces(selection: ansys.geometry.core.designer.face.Face | collections.abc.Iterable[ansys.geometry.core.designer.face.Face], offset: ansys.geometry.core.typing.Real) -> bool\n\nShell by removing a given set of faces.\n\nParameters\n\nselection\n\nFace | Iterable[Face]\n\nFace or faces to be removed.\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nBody.plot(merge: bool = True, screenshot: str | None = None, use_trame: bool | None = None, use_service_colors: bool | None = None, **plotting_options: dict | None) -> None\n\nPlot the body.\n\nParameters\n\nmerge\n\nbool, default: python:True\n\nWhether to merge the body into a single mesh. Performance improved when True.\nWhen True (default), the individual faces of the tessellation are merged.\nWhen False, the number of triangles are preserved and only the topology\nis merged.\n\nscreenshot\n\npython:str, default: python:None\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enable the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\nuse_service_colors\n\nbool, default: python:None\n\nWhether to use the colors assigned to the body in the service. The default\nis None, in which case the ansys.geometry.core.USE_SERVICE_COLORS\nglobal setting is used.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for plotting. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\nExamples\n\nExtrude a box centered at the origin to create rectangular body and\nplot it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> mycomp = design.add_component(\"my-comp\")\n>>> body = mycomp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> body.plot()\n\nPlot the body and color each face individually:\n\n>>> body.plot(multi_colors=True)\n\n\n\nBody.intersect(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nIntersect two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to intersect with.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the intersected body or not.\n\nRaises\n\nValueError\n\nIf the bodies do not intersect.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe intersected body is retained.\n\n\n\nBody.subtract(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nSubtract two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to subtract from the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the subtracted body or not.\n\nRaises\n\nValueError\n\nIf the subtraction results in an empty (complete) subtraction.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe subtracted body is retained.\n\n\n\nBody.unite(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nUnite two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to unite with the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the united body or not.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe united body is retained.\n\n\n\nBody.combine_merge(other: Body | list[Body]) -> None\n\nCombine this body with another body or bodies, merging them into a single body.\n\nParameters\n\nother\n\nUnion[Body, python:list[Body]]\n\nThe body or list of bodies to combine with this body.\n\nNotes\n\nThe self parameter is directly modified, and the other bodies are consumed.\n\n\n\nBody.__repr__() -> str\n\nRepresent the Body as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/index.html#the-circlepy-module","title":"The circle.py module","text":"The circle.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/index.html#summary","title":"The circle.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchCircle\n\nProvides for modeling a circle.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/index.html#description","title":"The circle.py module > Description","text":"Description\n\nProvides for creating and managing a circle."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/Gap.html#gap","title":"Gap","text":"Gap\n\n\n\nclass ansys.geometry.core.tools.measurement_tools.Gap(distance: ansys.geometry.core.misc.measurements.Distance)\n\nRepresents a gap between two bodies.\n\nParameters\n\ndistance\n\nDistance\n\nDistance between two sides of the gap."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/Gap.html#overview","title":"Gap > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndistance\n\nReturns the closest distance between two bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/Gap.html#import-detail","title":"Gap > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/Gap.html#property-detail","title":"Gap > Property detail","text":"Property detail\n\n\n\nproperty Gap.distance: ansys.geometry.core.misc.measurements.Distance\n\nReturns the closest distance between two bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SplitEdgeProblemAreas.html#splitedgeproblemareas","title":"SplitEdgeProblemAreas","text":"SplitEdgeProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.SplitEdgeProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nBases: ProblemArea\n\nRepresents a split edge problem area with unique identifier and associated edges.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nedges\n\npython:list[Edge]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SplitEdgeProblemAreas.html#overview","title":"SplitEdgeProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nedges\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SplitEdgeProblemAreas.html#import-detail","title":"SplitEdgeProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SplitEdgeProblemAreas.html#property-detail","title":"SplitEdgeProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty SplitEdgeProblemAreas.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/SplitEdgeProblemAreas.html#method-detail","title":"SplitEdgeProblemAreas > Method detail","text":"Method detail\n\n\n\nSplitEdgeProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/GRPCCommandsService.html#grpccommandsservice","title":"GRPCCommandsService","text":"GRPCCommandsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.commands.GRPCCommandsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nCommands service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/GRPCCommandsService.html#overview","title":"GRPCCommandsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nset_name\n\nSet the name of an object."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/GRPCCommandsService.html#import-detail","title":"GRPCCommandsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/GRPCCommandsService.html#method-detail","title":"GRPCCommandsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCommandsService.set_name(**kwargs) -> dict\n\nSet the name of an object."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/Sphere.html#sphere","title":"Sphere","text":"Sphere\n\n\n\nclass ansys.geometry.core.shapes.surfaces.sphere.Sphere(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nProvides 3D sphere representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the sphere.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the sphere.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/Sphere.html#overview","title":"Sphere > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\nMethods\n\n\n\n\n\ntransformed_copy\n\nCreate a transformed copy of the sphere from a transformation matrix.\n\nmirrored_copy\n\nCreate a mirrored copy of the sphere along the y-axis.\n\nevaluate\n\nEvaluate the sphere at the given parameters.\n\nproject_point\n\nProject a point onto the sphere and evaluate the sphere.\n\nparameterization\n\nParameterization of the sphere surface as a tuple (U, V).\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the sphere.\n\nradius\n\nRadius of the sphere.\n\ndir_x\n\nX-direction of the sphere.\n\ndir_y\n\nY-direction of the sphere.\n\ndir_z\n\nZ-direction of the sphere.\n\nsurface_area\n\nSurface area of the sphere.\n\nvolume\n\nVolume of the sphere.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Sphere class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/Sphere.html#import-detail","title":"Sphere > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/Sphere.html#property-detail","title":"Sphere > Property detail","text":"Property detail\n\n\n\nproperty Sphere.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the sphere.\n\n\n\nproperty Sphere.radius: pint.Quantity\n\nRadius of the sphere.\n\n\n\nproperty Sphere.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the sphere.\n\n\n\nproperty Sphere.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the sphere.\n\n\n\nproperty Sphere.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the sphere.\n\n\n\nproperty Sphere.surface_area: pint.Quantity\n\nSurface area of the sphere.\n\n\n\nproperty Sphere.volume: pint.Quantity\n\nVolume of the sphere."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/Sphere.html#method-detail","title":"Sphere > Method detail","text":"Method detail\n\n\n\nSphere.__eq__(other: Sphere) -> bool\n\nEquals operator for the Sphere class.\n\n\n\nSphere.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Sphere\n\nCreate a transformed copy of the sphere from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4X4 transformation matrix to apply to the sphere.\n\nReturns\n\nSphere\n\nNew sphere that is the transformed copy of the original sphere.\n\n\n\nSphere.mirrored_copy() -> Sphere\n\nCreate a mirrored copy of the sphere along the y-axis.\n\nReturns\n\nSphere\n\nNew sphere that is a mirrored copy of the original sphere.\n\n\n\nSphere.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> SphereEvaluation\n\nEvaluate the sphere at the given parameters.\n\nParameters\n\nparameter\n\nParamUV\n\nParameters (u,v) to evaluate the sphere at.\n\nReturns\n\nSphereEvaluation\n\nResulting evaluation.\n\n\n\nSphere.project_point(point: ansys.geometry.core.math.point.Point3D) -> SphereEvaluation\n\nProject a point onto the sphere and evaluate the sphere.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the sphere.\n\nReturns\n\nSphereEvaluation\n\nResulting evaluation.\n\n\n\nSphere.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParameterization of the sphere surface as a tuple (U, V).\n\nThe U parameter specifies the longitude angle, increasing clockwise (east) about\ndir_z (right-hand corkscrew law). It has a zero parameter at dir_x and a\nperiod of 2*pi.\n\nThe V parameter specifies the latitude, increasing north, with a zero parameter\nat the equator and a range of [-pi/2, pi/2].\n\nReturns\n\npython:tuple[Parameterization, Parameterization]\n\nInformation about how a sphere’s u and v parameters are parameterized, respectively.\n\n\n\nabstractmethod Sphere.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod Sphere.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/index.html#the-vertexpy-module","title":"The vertex.py module","text":"The vertex.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/index.html#summary","title":"The vertex.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVertex\n\nRepresents a single vertex of a body within the design assembly.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/index.html#description","title":"The vertex.py module > Description","text":"Description\n\nModule for managing a vertex."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/GRPCRepairToolsServiceV1.html#grpcrepairtoolsservicev1","title":"GRPCRepairToolsServiceV1","text":"GRPCRepairToolsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.repair_tools.GRPCRepairToolsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.repair_tools.GRPCRepairToolsService\n\nRepair tools service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/GRPCRepairToolsServiceV1.html#overview","title":"GRPCRepairToolsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nfind_split_edges\n\nIdentify split edges in the geometry.\n\nfind_extra_edges\n\nIdentify extra edges in the geometry.\n\nfind_inexact_edges\n\nIdentify inexact edges in the geometry.\n\nfind_short_edges\n\nIdentify short edges in the geometry.\n\nfind_duplicate_faces\n\nIdentify duplicate faces in the geometry.\n\nfind_missing_faces\n\nIdentify missing faces in the geometry.\n\nfind_small_faces\n\nIdentify small faces in the geometry.\n\nfind_stitch_faces\n\nIdentify faces that can be stitched together in the geometry.\n\nfind_simplify\n\nIdentify areas in the geometry that can be simplified.\n\nfind_interferences\n\nIdentify interferences in the geometry.\n\nfind_and_fix_short_edges\n\nIdentify and fix short edges in the geometry.\n\nfind_and_fix_extra_edges\n\nIdentify and fix extra edges in the geometry.\n\nfind_and_fix_split_edges\n\nIdentify and fix split edges in the geometry.\n\nfind_and_fix_simplify\n\nIdentify and simplify areas in the geometry.\n\nfind_and_fix_stitch_faces\n\nIdentify and stitch faces in the geometry.\n\ninspect_geometry\n\nInspect the geometry for issues.\n\nrepair_geometry\n\nRepair the geometry by addressing identified issues.\n\nfix_duplicate_faces\n\nFix duplicate faces in the geometry.\n\nfix_missing_faces\n\nFix missing faces in the geometry.\n\nfix_inexact_edges\n\nFix inexact edges in the geometry.\n\nfix_extra_edges\n\nFix extra edges in the geometry.\n\nfix_short_edges\n\nFix short edges in the geometry.\n\nfix_small_faces\n\nFix small faces in the geometry.\n\nfix_split_edges\n\nFix split edges in the geometry.\n\nfix_stitch_faces\n\nFix stitch faces in the geometry.\n\nfix_unsimplified_faces\n\nFix areas to simplify in the geometry.\n\nfix_interference\n\nFix interferences in the geometry.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/GRPCRepairToolsServiceV1.html#import-detail","title":"GRPCRepairToolsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/GRPCRepairToolsServiceV1.html#attribute-detail","title":"GRPCRepairToolsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCRepairToolsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/GRPCRepairToolsServiceV1.html#method-detail","title":"GRPCRepairToolsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_split_edges(**kwargs) -> dict\n\nIdentify split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_extra_edges(**kwargs) -> dict\n\nIdentify extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_inexact_edges(**kwargs) -> dict\n\nIdentify inexact edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_short_edges(**kwargs) -> dict\n\nIdentify short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_duplicate_faces(**kwargs) -> dict\n\nIdentify duplicate faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_missing_faces(**kwargs) -> dict\n\nIdentify missing faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_small_faces(**kwargs) -> dict\n\nIdentify small faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_stitch_faces(**kwargs) -> dict\n\nIdentify faces that can be stitched together in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_simplify(**kwargs) -> dict\n\nIdentify areas in the geometry that can be simplified.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_interferences(**kwargs) -> dict\n\nIdentify interferences in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_and_fix_short_edges(**kwargs) -> dict\n\nIdentify and fix short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_and_fix_extra_edges(**kwargs) -> dict\n\nIdentify and fix extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_and_fix_split_edges(**kwargs) -> dict\n\nIdentify and fix split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_and_fix_simplify(**kwargs) -> dict\n\nIdentify and simplify areas in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.find_and_fix_stitch_faces(**kwargs) -> dict\n\nIdentify and stitch faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.inspect_geometry(**kwargs) -> dict\n\nInspect the geometry for issues.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.repair_geometry(**kwargs) -> dict\n\nRepair the geometry by addressing identified issues.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_duplicate_faces(**kwargs) -> dict\n\nFix duplicate faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_missing_faces(**kwargs) -> dict\n\nFix missing faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_inexact_edges(**kwargs) -> dict\n\nFix inexact edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_extra_edges(**kwargs) -> dict\n\nFix extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_short_edges(**kwargs) -> dict\n\nFix short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_small_faces(**kwargs) -> dict\n\nFix small faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_split_edges(**kwargs) -> dict\n\nFix split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_stitch_faces(**kwargs) -> dict\n\nFix stitch faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_unsimplified_faces(**kwargs) -> dict\n\nFix areas to simplify in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsServiceV1.fix_interference(**kwargs) -> dict\n\nFix interferences in the geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/index.html#the-unitspy-module","title":"The units.py module","text":"The units.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/index.html#summary","title":"The units.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPhysicalQuantity\n\nProvides the base class for handling units throughout PyAnsys Geometry.\n\nConstants\n\n\n\n\n\nUNITS\n\nUnits manager.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/index.html#description","title":"The units.py module > Description","text":"Description\n\nProvides for handling units homogeneously throughout PyAnsys Geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/index.html#module-detail","title":"The units.py module > Module detail","text":"Module detail\n\n\n\nunits.UNITS\n\nUnits manager."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/index.html#the-vectorpy-module","title":"The vector.py module","text":"The vector.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/index.html#summary","title":"The vector.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVector3D\n\nProvides for managing and creating a 3D vector.\n\nVector2D\n\nProvides for creating and managing a 2D vector.\n\nUnitVector3D\n\nProvides for creating and managing a 3D unit vector.\n\nUnitVector2D\n\nProvides for creating and managing a 3D unit vector.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/index.html#description","title":"The vector.py module > Description","text":"Description\n\nProvides for creating and managing 2D and 3D vectors."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/index.html#the-measurementspy-module","title":"The measurements.py module","text":"The measurements.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/index.html#summary","title":"The measurements.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSingletonMeta\n\nProvides a thread-safe implementation of a singleton design pattern.\n\nDefaultUnitsClass\n\nProvides default units for PyAnsys Geometry.\n\nMeasurement\n\nProvides the PhysicalQuantity subclass for holding a measurement.\n\nDistance\n\nProvides the Measurement subclass for holding a distance.\n\nAngle\n\nProvides the Measurement subclass for holding an angle.\n\nArea\n\nProvides the Measurement subclass for holding an area.\n\nConstants\n\n\n\n\n\nDEFAULT_UNITS\n\nPyAnsys Geometry default units object.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/index.html#description","title":"The measurements.py module > Description","text":"Description\n\nProvides various measurement-related classes."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/index.html#module-detail","title":"The measurements.py module > Module detail","text":"Module detail\n\n\n\nmeasurements.DEFAULT_UNITS\n\nPyAnsys Geometry default units object."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/AlignCondition.html#aligncondition","title":"AlignCondition","text":"AlignCondition\n\n\n\nclass ansys.geometry.core.designer.mating_conditions.AlignCondition\n\nBases: MatingCondition\n\nAlignCondition dataclass."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/AlignCondition.html#overview","title":"AlignCondition > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\noffset\n\n\n\nis_reversed\n\n\n\nis_valid\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/AlignCondition.html#import-detail","title":"AlignCondition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/AlignCondition.html#attribute-detail","title":"AlignCondition > Attribute detail","text":"Attribute detail\n\n\n\nAlignCondition.offset: float\n\n\n\n\n\nAlignCondition.is_reversed: bool\n\n\n\n\n\nAlignCondition.is_valid: bool\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/index.html#the-curvepy-module","title":"The curve.py module","text":"The curve.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/index.html#summary","title":"The curve.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCurve\n\nProvides the abstract base class representing a 3D curve.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/index.html#description","title":"The curve.py module > Description","text":"Description\n\nProvides the Curve class."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/GRPCMeasurementToolsService.html#grpcmeasurementtoolsservice","title":"GRPCMeasurementToolsService","text":"GRPCMeasurementToolsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.measurement_tools.GRPCMeasurementToolsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/GRPCMeasurementToolsService.html#overview","title":"GRPCMeasurementToolsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nmin_distance_between_objects\n\nCalculate the minimum distance between two objects."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/GRPCMeasurementToolsService.html#import-detail","title":"GRPCMeasurementToolsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/GRPCMeasurementToolsService.html#method-detail","title":"GRPCMeasurementToolsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCMeasurementToolsService.min_distance_between_objects(**kwargs) -> dict\n\nCalculate the minimum distance between two objects."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/Trapezoid.html#trapezoid","title":"Trapezoid","text":"Trapezoid\n\n\n\nclass ansys.geometry.core.sketch.trapezoid.Trapezoid(base_width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, base_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, base_asymmetric_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real | None = None, center: ansys.geometry.core.math.point.Point2D = ZERO_POINT2D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0)\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling a 2D trapezoid.\n\nParameters\n\nbase_width\n\nQuantity | Distance | Real\n\nWidth of the lower base of the trapezoid.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the slot.\n\nbase_angle\n\nQuantity | Distance | Real\n\nAngle for trapezoid generation. Represents the angle\non the base of the trapezoid.\n\nbase_asymmetric_angle\n\nQuantity | Angle | Real | python:None, default: python:None\n\nAsymmetrical angles on each side of the trapezoid.\nThe default is None, in which case the trapezoid is symmetrical. If\nprovided, the trapezoid is asymmetrical and the right corner angle\nat the base of the trapezoid is set to the provided value.\n\ncenter: Point2D, default: ZERO_POINT2D\n\nCenter point of the trapezoid.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\nNotes\n\nIf an asymmetric base angle is defined, the base angle is\napplied to the left-most angle, and the asymmetric base angle\nis applied to the right-most angle."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/Trapezoid.html#overview","title":"Trapezoid > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenter\n\nCenter of the trapezoid.\n\nbase_width\n\nWidth of the trapezoid.\n\nheight\n\nHeight of the trapezoid.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/Trapezoid.html#import-detail","title":"Trapezoid > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/Trapezoid.html#property-detail","title":"Trapezoid > Property detail","text":"Property detail\n\n\n\nproperty Trapezoid.center: ansys.geometry.core.math.point.Point2D\n\nCenter of the trapezoid.\n\n\n\nproperty Trapezoid.base_width: pint.Quantity\n\nWidth of the trapezoid.\n\n\n\nproperty Trapezoid.height: pint.Quantity\n\nHeight of the trapezoid.\n\n\n\nproperty Trapezoid.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/index.html#the-repair_toolspy-module","title":"The repair_tools.py module","text":"The repair_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/index.html#summary","title":"The repair_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nRepairTools\n\nRepair tools for PyAnsys Geometry.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/index.html#description","title":"The repair_tools.py module > Description","text":"Description\n\nProvides tools for repairing bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/index.html#the-prepare_toolspy-module","title":"The prepare_tools.py module","text":"The prepare_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/index.html#summary","title":"The prepare_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPrepareToolsServiceV0\n\nPrepare tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/prepare_tools/index.html#description","title":"The prepare_tools.py module > Description","text":"Description\n\nModule containing the Prepare Tools service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix44.html#matrix44","title":"Matrix44","text":"Matrix44\n\n\n\nclass ansys.geometry.core.math.matrix.Matrix44(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: Matrix\n\nProvides 4x4 matrix representation.\n\nParameters\n\ninput\n\nndarray | RealSequence | Matrix, default: DEFAULT_MATRIX44\n\nMatrix arguments as a np.ndarray class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix44.html#overview","title":"Matrix44 > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\ncreate_translation\n\nCreate a matrix representing the specified translation.\n\ncreate_rotation\n\nCreate a matrix representing the specified rotation.\n\ncreate_matrix_from_rotation_about_axis\n\nCreate a matrix representing a rotation about a given axis.\n\ncreate_matrix_from_mapping\n\nCreate a matrix representing the specified mapping.\n\nMethods\n\n\n\n\n\nis_translation\n\nCheck if the matrix represents a translation."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix44.html#import-detail","title":"Matrix44 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix44.html#method-detail","title":"Matrix44 > Method detail","text":"Method detail\n\n\n\nclassmethod Matrix44.create_translation(translation: ansys.geometry.core.math.vector.Vector3D) -> Matrix44\n\nCreate a matrix representing the specified translation.\n\nParameters\n\ntranslation\n\nVector3D\n\nThe translation vector representing the translation. The components of the vector\nshould be in meters.\n\nReturns\n\nMatrix44\n\nA 4x4 matrix representing the translation.\n\nExamples\n\n>>> translation_vector = Vector3D(1.0, 2.0, 3.0)\n>>> translation_matrix = Matrix44.create_translation(translation_vector)\n>>> print(translation_matrix)\n[[1. 0. 0. 1.]\n [0. 1. 0. 2.]\n [0. 0. 1. 3.]\n [0. 0. 0. 1.]]\n\n\n\nMatrix44.is_translation(including_identity: bool = False) -> bool\n\nCheck if the matrix represents a translation.\n\nThis method checks if the matrix represents a translation transformation.\nA translation matrix has the following form:\n\n[1 0 0 tx]\n[0 1 0 ty]\n[0 0 1 tz]\n[0 0 0  1]\n\nParameters\n\nincluding_identity\n\nbool, optional\n\nIf True, the method will return True for the identity matrix as well.\nIf False, the method will return False for the identity matrix.\n\nReturns\n\nbool\n\nTrue if the matrix represents a translation, False otherwise.\n\nExamples\n\n>>> matrix = Matrix44([[1, 0, 0, 5], [0, 1, 0, 3], [0, 0, 1, 2], [0, 0, 0, 1]])\n>>> matrix.is_translation()\nTrue\n>>> identity_matrix = Matrix44([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]])\n>>> identity_matrix.is_translation()\nFalse\n>>> identity_matrix.is_translation(including_identity=True)\nTrue\n\n\n\nclassmethod Matrix44.create_rotation(direction_x: ansys.geometry.core.math.vector.Vector3D, direction_y: ansys.geometry.core.math.vector.Vector3D, direction_z: ansys.geometry.core.math.vector.Vector3D = None) -> Matrix44\n\nCreate a matrix representing the specified rotation.\n\nParameters\n\ndirection_x\n\nVector3D\n\nThe X direction vector.\n\ndirection_y\n\nVector3D\n\nThe Y direction vector.\n\ndirection_z\n\nVector3D, optional\n\nThe Z direction vector. If not provided, it will be calculated\nas the cross product of direction_x and direction_y.\n\nReturns\n\nMatrix44\n\nA 4x4 matrix representing the rotation.\n\nExamples\n\n>>> direction_x = Vector3D(1.0, 0.0, 0.0)\n>>> direction_y = Vector3D(0.0, 1.0, 0.0)\n>>> rotation_matrix = Matrix44.create_rotation(direction_x, direction_y)\n>>> print(rotation_matrix)\n[[1. 0. 0. 0.]\n[0. 1. 0. 0.]\n[0. 0. 1. 0.]\n[0. 0. 0. 1.]]\n\n\n\nclassmethod Matrix44.create_matrix_from_rotation_about_axis(axis: ansys.geometry.core.math.vector.Vector3D, angle: float) -> Matrix44\n\nCreate a matrix representing a rotation about a given axis.\n\nParameters\n\naxis\n\nVector3D\n\nThe axis of rotation.\n\nangle\n\npython:float\n\nThe angle of rotation in radians.\n\nReturns\n\nMatrix44\n\nA 4x4 matrix representing the rotation.\n\n\n\nclassmethod Matrix44.create_matrix_from_mapping(frame: ansys.geometry.core.math.frame.Frame) -> Matrix44\n\nCreate a matrix representing the specified mapping.\n\nParameters\n\nframe\n\nFrame\n\nThe frame containing the origin and direction vectors.\n\nReturns\n\nMatrix44\n\nA 4x4 matrix representing the translation and rotation defined by the frame."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#point3d","title":"Point3D","text":"Point3D\n\n\n\nclass ansys.geometry.core.math.point.Point3D(input: numpy.ndarray | ansys.geometry.core.typing.RealSequence = DEFAULT_POINT3D_VALUES, unit: pint.Unit | None = None)\n\nBases: numpy.ndarray, ansys.geometry.core.misc.units.PhysicalQuantity\n\nProvides geometry primitive representation for a 3D point.\n\nParameters\n\ninput\n\nndarray | RealSequence, default: DEFAULT_POINT3D_VALUES\n\nDirection arguments, either as a numpy.ndarray class\nor as a RealSequence.\n\nunit\n\nUnit | python:None, default: DEFAULT_UNITS.LENGTH\n\nUnits for defining 3D point values. If not specified, the default unit is\nDEFAULT_UNITS.LENGTH."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#overview","title":"Point3D > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nunit\n\nGet the unit of the object.\n\nbase_unit\n\nGet the base unit of the object.\n\ntransform\n\nTransform the 3D point with a transformation matrix.\n\nProperties\n\n\n\n\n\nx\n\nX plane component value.\n\ny\n\nY plane component value.\n\nz\n\nZ plane component value.\n\nposition\n\nGet the position of the point as a numpy array.\n\nAttributes\n\n\n\n\n\nflat\n\n\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Point3D class.\n\n__ne__\n\nNot equals operator for the Point3D class.\n\n__add__\n\nAdd operation for the Point3D class.\n\n__sub__\n\nSubtraction operation for the Point3D class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#import-detail","title":"Point3D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#property-detail","title":"Point3D > Property detail","text":"Property detail\n\n\n\nproperty Point3D.x: pint.Quantity\n\nX plane component value.\n\n\n\nproperty Point3D.y: pint.Quantity\n\nY plane component value.\n\n\n\nproperty Point3D.z: pint.Quantity\n\nZ plane component value.\n\n\n\nproperty Point3D.position: numpy.ndarray\n\nGet the position of the point as a numpy array."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#attribute-detail","title":"Point3D > Attribute detail","text":"Attribute detail\n\n\n\nPoint3D.flat\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point3D.html#method-detail","title":"Point3D > Method detail","text":"Method detail\n\n\n\nPoint3D.__eq__(other: Point3D) -> bool\n\nEquals operator for the Point3D class.\n\n\n\nPoint3D.__ne__(other: Point3D) -> bool\n\nNot equals operator for the Point3D class.\n\n\n\nPoint3D.__add__(other: Point3D | ansys.geometry.core.math.vector.Vector3D) -> Point3D\n\nAdd operation for the Point3D class.\n\n\n\nPoint3D.__sub__(other: Point3D | ansys.geometry.core.math.vector.Vector3D) -> Point3D\n\nSubtraction operation for the Point3D class.\n\n\n\nPoint3D.unit() -> pint.Unit\n\nGet the unit of the object.\n\n\n\nPoint3D.base_unit() -> pint.Unit\n\nGet the base unit of the object.\n\n\n\nPoint3D.transform(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Point3D\n\nTransform the 3D point with a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the point.\n\nReturns\n\nPoint3D\n\nNew 3D point that is the transformed copy of the original 3D point after applying\nthe transformation matrix.\n\nNotes\n\nTransform the Point3D object by applying the specified 4x4\ntransformation matrix and return a new Point3D object representing the\ntransformed point."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/Ellipse.html#ellipse","title":"Ellipse","text":"Ellipse\n\n\n\nclass ansys.geometry.core.shapes.curves.ellipse.Ellipse(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, major_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, minor_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.curves.curve.Curve\n\nProvides 3D ellipse representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the ellipse.\n\nmajor_radius\n\nQuantity | Distance | Real\n\nMajor radius of the ellipse.\n\nminor_radius\n\nQuantity | Distance | Real\n\nMinor radius of the ellipse.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/Ellipse.html#overview","title":"Ellipse > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the curve.\n\ncontains_point\n\nCheck a point is contained by the curve.\n\nMethods\n\n\n\n\n\nmirrored_copy\n\nCreate a mirrored copy of the ellipse along the y-axis.\n\nevaluate\n\nEvaluate the ellipse at the given parameter.\n\nproject_point\n\nProject a point onto the ellipse and evaluate the ellipse.\n\nis_coincident_ellipse\n\nDetermine if this ellipse is coincident with another.\n\ntransformed_copy\n\nCreate a transformed copy of the ellipse from a transformation matrix.\n\nparameterization\n\nGet the parametrization of the ellipse.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the ellipse.\n\nmajor_radius\n\nMajor radius of the ellipse.\n\nminor_radius\n\nMinor radius of the ellipse.\n\ndir_x\n\nX-direction of the ellipse.\n\ndir_y\n\nY-direction of the ellipse.\n\ndir_z\n\nZ-direction of the ellipse.\n\neccentricity\n\nEccentricity of the ellipse.\n\nlinear_eccentricity\n\nLinear eccentricity of the ellipse.\n\nsemi_latus_rectum\n\nSemi-latus rectum of the ellipse.\n\nperimeter\n\nPerimeter of the ellipse.\n\narea\n\nArea of the ellipse.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Ellipse class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/Ellipse.html#import-detail","title":"Ellipse > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/Ellipse.html#property-detail","title":"Ellipse > Property detail","text":"Property detail\n\n\n\nproperty Ellipse.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the ellipse.\n\n\n\nproperty Ellipse.major_radius: pint.Quantity\n\nMajor radius of the ellipse.\n\n\n\nproperty Ellipse.minor_radius: pint.Quantity\n\nMinor radius of the ellipse.\n\n\n\nproperty Ellipse.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the ellipse.\n\n\n\nproperty Ellipse.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the ellipse.\n\n\n\nproperty Ellipse.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the ellipse.\n\n\n\nproperty Ellipse.eccentricity: ansys.geometry.core.typing.Real\n\nEccentricity of the ellipse.\n\n\n\nproperty Ellipse.linear_eccentricity: pint.Quantity\n\nLinear eccentricity of the ellipse.\n\nNotes\n\nThe linear eccentricity is the distance from the center to the focus.\n\n\n\nproperty Ellipse.semi_latus_rectum: pint.Quantity\n\nSemi-latus rectum of the ellipse.\n\n\n\nproperty Ellipse.perimeter: pint.Quantity\n\nPerimeter of the ellipse.\n\n\n\nproperty Ellipse.area: pint.Quantity\n\nArea of the ellipse."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/Ellipse.html#method-detail","title":"Ellipse > Method detail","text":"Method detail\n\n\n\nEllipse.__eq__(other: Ellipse) -> bool\n\nEquals operator for the Ellipse class.\n\n\n\nEllipse.mirrored_copy() -> Ellipse\n\nCreate a mirrored copy of the ellipse along the y-axis.\n\nReturns\n\nEllipse\n\nNew ellipse that is a mirrored copy of the original ellipse.\n\n\n\nEllipse.evaluate(parameter: ansys.geometry.core.typing.Real) -> EllipseEvaluation\n\nEvaluate the ellipse at the given parameter.\n\nParameters\n\nparameter\n\nReal\n\nParameter to evaluate the ellipse at.\n\nReturns\n\nEllipseEvaluation\n\nResulting evaluation.\n\n\n\nEllipse.project_point(point: ansys.geometry.core.math.point.Point3D) -> EllipseEvaluation\n\nProject a point onto the ellipse and evaluate the ellipse.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the ellipse.\n\nReturns\n\nEllipseEvaluation\n\nResulting evaluation.\n\n\n\nEllipse.is_coincident_ellipse(other: Ellipse) -> bool\n\nDetermine if this ellipse is coincident with another.\n\nParameters\n\nother\n\nEllipse\n\nEllipse to determine coincidence with.\n\nReturns\n\nbool\n\nTrue if this ellipse is coincident with the other, False otherwise.\n\n\n\nEllipse.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Ellipse\n\nCreate a transformed copy of the ellipse from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the ellipse.\n\nReturns\n\nEllipse\n\nNew ellipse that is the transformed copy of the original ellipse.\n\n\n\nEllipse.parameterization() -> ansys.geometry.core.shapes.parameterization.Parameterization\n\nGet the parametrization of the ellipse.\n\nThe parameter of an ellipse specifies the clockwise angle around the axis\n(right-hand corkscrew law), with a zero parameter at dir_x and a period of 2*pi.\n\nReturns\n\nParameterization\n\nInformation about how the ellipse is parameterized.\n\n\n\nabstractmethod Ellipse.contains_param(param: ansys.geometry.core.typing.Real) -> bool\n\nCheck a parameter is within the parametric range of the curve.\n\n\n\nabstractmethod Ellipse.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the curve.\n\nThe point can either lie within the curve or on its boundary."},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes ansys-geometry-core endpoints, their capabilities, and how\nto interact with them programmatically.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/index.html#the-trimmed_curvepy-module","title":"The trimmed_curve.py module","text":"The trimmed_curve.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/index.html#summary","title":"The trimmed_curve.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTrimmedCurve\n\nRepresents a trimmed curve.\n\nReversedTrimmedCurve\n\nRepresents a reversed trimmed curve.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/index.html#description","title":"The trimmed_curve.py module > Description","text":"Description\n\nTrimmed curve class."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/index.html#the-coordinate_systempy-module","title":"The coordinate_system.py module","text":"The coordinate_system.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/index.html#summary","title":"The coordinate_system.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCoordinateSystem\n\nRepresents a user-defined coordinate system within the design assembly.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/index.html#description","title":"The coordinate_system.py module > Description","text":"Description\n\nProvides for managing a user-defined coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/index.html#the-dbuapplicationpy-module","title":"The dbuapplication.py module","text":"The dbuapplication.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/index.html#summary","title":"The dbuapplication.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDbuApplicationService\n\nDBU Application service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/index.html#description","title":"The dbuapplication.py module > Description","text":"Description\n\nModule containing the DBU Application service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoopType.html#facelooptype","title":"FaceLoopType","text":"FaceLoopType\n\n\n\nclass ansys.geometry.core.designer.face.FaceLoopType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the face loop types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoopType.html#overview","title":"FaceLoopType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nINNER_LOOP\n\n\n\nOUTER_LOOP\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoopType.html#import-detail","title":"FaceLoopType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoopType.html#attribute-detail","title":"FaceLoopType > Attribute detail","text":"Attribute detail\n\n\n\nFaceLoopType.INNER_LOOP = 'INNER'\n\n\n\n\n\nFaceLoopType.OUTER_LOOP = 'OUTER'\n\n"},{"objectID":"Home","href":"getting_started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nPyAnsys Geometry is a Python client library for the Ansys Geometry service."},{"objectID":"Home","href":"getting_started/index.html#installation","title":"Getting started > Installation","text":"Installation\n\nYou can use pip to install PyAnsys Geometry."},{"objectID":"Home","href":"getting_started/index.html#available-modes","title":"Getting started > Available modes","text":"Available modes\n\nThis client library works with a Geometry service backend. There are several ways of\nrunning this backend, although the preferred and high-performance mode is using Docker\ncontainers. Select the option that suits your needs best.\n\nDocker containers\n\nLaunch the Geometry service as a Docker container\nand connect to it from PyAnsys Geometry.\n\ndocker/index\n\nLocal service\n\nLaunch the Geometry service locally on your machine\nand connect to it from PyAnsys Geometry.\n\nlocal/index\n\nRemote service\n\nLaunch the Geometry service on a remote machine and\nconnect to it using PIM (Product Instance Manager).\n\nremote/index\n\nConnect to an existing service\n\nConnect to an existing Geometry service locally or remotely.\n\nexisting/index"},{"objectID":"Home","href":"getting_started/index.html#compatibility-with-ansys-releases","title":"Getting started > Compatibility with Ansys releases","text":"Compatibility with Ansys releases\n\nPyAnsys Geometry continues to evolve as the Ansys products move forward. For\nmore information, see Ansys product version compatibility."},{"objectID":"Home","href":"getting_started/index.html#development-installation","title":"Getting started > Development installation","text":"Development installation\n\nIn case you want to support the development of PyAnsys Geometry, install the repository\nin development mode. For more information, see\nInstall package in development mode."},{"objectID":"Home","href":"getting_started/index.html#frequently-asked-questions","title":"Getting started > Frequently asked questions","text":"Frequently asked questions\n\nAny questions? Refer to Q&A before submitting an issue.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/index.html#the-designspy-module","title":"The designs.py module","text":"The designs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/index.html#summary","title":"The designs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDesignsService\n\nDesigns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/index.html#description","title":"The designs.py module > Description","text":"Description\n\nModule containing the designs service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/index.html#the-curve_evaluationpy-module","title":"The curve_evaluation.py module","text":"The curve_evaluation.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/index.html#summary","title":"The curve_evaluation.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCurveEvaluation\n\nProvides for evaluating a curve.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/index.html#description","title":"The curve_evaluation.py module > Description","text":"Description\n\nProvides for creating and managing a curve."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/GRPCBeamsServiceV1.html#grpcbeamsservicev1","title":"GRPCBeamsServiceV1","text":"GRPCBeamsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.beams.GRPCBeamsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.beams.GRPCBeamsService\n\nBeams service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nbeams service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/GRPCBeamsServiceV1.html#overview","title":"GRPCBeamsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_beam_segments\n\nCreate beam segments.\n\ncreate_descriptive_beam_segments\n\nCreate descriptive beam segments.\n\ndelete_beam\n\nDelete a beam.\n\ndelete_beam_profile\n\nRemove a beam profile on the active geometry server instance.\n\ncreate_beam_circular_profile\n\nAdd a new beam circular profile under the design for creating beams.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/GRPCBeamsServiceV1.html#import-detail","title":"GRPCBeamsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/GRPCBeamsServiceV1.html#attribute-detail","title":"GRPCBeamsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCBeamsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/GRPCBeamsServiceV1.html#method-detail","title":"GRPCBeamsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCBeamsServiceV1.create_beam_segments(**kwargs) -> dict\n\nCreate beam segments.\n\n\n\nabstractmethod GRPCBeamsServiceV1.create_descriptive_beam_segments(**kwargs) -> dict\n\nCreate descriptive beam segments.\n\n\n\nabstractmethod GRPCBeamsServiceV1.delete_beam(**kwargs) -> dict\n\nDelete a beam.\n\n\n\nabstractmethod GRPCBeamsServiceV1.delete_beam_profile(**kwargs) -> dict\n\nRemove a beam profile on the active geometry server instance.\n\n\n\nabstractmethod GRPCBeamsServiceV1.create_beam_circular_profile(**kwargs) -> dict\n\nAdd a new beam circular profile under the design for creating beams."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/index.html#the-measurement_toolspy-module","title":"The measurement_tools.py module","text":"The measurement_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/index.html#summary","title":"The measurement_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGap\n\nRepresents a gap between two bodies.\n\nMeasurementTools\n\nMeasurement tools for PyAnsys Geometry.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/index.html#description","title":"The measurement_tools.py module > Description","text":"Description\n\nProvides tools for measurement."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/GRPCAssemblyControlsService.html#grpcassemblycontrolsservice","title":"GRPCAssemblyControlsService","text":"GRPCAssemblyControlsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.assembly_controls.GRPCAssemblyControlsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nAssembly controls service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/GRPCAssemblyControlsService.html#overview","title":"GRPCAssemblyControlsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_align_condition\n\nCreate an align condition between two geometry objects.\n\ncreate_tangent_condition\n\nCreate a tangent condition between two geometry objects.\n\ncreate_orient_condition\n\nCreate an orient condition between two geometry objects."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/GRPCAssemblyControlsService.html#import-detail","title":"GRPCAssemblyControlsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/GRPCAssemblyControlsService.html#method-detail","title":"GRPCAssemblyControlsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCAssemblyControlsService.create_align_condition(**kwargs) -> dict\n\nCreate an align condition between two geometry objects.\n\n\n\nabstractmethod GRPCAssemblyControlsService.create_tangent_condition(**kwargs) -> dict\n\nCreate a tangent condition between two geometry objects.\n\n\n\nabstractmethod GRPCAssemblyControlsService.create_orient_condition(**kwargs) -> dict\n\nCreate an orient condition between two geometry objects."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/conversions/index.html#the-conversionspy-module","title":"The conversions.py module","text":"The conversions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/conversions/index.html#summary","title":"The conversions.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nfrom_measurement_to_server_length\n\nConvert a measurement to a length value.\n\nfrom_measurement_to_server_angle\n\nConvert a measurement to an angle value.\n\nfrom_measurement_to_server_area\n\nConvert a measurement to an area value.\n\nto_distance\n\nConvert a server value to a Distance object.\n\nto_area\n\nConvert a server value to an area object."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/conversions/index.html#description","title":"The conversions.py module > Description","text":"Description\n\nModule containing server-version agnostic conversions."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/conversions/index.html#module-detail","title":"The conversions.py module > Module detail","text":"Module detail\n\n\n\nconversions.from_measurement_to_server_length(input: ansys.geometry.core.misc.measurements.Measurement) -> float\n\nConvert a measurement to a length value.\n\nParameters\n\nvalue\n\nMeasurement\n\nMeasurement value.\n\nReturns\n\npython:float\n\nLength value in server-defined units. By default, meters.\n\n\n\nconversions.from_measurement_to_server_angle(input: ansys.geometry.core.misc.measurements.Measurement) -> float\n\nConvert a measurement to an angle value.\n\nParameters\n\nvalue\n\nMeasurement\n\nMeasurement value.\n\nReturns\n\npython:float\n\nAngle value in server-defined units. By default, radians.\n\n\n\nconversions.from_measurement_to_server_area(input: ansys.geometry.core.misc.measurements.Measurement) -> float\n\nConvert a measurement to an area value.\n\nParameters\n\nvalue\n\nMeasurement\n\nMeasurement value.\n\nReturns\n\npython:float\n\nArea value in server-defined units. By default, square meters.\n\n\n\nconversions.to_distance(value: float | int) -> ansys.geometry.core.misc.measurements.Distance\n\nConvert a server value to a Distance object.\n\nParameters\n\nvalue\n\npython:float | python:int\n\nValue to convert.\n\nReturns\n\nDistance\n\nConverted distance.\n\nNotes\n\nThe value is converted to a Distance object using the default server length unit.\nThe value should represent a length in the server’s unit system.\n\n\n\nconversions.to_area(value: float | int) -> pint.Quantity\n\nConvert a server value to an area object.\n\nParameters\n\nvalue\n\npython:float | python:int\n\nValue to convert.\n\nReturns\n\nQuantity\n\nConverted area.\n\nNotes\n\nThe value is converted to a Quantity object using the default server area unit.\nThe value should represent an area in the server’s unit system."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/index.html#the-named_selectionpy-module","title":"The named_selection.py module","text":"The named_selection.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/index.html#summary","title":"The named_selection.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCNamedSelectionServiceV1\n\nNamed Selection service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/index.html#description","title":"The named_selection.py module > Description","text":"Description\n\nModule containing the Named Selection service implementation for v1."},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#modeling-sweep-chain-and-sweep-sketch","title":"Examples > Modeling: Sweep chain and sweep sketch","text":"Modeling: Sweep chain and sweep sketch\n\nThis example shows how use the sweep_sketch() and sweep_chain() functions to create more complex extrusion profiles. You use the sweep_sketch() function with a closed sketch profile and the sweep_chain() function for an open profile.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#initialize-the-modeler","title":"Examples > Modeling: Sweep chain and sweep sketch > Initialize the modeler","text":"Initialize the modeler\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#example-creating-a-donut","title":"Examples > Modeling: Sweep chain and sweep sketch > Example: Creating a donut","text":"Example: Creating a donut\n\nThe following code snippets show how to use the sweep_sketch() function to create a 3D donut shape in the Design object. The process involves initializing a sketch design for the donut, defining two circles for the profile and path, and then performing a sweep operation to generate the donut shape."},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#initialize-the-donut-sketch-design","title":"Examples > Modeling: Sweep chain and sweep sketch > Initialize the donut sketch design","text":"Initialize the donut sketch design\n\nA new design sketch named “donut” is created.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#define-circle-parameters","title":"Examples > Modeling: Sweep chain and sweep sketch > Define circle parameters","text":"Define circle parameters\n\npath_radius is set to 5 units, representing the radius of the circular path that the profile circle sweeps along. profile_radius is set to 2 units, representing the radius of the profile circle that sweeps along the path to create the donut body.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#create-the-profile-circle","title":"Examples > Modeling: Sweep chain and sweep sketch > Create the profile circle","text":"Create the profile circle\n\nA circle is created on the XZ-plane centered at the coordinates (5, 0, 0) with a radius defined by profile_radius. This circle serves as the profile or cross-sectional shape of the donut.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#create-the-path-circle","title":"Examples > Modeling: Sweep chain and sweep sketch > Create the path circle","text":"Create the path circle\n\nAnother circle, representing the path along which the profile circle is swept, is created on the XY-plane centered at (0, 0, 0). The radius of this circle is defined by path_radius.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#perform-the-sweep-operation","title":"Examples > Modeling: Sweep chain and sweep sketch > Perform the sweep operation","text":"Perform the sweep operation\n\nThe sweep operation uses the profile circle and sweeps it along the path circle to create the 3D body of the donut. The result is stored in the variable body.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#example-creating-a-bowl","title":"Examples > Modeling: Sweep chain and sweep sketch > Example: Creating a bowl","text":"Example: Creating a bowl\n\nThis code demonstrates the process of using the sweep_chain() function to create a 3D model of a stretched bowl in the Design object. The model is generated by defining a quarter-ellipse as a profile and sweeping it along a circular path, creating a bowl shape with a stretched profile."},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#initialize-the-bowl-design","title":"Examples > Modeling: Sweep chain and sweep sketch > Initialize the bowl design","text":"Initialize the bowl design\n\nA design chain named “bowl” is created to initiate the bowl design process.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#define-parameters","title":"Examples > Modeling: Sweep chain and sweep sketch > Define parameters","text":"Define parameters\n\nradius is set to 10 units, used for both the profile and path definitions.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#create-the-profile-shape","title":"Examples > Modeling: Sweep chain and sweep sketch > Create the profile shape","text":"Create the profile shape\n\nA quarter-ellipse profile is created with a major radius equal to 10 units and a minor radius equal to 5 units. The ellipse is defined in a 3D space with a specific orientation and then trimmed to a quarter using an interval from 0 to pi/2 radians. This profile shapes the bowl’s side.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#create-the-path","title":"Examples > Modeling: Sweep chain and sweep sketch > Create the path","text":"Create the path\n\nA circular path is created, positioned parallel to the XY-plane but shifted upwards by 5 units (half the major radius). The circle has a radius of 10 units and is trimmed to form a complete loop with an interval from 0 to 2pi radians. This path defines the sweeping trajectory for the profile to create the bowl.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#perform-the-sweep-operation","title":"Examples > Modeling: Sweep chain and sweep sketch > Perform the sweep operation","text":"Perform the sweep operation\n\nThe bowl body is generated by sweeping the quarter-ellipse profile along the circular path. The sweep operation molds the profile shape along the path to form the stretched bowl. The result of this operation is stored in the variable body.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/sweep_chain_profile.html#closing-the-modeler","title":"Examples > Modeling: Sweep chain and sweep sketch > Closing the modeler","text":"Closing the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/defaults/index.html#the-defaultspy-module","title":"The defaults.py module","text":"The defaults.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/defaults/index.html#summary","title":"The defaults.py module > Summary","text":"Summary\n\nConstants\n\n\n\n\n\nDEFAULT_HOST\n\nDefault for the HOST name.\n\nDEFAULT_PORT\n\nDefault for the HOST port.\n\nMAX_MESSAGE_LENGTH\n\nDefault for the gRPC maximum message length.\n\nGEOMETRY_SERVICE_DOCKER_IMAGE\n\nDefault for the Geometry service Docker image location.\n\nDEFAULT_PIM_CONFIG\n\nDefault for the PIM configuration when running PIM Light."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/defaults/index.html#description","title":"The defaults.py module > Description","text":"Description\n\nModule providing default connection parameters."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/defaults/index.html#module-detail","title":"The defaults.py module > Module detail","text":"Module detail\n\n\n\ndefaults.DEFAULT_HOST\n\nDefault for the HOST name.\n\nBy default, PyAnsys Geometry searches for the environment variable ANSRV_GEO_HOST,\nand if this variable does not exist, PyAnsys Geometry uses 127.0.0.1 as the host.\n\n\n\ndefaults.DEFAULT_PORT: int\n\nDefault for the HOST port.\n\nBy default, PyAnsys Geometry searches for the environment variable ANSRV_GEO_PORT,\nand if this variable does not exist, PyAnsys Geometry uses 50051 as the port.\n\n\n\ndefaults.MAX_MESSAGE_LENGTH\n\nDefault for the gRPC maximum message length.\n\nBy default, PyAnsys Geometry searches for the environment variable\nPYGEOMETRY_MAX_MESSAGE_LENGTH, and if this variable does not exist,\nit uses 256Mb as the maximum message length.\n\n\n\ndefaults.GEOMETRY_SERVICE_DOCKER_IMAGE = 'ghcr.io/ansys/geometry'\n\nDefault for the Geometry service Docker image location.\n\nTag is dependent on what OS service is requested.\n\n\n\ndefaults.DEFAULT_PIM_CONFIG\n\nDefault for the PIM configuration when running PIM Light.\n\nThis parameter is only to be used when PIM Light is being run."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/index.html#the-edgespy-module","title":"The edges.py module","text":"The edges.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/index.html#summary","title":"The edges.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCEdgesServiceV1\n\nEdges service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/index.html#description","title":"The edges.py module > Description","text":"Description\n\nModule containing the edges service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/GrpcClient.html#grpcclient","title":"GrpcClient","text":"GrpcClient\n\n\n\nclass ansys.geometry.core.connection.client.GrpcClient(host: str = pygeom_defaults.DEFAULT_HOST, port: str | int = pygeom_defaults.DEFAULT_PORT, channel: grpc.Channel | None = None, remote_instance: ansys.platform.instancemanagement.Instance | None = None, docker_instance: ansys.geometry.core.connection.docker_instance.LocalDockerInstance | None = None, product_instance: ansys.geometry.core.connection.product_instance.ProductInstance | None = None, timeout: ansys.geometry.core.typing.Real = 120, logging_level: int = logging.INFO, logging_file: pathlib.Path | str | None = None, proto_version: str | None = None)\n\nWraps the gRPC connection for the Geometry service.\n\nParameters\n\nhost\n\npython:str, default: DEFAULT_HOST\n\nHost where the server is running.\n\nport\n\npython:str or python:int, default: DEFAULT_PORT\n\nPort number where the server is running.\n\nchannel\n\nChannel, default: python:None\n\ngRPC channel for server communication.\n\nremote_instance\n\nansys.platform.instancemanagement.Instance, default: python:None\n\nCorresponding remote instance when the Geometry service\nis launched through PyPIM.\nThis instance is deleted when calling the\nGrpcClient.close\nmethod.\n\ndocker_instance\n\nLocalDockerInstance, default: python:None\n\nCorresponding local Docker instance when the Geometry service is launched using\nthe launch_docker_modeler() method. This local Docker instance is deleted\nwhen the GrpcClient.close\nmethod is called.\n\nproduct_instance\n\nProductInstance, default: python:None\n\nCorresponding local product instance when the product (Discovery or SpaceClaim)\nis launched through the launch_modeler_with_geometry_service(),\nlaunch_modeler_with_discovery() or the launch_modeler_with_spaceclaim()\ninterface. This instance will be deleted\nwhen the GrpcClient.close\nmethod is called.\n\ntimeout\n\nreal, default: 120\n\nMaximum time to spend trying to make the connection.\n\nlogging_level\n\npython:int, default: INFO\n\nLogging level to apply to the client.\n\nlogging_file\n\npython:str or Path, default: python:None\n\nFile to output the log to, if requested.\n\nproto_version: str or None, default: None\n\nVersion of the gRPC protocol to use. If None, the latest version is used."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/GrpcClient.html#overview","title":"GrpcClient > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nbackend_info\n\nGet a string with the backend information.\n\nclose\n\nClose the channel.\n\ntarget\n\nGet the target of the channel.\n\nget_name\n\nGet the target name of the connection.\n\nProperties\n\n\n\n\n\nbackend_type\n\nBackend type.\n\nbackend_version\n\nGet the current backend version.\n\nmultiple_designs_allowed\n\nFlag indicating whether multiple designs are allowed.\n\nchannel\n\nClient gRPC channel.\n\nservices\n\nGRPC services.\n\nlog\n\nSpecific instance logger.\n\nis_closed\n\nFlag indicating whether the client connection is closed.\n\nhealthy\n\nFlag indicating whether the client channel is healthy.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the client as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/GrpcClient.html#import-detail","title":"GrpcClient > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/GrpcClient.html#property-detail","title":"GrpcClient > Property detail","text":"Property detail\n\n\n\nproperty GrpcClient.backend_type: ansys.geometry.core.connection.backend.BackendType\n\nBackend type.\n\nOptions are Windows Service, Linux Service, Discovery,\nand SpaceClaim.\n\nNotes\n\nThis method might return None because determining the backend type is\nnot straightforward.\n\n\n\nproperty GrpcClient.backend_version: semver.version.Version\n\nGet the current backend version.\n\nReturns\n\nVersion\n\nBackend version.\n\n\n\nproperty GrpcClient.multiple_designs_allowed: bool\n\nFlag indicating whether multiple designs are allowed.\n\nNotes\n\nCurrently, only one design is allowed per service. This method will always\nreturn False.\n\n\n\nproperty GrpcClient.channel: grpc.Channel\n\nClient gRPC channel.\n\n\n\nproperty GrpcClient.services: ansys.geometry.core._grpc._services._service._GRPCServices\n\nGRPC services.\n\n\n\nproperty GrpcClient.log: ansys.geometry.core.logger.PyGeometryCustomAdapter\n\nSpecific instance logger.\n\n\n\nproperty GrpcClient.is_closed: bool\n\nFlag indicating whether the client connection is closed.\n\n\n\nproperty GrpcClient.healthy: bool\n\nFlag indicating whether the client channel is healthy."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/GrpcClient.html#method-detail","title":"GrpcClient > Method detail","text":"Method detail\n\n\n\nGrpcClient.backend_info(indent=0) -> str\n\nGet a string with the backend information.\n\nReturns\n\npython:str\n\nString with the backend information.\n\n\n\nGrpcClient.__repr__() -> str\n\nRepresent the client as a string.\n\n\n\nGrpcClient.close()\n\nClose the channel.\n\nNotes\n\nIf an instance of the Geometry service was started using\nPyPIM, this instance is\ndeleted. Furthermore, if a local Docker instance\nof the Geometry service was started, it is stopped.\n\n\n\nGrpcClient.target() -> str\n\nGet the target of the channel.\n\n\n\nGrpcClient.get_name() -> str\n\nGet the target name of the connection."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/index.html#the-trapezoidpy-module","title":"The trapezoid.py module","text":"The trapezoid.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/index.html#summary","title":"The trapezoid.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTrapezoid\n\nProvides for modeling a 2D trapezoid.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/trapezoid/index.html#description","title":"The trapezoid.py module > Description","text":"Description\n\nProvides for creating and managing a trapezoid."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/index.html#the-widgets-package","title":"The widgets package","text":"The widgets package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/index.html#summary","title":"The widgets package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nshow_design_point\n\nProvides the ruler widget for the PyAnsys Geometry plotter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/index.html#description","title":"The widgets package > Description","text":"Description\n\nSubmodule providing widgets for the PyAnsys Geometry plotter."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/SurfaceType.html#surfacetype","title":"SurfaceType","text":"SurfaceType\n\n\n\nclass ansys.geometry.core.designer.face.SurfaceType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the surface types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/SurfaceType.html#overview","title":"SurfaceType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSURFACETYPE_UNKNOWN\n\n\n\nSURFACETYPE_PLANE\n\n\n\nSURFACETYPE_CYLINDER\n\n\n\nSURFACETYPE_CONE\n\n\n\nSURFACETYPE_TORUS\n\n\n\nSURFACETYPE_SPHERE\n\n\n\nSURFACETYPE_NURBS\n\n\n\nSURFACETYPE_PROCEDURAL\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/SurfaceType.html#import-detail","title":"SurfaceType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/SurfaceType.html#attribute-detail","title":"SurfaceType > Attribute detail","text":"Attribute detail\n\n\n\nSurfaceType.SURFACETYPE_UNKNOWN = 0\n\n\n\n\n\nSurfaceType.SURFACETYPE_PLANE = 1\n\n\n\n\n\nSurfaceType.SURFACETYPE_CYLINDER = 2\n\n\n\n\n\nSurfaceType.SURFACETYPE_CONE = 3\n\n\n\n\n\nSurfaceType.SURFACETYPE_TORUS = 4\n\n\n\n\n\nSurfaceType.SURFACETYPE_SPHERE = 5\n\n\n\n\n\nSurfaceType.SURFACETYPE_NURBS = 6\n\n\n\n\n\nSurfaceType.SURFACETYPE_PROCEDURAL = 7\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/Box.html#box","title":"Box","text":"Box\n\n\n\nclass ansys.geometry.core.sketch.box.Box(center: ansys.geometry.core.math.point.Point2D, width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0)\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling a box.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the box.\n\nwidth\n\nQuantity | Distance | Real\n\nWidth of the box.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the box.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/Box.html#overview","title":"Box > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenter\n\nCenter point of the box.\n\nwidth\n\nWidth of the box.\n\nheight\n\nHeight of the box.\n\nperimeter\n\nPerimeter of the box.\n\narea\n\nArea of the box.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/Box.html#import-detail","title":"Box > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/Box.html#property-detail","title":"Box > Property detail","text":"Property detail\n\n\n\nproperty Box.center: ansys.geometry.core.math.point.Point2D\n\nCenter point of the box.\n\n\n\nproperty Box.width: pint.Quantity\n\nWidth of the box.\n\n\n\nproperty Box.height: pint.Quantity\n\nHeight of the box.\n\n\n\nproperty Box.perimeter: pint.Quantity\n\nPerimeter of the box.\n\n\n\nproperty Box.area: pint.Quantity\n\nArea of the box.\n\n\n\nproperty Box.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/SingletonMeta.html#singletonmeta","title":"SingletonMeta","text":"SingletonMeta\n\n\n\nclass ansys.geometry.core.misc.measurements.SingletonMeta\n\nBases: type\n\nProvides a thread-safe implementation of a singleton design pattern."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/SingletonMeta.html#overview","title":"SingletonMeta > Overview","text":"Overview\n\nSpecial methods\n\n\n\n\n\n__call__\n\nReturn a single instance of the class."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/SingletonMeta.html#import-detail","title":"SingletonMeta > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/SingletonMeta.html#method-detail","title":"SingletonMeta > Method detail","text":"Method detail\n\n\n\nSingletonMeta.__call__(*args, **kwargs)\n\nReturn a single instance of the class.\n\nPossible changes to the value of the __init__ argument do not affect the\nreturned instance."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox.html#boundingbox","title":"BoundingBox","text":"BoundingBox\n\n\n\nclass ansys.geometry.core.math.bbox.BoundingBox(min_corner: ansys.geometry.core.math.point.Point3D, max_corner: ansys.geometry.core.math.point.Point3D, center: ansys.geometry.core.math.point.Point3D = None)\n\nMaintains the box structure for Bounding Boxes.\n\nParameters\n\nmin_corner\n\nPoint3D\n\nMinimum corner for the box.\n\nmax_corner\n\nPoint3D\n\nMaximum corner for the box.\n\ncenter\n\nPoint3D\n\nCenter of the box."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox.html#overview","title":"BoundingBox > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncontains_point\n\nEvaluate whether a point lies within the box.\n\ncontains_point_components\n\nCheck if point components are within box.\n\nProperties\n\n\n\n\n\nmin_corner\n\nMinimum corner of the bounding box.\n\nmax_corner\n\nMaximum corner of the bounding box.\n\ncenter\n\nCenter of the bounding box.\n\nStatic methods\n\n\n\n\n\nintersect_bboxes\n\nFind the intersection of 2 BoundingBox objects.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the BoundingBox class.\n\n__ne__\n\nNot equals operator for the BoundingBox class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox.html#import-detail","title":"BoundingBox > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox.html#property-detail","title":"BoundingBox > Property detail","text":"Property detail\n\n\n\nproperty BoundingBox.min_corner: ansys.geometry.core.math.point.Point3D\n\nMinimum corner of the bounding box.\n\n\n\nproperty BoundingBox.max_corner: ansys.geometry.core.math.point.Point3D\n\nMaximum corner of the bounding box.\n\n\n\nproperty BoundingBox.center: ansys.geometry.core.math.point.Point3D\n\nCenter of the bounding box."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox.html#method-detail","title":"BoundingBox > Method detail","text":"Method detail\n\n\n\nBoundingBox.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nEvaluate whether a point lies within the box.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to compare against the bounds.\n\nReturns\n\nbool\n\nTrue if the point is contained in the bounding box. Otherwise, False.\n\n\n\nBoundingBox.contains_point_components(x: ansys.geometry.core.typing.Real, y: ansys.geometry.core.typing.Real, z: ansys.geometry.core.typing.Real) -> bool\n\nCheck if point components are within box.\n\nParameters\n\nx\n\nReal\n\nPoint X component to compare against the bounds.\n\ny\n\nReal\n\nPoint Y component to compare against the bounds.\n\nz\n\nReal\n\nPoint Z component to compare against the bounds.\n\nReturns\n\nbool\n\nTrue if the components are contained in the bounding box. Otherwise, False.\n\n\n\nBoundingBox.__eq__(other: BoundingBox) -> bool\n\nEquals operator for the BoundingBox class.\n\n\n\nBoundingBox.__ne__(other: BoundingBox) -> bool\n\nNot equals operator for the BoundingBox class.\n\n\n\nstatic BoundingBox.intersect_bboxes(box_1: BoundingBox, box_2: BoundingBox) -> None | BoundingBox\n\nFind the intersection of 2 BoundingBox objects.\n\nParameters\n\nbox_1: BoundingBox\n\nThe box to consider the intersection of with respect to box_2.\n\nbox_2: BoundingBox\n\nThe box to consider the intersection of with respect to box_1.\n\nReturns\n\nBoundingBox:\n\nThe box representing the intersection of the two passed in boxes."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/index.html#the-surface_evaluationpy-module","title":"The surface_evaluation.py module","text":"The surface_evaluation.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/index.html#summary","title":"The surface_evaluation.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfaceEvaluation\n\nProvides for evaluating a surface.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/index.html#description","title":"The surface_evaluation.py module > Description","text":"Description\n\nProvides for evaluating a surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/ReversedTrimmedCurve.html#reversedtrimmedcurve","title":"ReversedTrimmedCurve","text":"ReversedTrimmedCurve\n\n\n\nclass ansys.geometry.core.shapes.curves.trimmed_curve.ReversedTrimmedCurve(geometry: ansys.geometry.core.shapes.curves.curve.Curve, start: ansys.geometry.core.math.point.Point3D, end: ansys.geometry.core.math.point.Point3D, interval: ansys.geometry.core.shapes.parameterization.Interval, length: pint.Quantity, grpc_client: ansys.geometry.core.connection.client.GrpcClient = None)\n\nBases: TrimmedCurve\n\nRepresents a reversed trimmed curve.\n\nWhen a curve is reversed, its start and end points are swapped, and parameters for evaluations\nare handled to provide expected results conforming to the direction of the curve. For example,\nevaluating a trimmed curve proportionally at 0 evaluates at the start point of the curve,\nbut evaluating a reversed trimmed curve proportionally at 0 evaluates at what was previously\nthe end point of the curve but is now the start point.\n\nParameters\n\ngeometry\n\nCurve\n\nUnderlying mathematical representation of the curve.\n\nstart\n\nPoint3D\n\nOriginal start point of the curve.\n\nend\n\nPoint3D\n\nOriginal end point of the curve.\n\ninterval\n\nInterval\n\nParametric interval that bounds the curve.\n\nlength\n\nQuantity\n\nLength of the curve.\n\ngrpc_client\n\nGrpcClient, default: python:None\n\ngRPC client that is required for advanced functions such as intersect_curve()."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/ReversedTrimmedCurve.html#overview","title":"ReversedTrimmedCurve > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nevaluate_proportion\n\nEvaluate the curve at a proportional value."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/ReversedTrimmedCurve.html#import-detail","title":"ReversedTrimmedCurve > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/ReversedTrimmedCurve.html#method-detail","title":"ReversedTrimmedCurve > Method detail","text":"Method detail\n\n\n\nReversedTrimmedCurve.evaluate_proportion(param: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nEvaluate the curve at a proportional value.\n\nA parameter of 0 corresponds to the start of the curve, while a parameter of 1\ncorresponds to the end of the curve.\n\nParameters\n\nparam\n\nReal\n\nParameter in the proportional range [0,1].\n\nReturns\n\nCurveEvaluation\n\nResulting curve evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/GRPCCurvesService.html#grpccurvesservice","title":"GRPCCurvesService","text":"GRPCCurvesService\n\n\n\nclass ansys.geometry.core._grpc._services.base.curves.GRPCCurvesService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nCurves service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/GRPCCurvesService.html#overview","title":"GRPCCurvesService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nrevolve_edges\n\nRevolve edges around an axis to create a surface of revolution.\n\nintersect_curves\n\nGet intersection points of curves."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/GRPCCurvesService.html#import-detail","title":"GRPCCurvesService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/GRPCCurvesService.html#method-detail","title":"GRPCCurvesService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCurvesService.revolve_edges(**kwargs) -> dict\n\nRevolve edges around an axis to create a surface of revolution.\n\n\n\nabstractmethod GRPCCurvesService.intersect_curves(**kwargs) -> dict\n\nGet intersection points of curves."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/MeasurementTools.html#measurementtools","title":"MeasurementTools","text":"MeasurementTools\n\n\n\nclass ansys.geometry.core.tools.measurement_tools.MeasurementTools(grpc_client: ansys.geometry.core.connection.GrpcClient, _internal_use: bool = False)\n\nMeasurement tools for PyAnsys Geometry.\n\nParameters\n\ngrpc_client\n\nGrpcClient\n\ngRPC client to use for the measurement tools.\n\n_internal_use\n\nbool, optional\n\nInternal flag to prevent direct instantiation by users.\nThis parameter is for internal use only.\n\nRaises\n\nGeometryRuntimeError\n\nIf the class is instantiated directly by users instead\nof through the modeler.\n\nNotes\n\nThis class should not be instantiated directly. Use\nmodeler.measurement_tools instead."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/MeasurementTools.html#overview","title":"MeasurementTools > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmin_distance_between_objects\n\nFind the gap between two bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/MeasurementTools.html#import-detail","title":"MeasurementTools > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/measurement_tools/MeasurementTools.html#method-detail","title":"MeasurementTools > Method detail","text":"Method detail\n\n\n\nMeasurementTools.min_distance_between_objects(object1: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge, object2: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge) -> Gap\n\nFind the gap between two bodies.\n\nParameters\n\nobject1\n\nUnion[Body, Face, Edge]\n\nFirst object to measure the gap.\n\nobject2\n\nUnion[Body, Face, Edge]\n\nSecond object to measure the gap.\n\nReturns\n\nGap\n\nGap between two bodies.\n\nThis method is only available starting on Ansys release 24R2.\nAlso, using Face and Edge objects as inputs requires a minimum Ansys\nrelease of 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/index.html#the-trimmed_surfacepy-module","title":"The trimmed_surface.py module","text":"The trimmed_surface.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/index.html#summary","title":"The trimmed_surface.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTrimmedSurface\n\nRepresents a trimmed surface.\n\nReversedTrimmedSurface\n\nRepresents a reversed trimmed surface.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/index.html#description","title":"The trimmed_surface.py module > Description","text":"Description\n\nProvides the TrimmedSurface class."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/Gear.html#gear","title":"Gear","text":"Gear\n\n\n\nclass ansys.geometry.core.sketch.gears.Gear\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides the base class for sketching gears."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/Gear.html#overview","title":"Gear > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/Gear.html#import-detail","title":"Gear > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/Gear.html#property-detail","title":"Gear > Property detail","text":"Property detail\n\n\n\nproperty Gear.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Examples","href":"examples/02_sketching/advanced_sketching_gears.html#sketching-parametric-sketching-for-gears","title":"Examples > Sketching: Parametric sketching for gears","text":"Sketching: Parametric sketching for gears\n\nThis example shows how to use gear sketching shapes from PyAnsys Geometry."},{"objectID":"Examples","href":"examples/02_sketching/advanced_sketching_gears.html#perform-required-imports-and-pre-sketching-operations","title":"Examples > Sketching: Parametric sketching for gears > Perform required imports and pre-sketching operations","text":"Perform required imports and pre-sketching operations\n\nPerform required imports and instantiate the Modeler instance and the basic elements that define a sketch.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/advanced_sketching_gears.html#sketch-a-dummy-gear","title":"Examples > Sketching: Parametric sketching for gears > Sketch a dummy gear","text":"Sketch a dummy gear\n\nDummyGear sketches are simple gears that have straight teeth. While they do not ensure actual physical functionality, they might be useful for some simple playground tests.\n\nInstantiate a new Sketch object and then define and plot a dummy gear.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAfter creating the sketch, extrudes it.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/advanced_sketching_gears.html#sketch-a-spur-gear","title":"Examples > Sketching: Parametric sketching for gears > Sketch a spur gear","text":"Sketch a spur gear\n\nSpurGear sketches are parametric CAD spur gears based on four parameters:\n\norigin: Center point location for the desired spur gear. The value must be a Point2D object.\n\nmodule: Ratio between the pitch circle diameter in millimeters and the number of teeth. This is a common parameter for spur gears. The value should be an integer or a float.\n\npressure_angle: Pressure angle expected for the teeth of the spur gear. This is also a common parameter for spur gears. The value must be a pint.Quantity object.\n\nn_teeth: Number of teeth. The value must be an integer.\n\nInstantiate a new Sketch object and then define and plot a spur gear.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAfter creating the sketch, extrude it.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/advanced_sketching_gears.html#close-the-modeler","title":"Examples > Sketching: Parametric sketching for gears > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/index.html#the-componentspy-module","title":"The components.py module","text":"The components.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/index.html#summary","title":"The components.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCComponentsServiceV0\n\nComponents service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/index.html#description","title":"The components.py module > Description","text":"Description\n\nModule containing the components service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/index.html#the-segmentpy-module","title":"The segment.py module","text":"The segment.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/index.html#summary","title":"The segment.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchSegment\n\nProvides segment representation of a line.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/index.html#description","title":"The segment.py module > Description","text":"Description\n\nProvides for creating and managing a segment."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/index.html#the-driving_dimensionspy-module","title":"The driving_dimensions.py module","text":"The driving_dimensions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/index.html#summary","title":"The driving_dimensions.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDrivingDimensionsService\n\nDriving Dimension service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/index.html#description","title":"The driving_dimensions.py module > Description","text":"Description\n\nModule containing the Driving Dimension service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/index.html#the-prepare_toolspy-module","title":"The prepare_tools.py module","text":"The prepare_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/index.html#summary","title":"The prepare_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPrepareTools\n\nPrepare tools for PyAnsys Geometry.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/index.html#description","title":"The prepare_tools.py module > Description","text":"Description\n\nProvides tools for preparing geometry for use with simulation."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/auxiliary/index.html#the-auxiliarypy-module","title":"The auxiliary.py module","text":"The auxiliary.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/auxiliary/index.html#summary","title":"The auxiliary.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nget_design_from_component\n\nGet the Design of the given Component object.\n\nget_design_from_body\n\nGet the Design of the given Body object.\n\nget_design_from_face\n\nGet the Design of the given Face object.\n\nget_design_from_edge\n\nGet the Design of the given Edge object.\n\nget_all_bodies_from_design\n\nFind all the Body objects inside a Design.\n\nget_bodies_from_ids\n\nFind the Body objects inside a Design from its ids.\n\nget_components_from_ids\n\nFind the Component objects inside a Design from its ids.\n\nget_faces_from_ids\n\nFind the Face objects inside a Design from its ids.\n\nget_edges_from_ids\n\nFind the Edge objects inside a Design from its ids.\n\nget_vertices_from_ids\n\nFind the Vertex objects inside a Design from its ids.\n\nget_beams_from_ids\n\nFind the Beam objects inside a Design from its ids.\n\nconvert_color_to_hex\n\nGet the hex string color from input formats.\n\nconvert_opacity_to_hex\n\nGet the hex string from an opacity value.\n\nConstants\n\n\n\n\n\nDEFAULT_COLOR\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/auxiliary/index.html#description","title":"The auxiliary.py module > Description","text":"Description\n\nAuxiliary functions for the PyAnsys Geometry library."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/auxiliary/index.html#module-detail","title":"The auxiliary.py module > Module detail","text":"Module detail\n\n\n\nauxiliary.get_design_from_component(component: ansys.geometry.core.designer.component.Component) -> ansys.geometry.core.designer.design.Design\n\nGet the Design of the given Component object.\n\nParameters\n\ncomponent\n\nComponent\n\nThe component object for which to find the Design.\n\nReturns\n\nDesign\n\nThe Design of the provided component object.\n\n\n\nauxiliary.get_design_from_body(body: ansys.geometry.core.designer.body.Body) -> ansys.geometry.core.designer.design.Design\n\nGet the Design of the given Body object.\n\nParameters\n\nbody\n\nBody\n\nThe body object for which to find the Design.\n\nReturns\n\nDesign\n\nThe Design of the provided body object.\n\n\n\nauxiliary.get_design_from_face(face: ansys.geometry.core.designer.face.Face) -> ansys.geometry.core.designer.design.Design\n\nGet the Design of the given Face object.\n\nParameters\n\nface\n\nFace\n\nThe face object for which to find the Design.\n\nReturns\n\nDesign\n\nThe Design of the provided face object.\n\n\n\nauxiliary.get_design_from_edge(edge: ansys.geometry.core.designer.edge.Edge) -> ansys.geometry.core.designer.design.Design\n\nGet the Design of the given Edge object.\n\nParameters\n\nedge\n\nEdge\n\nThe edge object for which to find the Design.\n\nReturns\n\nDesign\n\nThe Design of the provided edge object.\n\n\n\nauxiliary.get_all_bodies_from_design(design: ansys.geometry.core.designer.design.Design) -> list[ansys.geometry.core.designer.body.Body]\n\nFind all the Body objects inside a Design.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the bodies.\n\nReturns\n\npython:list[Body]\n\nList of Body objects.\n\nNotes\n\nThis method takes a design and gets the corresponding Body objects.\n\n\n\nauxiliary.get_bodies_from_ids(design: ansys.geometry.core.designer.design.Design, body_ids: list[str]) -> list[ansys.geometry.core.designer.body.Body]\n\nFind the Body objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the faces.\n\nbody_ids\n\npython:list[python:str]\n\nList of body ids.\n\nReturns\n\npython:list[Body]\n\nList of Body objects.\n\nNotes\n\nThis method takes a design and body ids, and gets their corresponding Body object.\n\n\n\nauxiliary.get_components_from_ids(design: ansys.geometry.core.designer.design.Design, component_ids: list[str]) -> list[ansys.geometry.core.designer.component.Component]\n\nFind the Component objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the components.\n\ncomponent_ids\n\npython:list[python:str]\n\nList of component ids.\n\nReturns\n\npython:list[Component]\n\nList of Component objects.\n\nNotes\n\nThis method takes a design and component ids, and gets their corresponding Component object.\n\n\n\nauxiliary.get_faces_from_ids(design: ansys.geometry.core.designer.design.Design, face_ids: list[str]) -> list[ansys.geometry.core.designer.face.Face]\n\nFind the Face objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the faces.\n\nface_ids\n\npython:list[python:str]\n\nList of face ids.\n\nReturns\n\npython:list[Face]\n\nList of Face objects.\n\nNotes\n\nThis method takes a design and face ids, and gets their corresponding Face object.\n\n\n\nauxiliary.get_edges_from_ids(design: ansys.geometry.core.designer.design.Design, edge_ids: list[str]) -> list[ansys.geometry.core.designer.edge.Edge]\n\nFind the Edge objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the edges.\n\nedge_ids\n\npython:list[python:str]\n\nList of edge ids.\n\nReturns\n\npython:list[Edge]\n\nList of Edge objects.\n\nNotes\n\nThis method takes a design and edge ids, and gets their corresponding Edge objects.\n\n\n\nauxiliary.get_vertices_from_ids(design: ansys.geometry.core.designer.design.Design, vertex_ids: list[str]) -> list[ansys.geometry.core.designer.vertex.Vertex]\n\nFind the Vertex objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the vertices.\n\nvertex_ids\n\npython:list[python:str]\n\nList of vertex ids.\n\nReturns\n\npython:list[Vertex]\n\nList of Vertex objects.\n\nNotes\n\nThis method takes a design and vertex ids, and gets their corresponding Vertex objects.\n\n\n\nauxiliary.get_beams_from_ids(design: ansys.geometry.core.designer.design.Design, beam_ids: list[str]) -> list[ansys.geometry.core.designer.beam.Beam]\n\nFind the Beam objects inside a Design from its ids.\n\nParameters\n\ndesign\n\nDesign\n\nParent design for the beams.\n\nbeam_ids\n\npython:list[python:str]\n\nList of beam ids.\n\nReturns\n\npython:list[Beam]\n\nList of Beam objects.\n\nNotes\n\nThis method takes a design and beam ids, and gets their corresponding Beam objects.\n\n\n\nauxiliary.convert_color_to_hex(color: str | tuple[float, float, float] | tuple[float, float, float, float]) -> str\n\nGet the hex string color from input formats.\n\nParameters\n\ncolor\n\npython:str | python:tuple[python:float, python:float, python:float] | python:tuple[python:float, python:float, python:float, python:float]\n\nColor to set the body to. This can be a string representing a color name\nor a tuple of RGB values in the range [0, 1] (RGBA) or [0, 255] (pure RGB).\n\nReturns\n\npython:str\n\nThe hex code string for the color, formatted #rrggbbaa.\n\n\n\nauxiliary.convert_opacity_to_hex(opacity: float) -> str\n\nGet the hex string from an opacity value.\n\nParameters\n\nopacity\n\npython:float\n\nOpacity to set body to. Must be in the range [0, 1].\n\nReturns\n\nThe hex code for the opacity formatted #aa\n\n\n\n\n\nauxiliary.DEFAULT_COLOR = '#D6F7D1'\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/DuplicateFaceProblemAreas.html#duplicatefaceproblemareas","title":"DuplicateFaceProblemAreas","text":"DuplicateFaceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.DuplicateFaceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, faces: list[ansys.geometry.core.designer.face.Face])\n\nBases: ProblemArea\n\nProvides duplicate face problem area definition.\n\nRepresents a duplicate face problem area with unique identifier and associated faces.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nfaces\n\npython:list[Face]\n\nList of faces associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/DuplicateFaceProblemAreas.html#overview","title":"DuplicateFaceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nfaces\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/DuplicateFaceProblemAreas.html#import-detail","title":"DuplicateFaceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/DuplicateFaceProblemAreas.html#property-detail","title":"DuplicateFaceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty DuplicateFaceProblemAreas.faces: list[ansys.geometry.core.designer.face.Face]\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/DuplicateFaceProblemAreas.html#method-detail","title":"DuplicateFaceProblemAreas > Method detail","text":"Method detail\n\n\n\nDuplicateFaceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Measurement.html#measurement","title":"Measurement","text":"Measurement\n\n\n\nclass ansys.geometry.core.misc.measurements.Measurement(value: ansys.geometry.core.typing.Real | pint.Quantity, unit: pint.Unit, dimensions: pint.Unit)\n\nBases: ansys.geometry.core.misc.units.PhysicalQuantity\n\nProvides the PhysicalQuantity subclass for holding a measurement.\n\nParameters\n\nvalue\n\nReal | Quantity\n\nValue of the measurement.\n\nunit\n\nUnit\n\nUnits for the measurement.\n\ndimensions\n\nUnit\n\nUnits for extracting the dimensions of the measurement.\nIf ~pint.Unit.meter is given, the dimension extracted is [length]."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Measurement.html#overview","title":"Measurement > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nvalue\n\nValue of the measurement.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresentation of the Measurement class.\n\n__eq__\n\nEquals operator for the Measurement class."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Measurement.html#import-detail","title":"Measurement > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Measurement.html#property-detail","title":"Measurement > Property detail","text":"Property detail\n\n\n\nproperty Measurement.value: pint.Quantity\n\nValue of the measurement."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Measurement.html#method-detail","title":"Measurement > Method detail","text":"Method detail\n\n\n\nMeasurement.__repr__()\n\nRepresentation of the Measurement class.\n\n\n\nMeasurement.__eq__(other: Measurement) -> bool\n\nEquals operator for the Measurement class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/index.html#the-conepy-module","title":"The cone.py module","text":"The cone.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/index.html#summary","title":"The cone.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCone\n\nProvides 3D cone representation.\n\nConeEvaluation\n\nEvaluate the cone at given parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/index.html#description","title":"The cone.py module > Description","text":"Description\n\nProvides for creating and managing a cone."},{"objectID":"Examples","href":"examples/99_misc/template.html#miscellaneous-example-template","title":"Examples > Miscellaneous: Example template","text":"Miscellaneous: Example template\n\nThis example serves as a template for creating new examples in the documentation. It shows developers how to structure their code and comments for clarity and consistency. It also provides a basic outline for importing necessary modules, initializing the modeler, performing operations, and closing the modeler.\n\nIt is important to follow the conventions and formatting used in this example to ensure that the documentation is easy to read and understandable."},{"objectID":"Examples","href":"examples/99_misc/template.html#example-imports","title":"Examples > Miscellaneous: Example template > Example imports","text":"Example imports\n\nPerform the required imports for this example. This section should include all necessary imports for the example to run correctly.\n\n\n\n"},{"objectID":"Examples","href":"examples/99_misc/template.html#initialize-the-modeler","title":"Examples > Miscellaneous: Example template > Initialize the modeler","text":"Initialize the modeler\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/99_misc/template.html#body-of-your-example","title":"Examples > Miscellaneous: Example template > Body of your example","text":"Body of your example\n\nDevelopers can add their code here to perform the desired operations. This section should include comments and explanations to explain what the code is doing."},{"objectID":"Examples","href":"examples/99_misc/template.html#example-section-initialize-a-design","title":"Examples > Miscellaneous: Example template > Example section: Initialize a design","text":"Example section: Initialize a design\n\nCreate a design named example-design.\n\n\n\n"},{"objectID":"Examples","href":"examples/99_misc/template.html#example-section-include-images","title":"Examples > Miscellaneous: Example template > Example section: Include images","text":"Example section: Include images\n\nThis section demonstrates how to include static images in the documentation. You should place these images in the doc/source/_static/ directory.\n\nYou can then reference images in the documentation using the following syntax:"},{"objectID":"Examples","href":"examples/99_misc/template.html#example-section-create-a-sketch-and-plot-it","title":"Examples > Miscellaneous: Example template > Example section: Create a sketch and plot it","text":"Example section: Create a sketch and plot it\n\nThis section demonstrates how to create a sketch and plot it.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/99_misc/template.html#example-section-extrude-the-sketch-and-create-a-body","title":"Examples > Miscellaneous: Example template > Example section: Extrude the sketch and create a body","text":"Example section: Extrude the sketch and create a body\n\nThis section demonstrates how to extrude the sketch and create a body.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/99_misc/template.html#close-the-modeler","title":"Examples > Miscellaneous: Example template > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/Parameter.html#parameter","title":"Parameter","text":"Parameter\n\n\n\nclass ansys.geometry.core.parameters.parameter.Parameter(id: int, name: str, dimension_type: ParameterType, dimension_value: ansys.geometry.core.typing.Real)\n\nRepresents a parameter.\n\nParameters\n\nid\n\npython:int\n\nUnique ID for the parameter.\n\nname\n\npython:str\n\nName of the parameter.\n\ndimension_type\n\nParameterType\n\nType of the parameter.\n\ndimension_value\n\npython:float\n\nValue of the parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/Parameter.html#overview","title":"Parameter > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nname\n\nGet the name of the parameter.\n\ndimension_value\n\nGet the value of the parameter.\n\ndimension_type\n\nGet the type of the parameter.\n\nAttributes\n\n\n\n\n\nid\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/Parameter.html#import-detail","title":"Parameter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/Parameter.html#property-detail","title":"Parameter > Property detail","text":"Property detail\n\n\n\nproperty Parameter.name: str\n\nGet the name of the parameter.\n\n\n\nproperty Parameter.dimension_value: ansys.geometry.core.typing.Real\n\nGet the value of the parameter.\n\n\n\nproperty Parameter.dimension_type: ParameterType\n\nGet the type of the parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/Parameter.html#attribute-detail","title":"Parameter > Attribute detail","text":"Attribute detail\n\n\n\nParameter.id\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamUV.html#paramuv","title":"ParamUV","text":"ParamUV\n\n\n\nclass ansys.geometry.core.shapes.parameterization.ParamUV(u: ansys.geometry.core.typing.Real, v: ansys.geometry.core.typing.Real)\n\nParameter class containing 2 parameters: (u, v).\n\nParameters\n\nu\n\nReal\n\nU parameter.\n\nv\n\nReal\n\nV parameter.\n\nNotes\n\nLikened to a 2D point in UV space. Used as an argument in parametric\nsurface evaluations. This matches the service implementation for the\nGeometry service."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamUV.html#overview","title":"ParamUV > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nu\n\nU parameter.\n\nv\n\nV parameter.\n\nSpecial methods\n\n\n\n\n\n__add__\n\nAdd the u and v components of the other ParamUV to this ParamUV.\n\n__sub__\n\nSubtract the u and v components of a ParamUV from this ParamUV.\n\n__mul__\n\nMultiplies the u and v components of this ParamUV by a ParamUV.\n\n__truediv__\n\nDivides the u and v components of this ParamUV by a ParamUV.\n\n__iter__\n\nIterate a ParamUV.\n\n__repr__\n\nRepresent the ParamUV as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamUV.html#import-detail","title":"ParamUV > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamUV.html#property-detail","title":"ParamUV > Property detail","text":"Property detail\n\n\n\nproperty ParamUV.u: ansys.geometry.core.typing.Real\n\nU parameter.\n\n\n\nproperty ParamUV.v: ansys.geometry.core.typing.Real\n\nV parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamUV.html#method-detail","title":"ParamUV > Method detail","text":"Method detail\n\n\n\nParamUV.__add__(other: ParamUV) -> ParamUV\n\nAdd the u and v components of the other ParamUV to this ParamUV.\n\nParameters\n\nother\n\nParamUV\n\nThe parameters to add these parameters.\n\nReturns\n\nParamUV\n\nThe sum of the parameters.\n\n\n\nParamUV.__sub__(other: ParamUV) -> ParamUV\n\nSubtract the u and v components of a ParamUV from this ParamUV.\n\nParameters\n\nother\n\nParamUV\n\nThe parameters to subtract from these parameters.\n\nReturns\n\nParamUV\n\nThe difference of the parameters.\n\n\n\nParamUV.__mul__(other: ParamUV) -> ParamUV\n\nMultiplies the u and v components of this ParamUV by a ParamUV.\n\nParameters\n\nother\n\nParamUV\n\nThe parameters to multiply by these parameters.\n\nReturns\n\nParamUV\n\nThe product of the parameters.\n\n\n\nParamUV.__truediv__(other: ParamUV) -> ParamUV\n\nDivides the u and v components of this ParamUV by a ParamUV.\n\nParameters\n\nother\n\nParamUV\n\nThe parameters to divide these parameters by.\n\nReturns\n\nParamUV\n\nThe quotient of the parameters.\n\n\n\nParamUV.__iter__()\n\nIterate a ParamUV.\n\n\n\nParamUV.__repr__() -> str\n\nRepresent the ParamUV as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InexactEdgeProblemAreas.html#inexactedgeproblemareas","title":"InexactEdgeProblemAreas","text":"InexactEdgeProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.InexactEdgeProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nBases: ProblemArea\n\nRepresents an inexact edge problem area with unique identifier and associated edges.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nedges\n\npython:list[Edge]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InexactEdgeProblemAreas.html#overview","title":"InexactEdgeProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nedges\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InexactEdgeProblemAreas.html#import-detail","title":"InexactEdgeProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InexactEdgeProblemAreas.html#property-detail","title":"InexactEdgeProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty InexactEdgeProblemAreas.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/InexactEdgeProblemAreas.html#method-detail","title":"InexactEdgeProblemAreas > Method detail","text":"Method detail\n\n\n\nInexactEdgeProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#localdockerinstance","title":"LocalDockerInstance","text":"LocalDockerInstance\n\n\n\nclass ansys.geometry.core.connection.docker_instance.LocalDockerInstance(port: int = pygeom_defaults.DEFAULT_PORT, connect_to_existing_service: bool = True, restart_if_existing_service: bool = False, name: str | None = None, image: GeometryContainers | None = None)\n\nInstantiates a Geometry service as a local Docker container.\n\nBy default, if a container with the Geometry service already exists at the given port,\nPyAnsys Geometry connects to it. Otherwise, PyAnsys Geometry tries to launch its own service.\n\nParameters\n\nport\n\npython:int, optional\n\nLocalhost port to deploy the Geometry service on or the\nthe Modeler interface to connect to (if it is already deployed). By default,\nthe value is the one for the DEFAULT_PORT connection parameter.\n\nconnect_to_existing_service\n\nbool, default: python:True\n\nWhether the Modeler interface should connect to a Geometry\nservice already deployed at the specified port.\n\nrestart_if_existing_service\n\nbool, default: python:False\n\nWhether the Geometry service (which is already running)\nshould be restarted when attempting connection.\n\nname\n\npython:str or python:None, default: python:None\n\nName of the Docker container to deploy. The default is None,\nin which case Docker assigns it a random name.\n\nimage\n\nGeometryContainers or python:None, default: python:None\n\nThe Geometry service Docker image to deploy. The default is None,\nin which case the LocalDockerInstance class identifies the OS of your\nDocker engine and deploys the latest version of the Geometry service for that\nOS."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#overview","title":"LocalDockerInstance > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontainer\n\nDocker container object that hosts the deployed Geometry service.\n\nexisted_previously\n\nFlag indicating whether the container previously existed.\n\nAttributes\n\n\n\n\n\n__DOCKER_CLIENT__\n\nDocker client class variable.\n\nStatic methods\n\n\n\n\n\ndocker_client\n\nGet the initialized __DOCKER_CLIENT__ object.\n\nis_docker_installed\n\nCheck a local installation of Docker engine is available and running."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#import-detail","title":"LocalDockerInstance > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#property-detail","title":"LocalDockerInstance > Property detail","text":"Property detail\n\n\n\nproperty LocalDockerInstance.container: docker.models.containers.Container\n\nDocker container object that hosts the deployed Geometry service.\n\n\n\nproperty LocalDockerInstance.existed_previously: bool\n\nFlag indicating whether the container previously existed.\n\nReturns False if the Geometry service was effectively\ndeployed by this class or True if it already existed."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#attribute-detail","title":"LocalDockerInstance > Attribute detail","text":"Attribute detail\n\n\n\nLocalDockerInstance.__DOCKER_CLIENT__: docker.client.DockerClient = None\n\nDocker client class variable.\n\nNotes\n\nThe default is None, in which case lazy initialization is used.\n__DOCKER_CLIENT__ is a class variable, meaning that it is\nthe same variable for all instances of this class."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/LocalDockerInstance.html#method-detail","title":"LocalDockerInstance > Method detail","text":"Method detail\n\n\n\nstatic LocalDockerInstance.docker_client() -> docker.client.DockerClient\n\nGet the initialized __DOCKER_CLIENT__ object.\n\nReturns\n\nDockerClient\n\nInitialized Docker client.\n\nNotes\n\nThe LocalDockerInstance class performs a lazy initialization of the\n__DOCKER_CLIENT__ class variable.\n\n\n\nstatic LocalDockerInstance.is_docker_installed() -> bool\n\nCheck a local installation of Docker engine is available and running.\n\nReturns\n\nbool\n\nTrue if Docker engine is available and running, False otherwise."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/GRPCCoordinateSystemService.html#grpccoordinatesystemservice","title":"GRPCCoordinateSystemService","text":"GRPCCoordinateSystemService\n\n\n\nclass ansys.geometry.core._grpc._services.base.coordinate_systems.GRPCCoordinateSystemService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/GRPCCoordinateSystemService.html#overview","title":"GRPCCoordinateSystemService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate\n\nCreate a coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/GRPCCoordinateSystemService.html#import-detail","title":"GRPCCoordinateSystemService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/GRPCCoordinateSystemService.html#method-detail","title":"GRPCCoordinateSystemService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCoordinateSystemService.create(**kwargs) -> dict\n\nCreate a coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/index.html#the-named_selectionpy-module","title":"The named_selection.py module","text":"The named_selection.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/index.html#summary","title":"The named_selection.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCNamedSelectionServiceV0\n\nNamed Selection service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/index.html#description","title":"The named_selection.py module > Description","text":"Description\n\nModule containing the Named Selection service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/GRPCAdminServiceV0.html#grpcadminservicev0","title":"GRPCAdminServiceV0","text":"GRPCAdminServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.admin.GRPCAdminServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.admin.GRPCAdminService\n\nAdmin service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nadmin service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/GRPCAdminServiceV0.html#overview","title":"GRPCAdminServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_backend\n\nGet server information.\n\nget_logs\n\nGet server logs.\n\nget_service_status\n\nGet server status (i.e. healthy or not).\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/GRPCAdminServiceV0.html#import-detail","title":"GRPCAdminServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/GRPCAdminServiceV0.html#attribute-detail","title":"GRPCAdminServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCAdminServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/GRPCAdminServiceV0.html#method-detail","title":"GRPCAdminServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCAdminServiceV0.get_backend(**kwargs) -> dict\n\nGet server information.\n\n\n\nGRPCAdminServiceV0.get_logs(**kwargs) -> dict\n\nGet server logs.\n\n\n\nGRPCAdminServiceV0.get_service_status(**kwargs) -> dict\n\nGet server status (i.e. healthy or not)."},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#modeling-extruded-plate-with-cut-operations","title":"Examples > Modeling: Extruded plate with cut operations","text":"Modeling: Extruded plate with cut operations\n\nAs seen in the Rectangular plate with multiple bodies example, you can create a complex sketch with holes and extrude it to create a body. However, you can also perform cut operations on the extruded body to achieve similar results."},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#perform-required-imports","title":"Examples > Modeling: Extruded plate with cut operations > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#define-sketch-profile-without-holes","title":"Examples > Modeling: Extruded plate with cut operations > Define sketch profile without holes","text":"Define sketch profile without holes\n\nCreate a sketch profile for the proposed design. The sketch is the same as the Rectangular plate with multiple bodies example, but without the holes.\n\nThese holes are created by performing cut operations on the extruded body in the next steps.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#define-sketch-profile-for-holes","title":"Examples > Modeling: Extruded plate with cut operations > Define sketch profile for holes","text":"Define sketch profile for holes\n\nCreate a sketch profile for the holes in the proposed design. The holes are created by sketching circles at the four corners of the plate. First create a reference sketch for all the circles. This sketch is translated to the four corners of the plate.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#perform-cut-operations-on-the-extruded-body","title":"Examples > Modeling: Extruded plate with cut operations > Perform cut operations on the extruded body","text":"Perform cut operations on the extruded body\n\nPerform cut operations on the extruded body to create holes at the four corners of the plate.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/cut_operation_on_extrude.html#close-the-modeler","title":"Examples > Modeling: Extruded plate with cut operations > Close the modeler","text":"Close the modeler\n\nClose the modeler to free up resources and release the connection.\n\n\n\n"},{"objectID":"Home","href":"user_guide/primitives.html#primitives","title":"Primitives","text":"Primitives\n\nThe PyAnsys Geometry math subpackage consists\nof primitive representations of basic geometric objects, such as a point, vector, and\nmatrix. To operate and manipulate physical quantities, this subpackage uses\nPint, a third-party open source software\nthat other PyAnsys libraries also use. It also uses its shapes\nsubpackage to evaluate and represent geometric shapes (both curves and surfaces),\nsuch as lines, circles, cones, spheres and torus.\n\nThis table shows PyAnsys Geometry names and base values for the physical quantities:\n\n\n\n\n\nName\n\nvalue\n\nLENGTH_ACCURACY\n\n1e-8\n\nANGLE_ACCURACY\n\n1e-6\n\nDEFAULT_UNITS.LENGTH\n\nmeter\n\nDEFAULT_UNITS.ANGLE\n\nradian\n\nTo define accuracy and measurements, you use these PyAnsys Geometry classes:\n\nAccuracy()\n\nMeasurements()"},{"objectID":"Home","href":"user_guide/primitives.html#planes","title":"Primitives > Planes","text":"Planes\n\nThe Plane() class provides primitive representation\nof a 2D plane in 3D space. It has an origin and a coordinate system.\nSketched shapes are always defined relative to a plane.\nThe default working plane is XY, which has (0,0) as its origin.\n\nIf you create a 2D object in the plane, PyAnsys Geometry converts it to the global coordinate system so that\nthe 2D feature executes as expected:"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/index.html#the-pointpy-module","title":"The point.py module","text":"The point.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/index.html#summary","title":"The point.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPoint2D\n\nProvides geometry primitive representation for a 2D point.\n\nPoint3D\n\nProvides geometry primitive representation for a 3D point.\n\nConstants\n\n\n\n\n\nDEFAULT_POINT2D_VALUES\n\nDefault values for a 2D point.\n\nDEFAULT_POINT3D_VALUES\n\nDefault values for a 3D point.\n\nBASE_UNIT_LENGTH\n\nDefault value for the length of the base unit.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/index.html#description","title":"The point.py module > Description","text":"Description\n\nProvides geometry primitive representation for 2D and 3D points."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/index.html#module-detail","title":"The point.py module > Module detail","text":"Module detail\n\n\n\npoint.DEFAULT_POINT2D_VALUES\n\nDefault values for a 2D point.\n\n\n\npoint.DEFAULT_POINT3D_VALUES\n\nDefault values for a 3D point.\n\n\n\npoint.BASE_UNIT_LENGTH\n\nDefault value for the length of the base unit."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/index.html#the-beamspy-module","title":"The beams.py module","text":"The beams.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/index.html#summary","title":"The beams.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBeamsService\n\nBeams service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/index.html#description","title":"The beams.py module > Description","text":"Description\n\nModule containing the beams service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/ExtrudeType.html#extrudetype","title":"ExtrudeType","text":"ExtrudeType\n\n\n\nclass ansys.geometry.core.designer.geometry_commands.ExtrudeType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for extrusion types."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/ExtrudeType.html#overview","title":"ExtrudeType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\n\n\nADD\n\n\n\nCUT\n\n\n\nFORCE_ADD\n\n\n\nFORCE_CUT\n\n\n\nFORCE_INDEPENDENT\n\n\n\nFORCE_NEW_SURFACE\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/ExtrudeType.html#import-detail","title":"ExtrudeType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/ExtrudeType.html#attribute-detail","title":"ExtrudeType > Attribute detail","text":"Attribute detail\n\n\n\nExtrudeType.NONE = 0\n\n\n\n\n\nExtrudeType.ADD = 1\n\n\n\n\n\nExtrudeType.CUT = 2\n\n\n\n\n\nExtrudeType.FORCE_ADD = 3\n\n\n\n\n\nExtrudeType.FORCE_CUT = 4\n\n\n\n\n\nExtrudeType.FORCE_INDEPENDENT = 5\n\n\n\n\n\nExtrudeType.FORCE_NEW_SURFACE = 6\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/GRPCEdgesService.html#grpcedgesservice","title":"GRPCEdgesService","text":"GRPCEdgesService\n\n\n\nclass ansys.geometry.core._grpc._services.base.edges.GRPCEdgesService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nEdges service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/GRPCEdgesService.html#overview","title":"GRPCEdgesService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_edge\n\nGet edge.\n\nget_curve\n\nGet curve information for the edge.\n\nget_start_and_end_points\n\nGet start and end points for the edge.\n\nget_length\n\nGet the length of the edge.\n\nget_interval\n\nGet the interval of the edge.\n\nget_faces\n\nGet the faces that are connected to the edge.\n\nget_vertices\n\nGet the vertices that are connected to the edge.\n\nget_bounding_box\n\nGet the bounding box of the edge.\n\nextrude_edges\n\nExtrude edges.\n\nextrude_edges_up_to\n\nExtrude edges up to a face.\n\nmove_imprint_edges\n\nMove imprint edges.\n\noffset_edges\n\nOffset edges."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/GRPCEdgesService.html#import-detail","title":"GRPCEdgesService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/GRPCEdgesService.html#method-detail","title":"GRPCEdgesService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCEdgesService.get_edge(**kwargs) -> dict\n\nGet edge.\n\n\n\nabstractmethod GRPCEdgesService.get_curve(**kwargs) -> dict\n\nGet curve information for the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_start_and_end_points(**kwargs) -> dict\n\nGet start and end points for the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_length(**kwargs) -> dict\n\nGet the length of the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_interval(**kwargs) -> dict\n\nGet the interval of the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_faces(**kwargs) -> dict\n\nGet the faces that are connected to the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_vertices(**kwargs) -> dict\n\nGet the vertices that are connected to the edge.\n\n\n\nabstractmethod GRPCEdgesService.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of the edge.\n\n\n\nabstractmethod GRPCEdgesService.extrude_edges(**kwargs) -> dict\n\nExtrude edges.\n\n\n\nabstractmethod GRPCEdgesService.extrude_edges_up_to(**kwargs) -> dict\n\nExtrude edges up to a face.\n\n\n\nabstractmethod GRPCEdgesService.move_imprint_edges(**kwargs) -> dict\n\nMove imprint edges.\n\n\n\nabstractmethod GRPCEdgesService.offset_edges(**kwargs) -> dict\n\nOffset edges."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/Accuracy.html#accuracy","title":"Accuracy","text":"Accuracy\n\n\n\nclass ansys.geometry.core.misc.accuracy.Accuracy\n\nDecimal precision evaluations for math operations."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/Accuracy.html#overview","title":"Accuracy > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nlength_accuracy\n\nReturn the LENGTH_ACCURACY constant.\n\nangle_accuracy\n\nReturn the ANGLE_ACCURACY constant.\n\ndouble_accuracy\n\nReturn the DOUBLE_ACCURACY constant.\n\nlength_is_equal\n\nCheck if the comparison length is equal to the reference length.\n\nequal_doubles\n\nCompare two double values.\n\ncompare_with_tolerance\n\nCompare two doubles given the relative and absolute tolerances.\n\nlength_is_greater_than_or_equal\n\nCheck if the length is greater than the reference length.\n\nlength_is_less_than_or_equal\n\nCheck if the length is less than or equal to the reference length.\n\nlength_is_zero\n\nCheck if the length is within the length accuracy of exact zero.\n\nlength_is_negative\n\nCheck if the length is below a negative length accuracy.\n\nlength_is_positive\n\nCheck if the length is above a positive length accuracy.\n\nangle_is_zero\n\nCheck if the length is within the angle accuracy of exact zero.\n\nangle_is_negative\n\nCheck if the angle is below a negative angle accuracy.\n\nangle_is_positive\n\nCheck if the angle is above a positive angle accuracy.\n\nis_within_tolerance\n\nCheck if two values are inside a relative and absolute tolerance."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/Accuracy.html#import-detail","title":"Accuracy > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/Accuracy.html#method-detail","title":"Accuracy > Method detail","text":"Method detail\n\n\n\nstatic Accuracy.length_accuracy() -> ansys.geometry.core.typing.Real\n\nReturn the LENGTH_ACCURACY constant.\n\n\n\nstatic Accuracy.angle_accuracy() -> ansys.geometry.core.typing.Real\n\nReturn the ANGLE_ACCURACY constant.\n\n\n\nstatic Accuracy.double_accuracy() -> ansys.geometry.core.typing.Real\n\nReturn the DOUBLE_ACCURACY constant.\n\n\n\nstatic Accuracy.length_is_equal(comparison_length: ansys.geometry.core.typing.Real, reference_length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the comparison length is equal to the reference length.\n\nReturns\n\nbool\n\nTrue if the comparison length is equal to the reference length\nwithin the length accuracy, False otherwise.\n\nNotes\n\nThe check is done up to the constant value specified for LENGTH_ACCURACY.\n\n\n\nstatic Accuracy.equal_doubles(a: ansys.geometry.core.typing.Real, b: ansys.geometry.core.typing.Real)\n\nCompare two double values.\n\n\n\nstatic Accuracy.compare_with_tolerance(a: ansys.geometry.core.typing.Real, b: ansys.geometry.core.typing.Real, relative_tolerance: ansys.geometry.core.typing.Real, absolute_tolerance: ansys.geometry.core.typing.Real) -> ansys.geometry.core.typing.Real\n\nCompare two doubles given the relative and absolute tolerances.\n\n\n\nstatic Accuracy.length_is_greater_than_or_equal(comparison_length: ansys.geometry.core.typing.Real, reference_length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is greater than the reference length.\n\nReturns\n\nbool\n\nTrue if the comparison length is greater than the reference length within\nthe length accuracy, False otherwise.\n\nNotes\n\nThe check is done up to the constant value specified for LENGTH_ACCURACY.\n\n\n\nstatic Accuracy.length_is_less_than_or_equal(comparison_length: ansys.geometry.core.typing.Real, reference_length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is less than or equal to the reference length.\n\nReturns\n\nbool\n\nTrue if the comparison length is less than or equal to the reference length\nwithin the length accuracy, False otherwise.\n\nNotes\n\nThe check is done up to the constant value specified for LENGTH_ACCURACY.\n\n\n\nstatic Accuracy.length_is_zero(length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is within the length accuracy of exact zero.\n\nReturns\n\nbool\n\nTrue if the length is within the length accuracy of exact zero,\nFalse otherwise.\n\n\n\nstatic Accuracy.length_is_negative(length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is below a negative length accuracy.\n\nReturns\n\nbool\n\nTrue if the length is below a negative length accuracy,\n\nFalse otherwise.\n\n\n\nstatic Accuracy.length_is_positive(length: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is above a positive length accuracy.\n\nReturns\n\nbool\n\nTrue if the length is above a positive length accuracy,\n\nFalse otherwise.\n\n\n\nstatic Accuracy.angle_is_zero(angle: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the length is within the angle accuracy of exact zero.\n\nReturns\n\nbool\n\nTrue if the length is within the angle accuracy of exact zero,\n\nFalse otherwise.\n\n\n\nstatic Accuracy.angle_is_negative(angle: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the angle is below a negative angle accuracy.\n\nReturns\n\nbool\n\nTrue if the angle is below a negative angle accuracy,\n\nFalse otherwise.\n\n\n\nstatic Accuracy.angle_is_positive(angle: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the angle is above a positive angle accuracy.\n\nReturns\n\nbool\n\nTrue if the angle is above a positive angle accuracy,\n\nFalse otherwise.\n\n\n\nstatic Accuracy.is_within_tolerance(a: ansys.geometry.core.typing.Real, b: ansys.geometry.core.typing.Real, relative_tolerance: ansys.geometry.core.typing.Real, absolute_tolerance: ansys.geometry.core.typing.Real) -> bool\n\nCheck if two values are inside a relative and absolute tolerance.\n\nParameters\n\na\n\nReal\n\nFirst value.\n\nb\n\nReal\n\nSecond value.\n\nrelative_tolerance\n\nReal\n\nRelative tolerance accepted.\n\nabsolute_tolerance\n\nReal\n\nAbsolute tolerance accepted.\n\nReturns\n\nbool\n\nTrue if the values are inside the accepted tolerances,\nFalse otherwise."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/Circle.html#circle","title":"Circle","text":"Circle\n\n\n\nclass ansys.geometry.core.shapes.curves.circle.Circle(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.curves.curve.Curve\n\nProvides 3D circle representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the circle.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the circle.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/Circle.html#overview","title":"Circle > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the curve.\n\ncontains_point\n\nCheck a point is contained by the curve.\n\nMethods\n\n\n\n\n\nevaluate\n\nEvaluate the circle at a given parameter.\n\ntransformed_copy\n\nCreate a transformed copy of the circle from a transformation matrix.\n\nmirrored_copy\n\nCreate a mirrored copy of the circle along the y-axis.\n\nproject_point\n\nProject a point onto the circle and evauate the circle.\n\nis_coincident_circle\n\nDetermine if the circle is coincident with another.\n\nparameterization\n\nGet the parametrization of the circle.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the circle.\n\nradius\n\nRadius of the circle.\n\ndiameter\n\nDiameter of the circle.\n\nperimeter\n\nPerimeter of the circle.\n\narea\n\nArea of the circle.\n\ndir_x\n\nX-direction of the circle.\n\ndir_y\n\nY-direction of the circle.\n\ndir_z\n\nZ-direction of the circle.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Circle class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/Circle.html#import-detail","title":"Circle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/Circle.html#property-detail","title":"Circle > Property detail","text":"Property detail\n\n\n\nproperty Circle.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the circle.\n\n\n\nproperty Circle.radius: pint.Quantity\n\nRadius of the circle.\n\n\n\nproperty Circle.diameter: pint.Quantity\n\nDiameter of the circle.\n\n\n\nproperty Circle.perimeter: pint.Quantity\n\nPerimeter of the circle.\n\n\n\nproperty Circle.area: pint.Quantity\n\nArea of the circle.\n\n\n\nproperty Circle.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the circle.\n\n\n\nproperty Circle.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the circle.\n\n\n\nproperty Circle.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the circle."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/Circle.html#method-detail","title":"Circle > Method detail","text":"Method detail\n\n\n\nCircle.__eq__(other: Circle) -> bool\n\nEquals operator for the Circle class.\n\n\n\nCircle.evaluate(parameter: ansys.geometry.core.typing.Real) -> CircleEvaluation\n\nEvaluate the circle at a given parameter.\n\nParameters\n\nparameter\n\nReal\n\nParameter to evaluate the circle at.\n\nReturns\n\nCircleEvaluation\n\nResulting evaluation.\n\n\n\nCircle.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Circle\n\nCreate a transformed copy of the circle from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the circle.\n\nReturns\n\nCircle\n\nNew circle that is the transformed copy of the original circle.\n\n\n\nCircle.mirrored_copy() -> Circle\n\nCreate a mirrored copy of the circle along the y-axis.\n\nReturns\n\nCircle\n\nA new circle that is a mirrored copy of the original circle.\n\n\n\nCircle.project_point(point: ansys.geometry.core.math.point.Point3D) -> CircleEvaluation\n\nProject a point onto the circle and evauate the circle.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the circle.\n\nReturns\n\nCircleEvaluation\n\nResulting evaluation.\n\n\n\nCircle.is_coincident_circle(other: Circle) -> bool\n\nDetermine if the circle is coincident with another.\n\nParameters\n\nother\n\nCircle\n\nCircle to determine coincidence with.\n\nReturns\n\nbool\n\nTrue if this circle is coincident with the other, False otherwise.\n\n\n\nCircle.parameterization() -> ansys.geometry.core.shapes.parameterization.Parameterization\n\nGet the parametrization of the circle.\n\nThe parameter of a circle specifies the clockwise angle around the axis\n(right-hand corkscrew law), with a zero parameter at dir_x and a\nperiod of 2*pi.\n\nReturns\n\nParameterization\n\nInformation about how the circle is parameterized.\n\n\n\nabstractmethod Circle.contains_param(param: ansys.geometry.core.typing.Real) -> bool\n\nCheck a parameter is within the parametric range of the curve.\n\n\n\nabstractmethod Circle.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the curve.\n\nThe point can either lie within the curve or on its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/index.html#the-selectionpy-module","title":"The selection.py module","text":"The selection.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/index.html#summary","title":"The selection.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nNamedSelection\n\nRepresents a single named selection within the design assembly.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/index.html#description","title":"The selection.py module > Description","text":"Description\n\nModule for creating a named selection."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/index.html#the-cylinderpy-module","title":"The cylinder.py module","text":"The cylinder.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/index.html#summary","title":"The cylinder.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCylinder\n\nProvides 3D cylinder representation.\n\nCylinderEvaluation\n\nProvides evaluation of a cylinder at given parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/index.html#description","title":"The cylinder.py module > Description","text":"Description\n\nProvides for creating and managing a cylinder."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/SpurGear.html#spurgear","title":"SpurGear","text":"SpurGear\n\n\n\nclass ansys.geometry.core.sketch.gears.SpurGear(origin: ansys.geometry.core.math.point.Point2D, module: ansys.geometry.core.typing.Real, pressure_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, n_teeth: int)\n\nBases: Gear\n\nProvides the class for sketching spur gears.\n\nParameters\n\norigin\n\nPoint2D\n\nOrigin of the spur gear.\n\nmodule\n\nReal\n\nModule of the spur gear. This is also the ratio between the pitch circle\ndiameter in millimeters and the number of teeth.\n\npressure_angle\n\nQuantity | Angle | Real\n\nPressure angle of the spur gear.\n\nn_teeth\n\npython:int\n\nNumber of teeth of the spur gear."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/SpurGear.html#overview","title":"SpurGear > Overview","text":"Overview\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the spur gear.\n\nmodule\n\nModule of the spur gear.\n\npressure_angle\n\nPressure angle of the spur gear.\n\nn_teeth\n\nNumber of teeth of the spur gear.\n\nref_diameter\n\nReference diameter of the spur gear.\n\nbase_diameter\n\nBase diameter of the spur gear.\n\naddendum\n\nAddendum of the spur gear.\n\ndedendum\n\nDedendum of the spur gear.\n\ntip_diameter\n\nTip diameter of the spur gear.\n\nroot_diameter\n\nRoot diameter of the spur gear."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/SpurGear.html#import-detail","title":"SpurGear > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/SpurGear.html#property-detail","title":"SpurGear > Property detail","text":"Property detail\n\n\n\nproperty SpurGear.origin: ansys.geometry.core.math.point.Point2D\n\nOrigin of the spur gear.\n\n\n\nproperty SpurGear.module: ansys.geometry.core.typing.Real\n\nModule of the spur gear.\n\n\n\nproperty SpurGear.pressure_angle: pint.Quantity\n\nPressure angle of the spur gear.\n\n\n\nproperty SpurGear.n_teeth: int\n\nNumber of teeth of the spur gear.\n\n\n\nproperty SpurGear.ref_diameter: ansys.geometry.core.typing.Real\n\nReference diameter of the spur gear.\n\n\n\nproperty SpurGear.base_diameter: ansys.geometry.core.typing.Real\n\nBase diameter of the spur gear.\n\n\n\nproperty SpurGear.addendum: ansys.geometry.core.typing.Real\n\nAddendum of the spur gear.\n\n\n\nproperty SpurGear.dedendum: ansys.geometry.core.typing.Real\n\nDedendum of the spur gear.\n\n\n\nproperty SpurGear.tip_diameter: ansys.geometry.core.typing.Real\n\nTip diameter of the spur gear.\n\n\n\nproperty SpurGear.root_diameter: ansys.geometry.core.typing.Real\n\nRoot diameter of the spur gear."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/checks/index.html#the-checkspy-module","title":"The checks.py module","text":"The checks.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/checks/index.html#summary","title":"The checks.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nensure_design_is_active\n\nMake sure that the design is active before executing a method.\n\ncheck_is_float_int\n\nCheck if a parameter has a float or integer value.\n\ncheck_ndarray_is_float_int\n\nCheck if a numpy.ndarray has float/integer types.\n\ncheck_ndarray_is_not_none\n\nCheck if a numpy.ndarray is all None.\n\ncheck_ndarray_is_all_nan\n\nCheck if a numpy.ndarray is all nan-valued.\n\ncheck_ndarray_is_non_zero\n\nCheck if a numpy.ndarray is zero-valued.\n\ncheck_pint_unit_compatibility\n\nCheck if input pint.Unit is compatible with the expected input.\n\ncheck_type_equivalence\n\nCheck if an input object is of the same class as an expected object.\n\ncheck_type\n\nCheck if an input object is of the same type as expected types.\n\ncheck_type_all_elements_in_iterable\n\nCheck if all elements in an iterable are of the same type as expected.\n\nmin_backend_version\n\nCompare a minimum required version to the current backend version.\n\ndeprecated_method\n\nDecorate a method as deprecated.\n\ndeprecated_argument\n\nDecorate a method argument as deprecated.\n\nrun_if_graphics_required\n\nCheck if graphics are available.\n\ngraphics_required\n\nDecorate a method as requiring graphics.\n\nkwargs_passed_not_accepted\n\nCheck that no unexpected kwargs are passed to the method.\n\nConstants\n\n\n\n\n\nERROR_GRAPHICS_REQUIRED\n\nMessage to display when graphics are required for a method."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/checks/index.html#description","title":"The checks.py module > Description","text":"Description\n\nProvides functions for performing common checks."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/checks/index.html#module-detail","title":"The checks.py module > Module detail","text":"Module detail\n\n\n\nchecks.ensure_design_is_active(method)\n\nMake sure that the design is active before executing a method.\n\nThis function is necessary to be called whenever we do any operation\non the design. If we are just accessing information of the class, it\nis not necessary to call this.\n\n\n\nchecks.check_is_float_int(param: object, param_name: str | None = None) -> None\n\nCheck if a parameter has a float or integer value.\n\nParameters\n\nparam\n\nobject\n\nObject instance to check.\n\nparam_name\n\npython:str, default: python:None\n\nParameter name (if any).\n\nRaises\n\nTypeError\n\nIf the parameter does not have a float or integer value.\n\n\n\nchecks.check_ndarray_is_float_int(param: numpy.ndarray, param_name: str | None = None) -> None\n\nCheck if a numpy.ndarray has float/integer types.\n\nParameters\n\nparam\n\nndarray\n\nnumpy.ndarray instance to check.\n\nparam_name\n\npython:str, default: python:None\n\nnumpy.ndarray instance name (if any).\n\nRaises\n\nTypeError\n\nIf the numpy.ndarray instance does not\nhave float or integer values.\n\n\n\nchecks.check_ndarray_is_not_none(param: numpy.ndarray, param_name: str | None = None) -> None\n\nCheck if a numpy.ndarray is all None.\n\nParameters\n\nparam\n\nndarray\n\nnumpy.ndarray instance to check.\n\nparam_name\n\npython:str, default: python:None\n\nnumpy.ndarray instance name (if any).\n\nRaises\n\nValueError\n\nIf the numpy.ndarray instance has a value\nof None for all parameters.\n\n\n\nchecks.check_ndarray_is_all_nan(param: numpy.ndarray, param_name: str | None = None) -> None\n\nCheck if a numpy.ndarray is all nan-valued.\n\nParameters\n\nparam\n\nndarray\n\nnumpy.ndarray instance to check.\n\nparam_name\n\npython:str or python:None, default: python:None\n\nnumpy.ndarray instance name (if any).\n\nRaises\n\nValueError\n\nIf the numpy.ndarray instance is all nan-valued.\n\n\n\nchecks.check_ndarray_is_non_zero(param: numpy.ndarray, param_name: str | None = None) -> None\n\nCheck if a numpy.ndarray is zero-valued.\n\nParameters\n\nparam\n\nndarray\n\nnumpy.ndarray instance to check.\n\nparam_name\n\npython:str, default: python:None\n\nnumpy.ndarray instance name (if any).\n\nRaises\n\nValueError\n\nIf the numpy.ndarray instance is zero-valued.\n\n\n\nchecks.check_pint_unit_compatibility(input: pint.Unit, expected: pint.Unit) -> None\n\nCheck if input pint.Unit is compatible with the expected input.\n\nParameters\n\ninput\n\nUnit\n\npint.Unit input.\n\nexpected\n\nUnit\n\npint.Unit expected dimensionality.\n\nRaises\n\nTypeError\n\nIf the input is not compatible with the pint.Unit class.\n\n\n\nchecks.check_type_equivalence(input: object, expected: object) -> None\n\nCheck if an input object is of the same class as an expected object.\n\nParameters\n\ninput\n\nobject\n\nInput object.\n\nexpected\n\nobject\n\nExpected object.\n\nRaises\n\nTypeError\n\nIf the objects are not of the same class.\n\n\n\nchecks.check_type(input: object, expected_type: type | tuple[type, Ellipsis]) -> None\n\nCheck if an input object is of the same type as expected types.\n\nParameters\n\ninput\n\nobject\n\nInput object.\n\nexpected_type\n\ntype | python:tuple[type, …]\n\nOne or more types to compare the input object against.\n\nRaises\n\nTypeError\n\nIf the object does not match the one or more expected types.\n\n\n\nchecks.check_type_all_elements_in_iterable(input: collections.abc.Iterable, expected_type: type | tuple[type, Ellipsis]) -> None\n\nCheck if all elements in an iterable are of the same type as expected.\n\nParameters\n\ninput\n\nIterable\n\nInput iterable.\n\nexpected_type\n\ntype | python:tuple[type, …]\n\nOne or more types to compare the input object against.\n\nRaises\n\nTypeError\n\nIf one of the elements in the iterable does not match the one or more expected types.\n\n\n\nchecks.min_backend_version(major: int, minor: int, service_pack: int)\n\nCompare a minimum required version to the current backend version.\n\nParameters\n\nmajor\n\npython:int\n\nMinimum major version required by the method.\n\nminor\n\npython:int\n\nMinimum minor version required by the method.\n\nservice_pack\n\npython:int\n\nMinimum service pack version required by the method.\n\nRaises\n\nGeometryRuntimeError\n\nIf the method version is higher than the backend version.\n\nGeometryRuntimeError\n\nIf the client is not available.\n\n\n\nchecks.deprecated_method(alternative: str | None = None, info: str | None = None, version: str | None = None, remove: str | None = None)\n\nDecorate a method as deprecated.\n\nParameters\n\nalternative\n\npython:str, default: python:None\n\nAlternative method to use. If provided, the warning message will\ninclude the alternative method.\n\ninfo\n\npython:str, default: python:None\n\nAdditional information to include in the warning message.\n\nversion\n\npython:str, default: python:None\n\nVersion where the method was deprecated.\n\nremove\n\npython:str, default: python:None\n\nVersion where the method will be removed.\n\n\n\nchecks.deprecated_argument(arg: str, alternative: str | None = None, info: str | None = None, version: str | None = None, remove: str | None = None)\n\nDecorate a method argument as deprecated.\n\nParameters\n\narg\n\npython:str\n\nArgument to mark as deprecated.\n\nalternative\n\npython:str, default: python:None\n\nAlternative argument to use. If provided, the warning message will\ninclude the alternative argument.\n\ninfo\n\npython:str, default: python:None\n\nAdditional information to include in the warning message.\n\nversion\n\npython:str, default: python:None\n\nVersion where the method was deprecated.\n\nremove\n\npython:str, default: python:None\n\nVersion where the method will be removed.\n\n\n\nchecks.run_if_graphics_required()\n\nCheck if graphics are available.\n\n\n\nchecks.graphics_required(method)\n\nDecorate a method as requiring graphics.\n\nParameters\n\nmethod\n\npython:callable()\n\nMethod to decorate.\n\nReturns\n\npython:callable()\n\nDecorated method.\n\n\n\nchecks.kwargs_passed_not_accepted(method)\n\nCheck that no unexpected kwargs are passed to the method.\n\nThis decorator will raise a TypeError if any keyword arguments are passed\nto the decorated method that don’t correspond to the method’s parameters.\nIf the method has **kwargs in its signature, this decorator will raise an\nerror for any kwargs passed to it (that are not explicitly accepted).\n\nParameters\n\nmethod\n\npython:callable()\n\nThe method to decorate.\n\nReturns\n\npython:callable()\n\nDecorated method that raises TypeError if unexpected kwargs are passed.\n\nRaises\n\nTypeError\n\nIf unexpected keyword arguments are passed to the decorated method.\n\nExamples\n\n>>> @kwargs_passed_not_accepted\n... def my_method(arg1, arg2):\n...     return arg1 + arg2\n>>> my_method(1, 2)  # Works fine\n3\n>>> my_method(arg1=1, arg2=2)  # Works fine\n3\n>>> my_method(1, 2, invalid_arg=3)  # Raises TypeError\nTypeError: The following keyword arguments are not accepted\nin the method 'my_method': invalid_arg.\n>>> @kwargs_passed_not_accepted\n... def my_method_with_kwargs(arg1, arg2, **kwargs):\n...     return arg1 + arg2\n>>> my_method_with_kwargs(1, 2, invalid_arg=3)  # Raises TypeError\nTypeError: The following keyword arguments are not accepted\nin the method 'my_method_with_kwargs': invalid_arg.\n\n\n\nchecks.ERROR_GRAPHICS_REQUIRED = 'Graphics are required for this method. Please install the ``graphics`` target  to use this...\n\nMessage to display when graphics are required for a method."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/LocationUV.html#locationuv","title":"LocationUV","text":"LocationUV\n\n\n\nclass ansys.geometry.core.shapes.box_uv.LocationUV(*args, **kwds)\n\nBases: enum.Enum\n\nProvides the enumeration for indicating locations for BoxUV."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/LocationUV.html#overview","title":"LocationUV > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nTopLeft\n\n\n\nTopCenter\n\n\n\nTopRight\n\n\n\nBottomLeft\n\n\n\nBottomCenter\n\n\n\nBottomRight\n\n\n\nLeftCenter\n\n\n\nRightCenter\n\n\n\nCenter\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/LocationUV.html#import-detail","title":"LocationUV > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/LocationUV.html#attribute-detail","title":"LocationUV > Attribute detail","text":"Attribute detail\n\n\n\nLocationUV.TopLeft = 1\n\n\n\n\n\nLocationUV.TopCenter = 2\n\n\n\n\n\nLocationUV.TopRight = 3\n\n\n\n\n\nLocationUV.BottomLeft = 4\n\n\n\n\n\nLocationUV.BottomCenter = 5\n\n\n\n\n\nLocationUV.BottomRight = 6\n\n\n\n\n\nLocationUV.LeftCenter = 7\n\n\n\n\n\nLocationUV.RightCenter = 8\n\n\n\n\n\nLocationUV.Center = 9\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/index.html#the-prepare_toolspy-module","title":"The prepare_tools.py module","text":"The prepare_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/index.html#summary","title":"The prepare_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPrepareToolsService\n\nPrepare tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/index.html#description","title":"The prepare_tools.py module > Description","text":"Description\n\nModule containing the prepare tools service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/index.html#the-dbuapplicationpy-module","title":"The dbuapplication.py module","text":"The dbuapplication.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/index.html#summary","title":"The dbuapplication.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDbuApplicationServiceV0\n\nDBU Application service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/index.html#description","title":"The dbuapplication.py module > Description","text":"Description\n\nModule containing the DBU Application service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/DraftSide.html#draftside","title":"DraftSide","text":"DraftSide\n\n\n\nclass ansys.geometry.core.designer.geometry_commands.DraftSide(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for draft sides."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/DraftSide.html#overview","title":"DraftSide > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNO_SPLIT\n\n\n\nTHIS\n\n\n\nOTHER\n\n\n\nBACK\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/DraftSide.html#import-detail","title":"DraftSide > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/DraftSide.html#attribute-detail","title":"DraftSide > Attribute detail","text":"Attribute detail\n\n\n\nDraftSide.NO_SPLIT = 0\n\n\n\n\n\nDraftSide.THIS = 1\n\n\n\n\n\nDraftSide.OTHER = 2\n\n\n\n\n\nDraftSide.BACK = 3\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix33.html#matrix33","title":"Matrix33","text":"Matrix33\n\n\n\nclass ansys.geometry.core.math.matrix.Matrix33(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: Matrix\n\nProvides 3x3 matrix representation.\n\nParameters\n\ninput\n\nndarray | RealSequence | Matrix, default: DEFAULT_MATRIX33\n\nMatrix arguments as a np.ndarray class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix33.html#import-detail","title":"Matrix33 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/Curve.html#curve","title":"Curve","text":"Curve\n\n\n\nclass ansys.geometry.core.shapes.curves.curve.Curve\n\nBases: abc.ABC\n\nProvides the abstract base class representing a 3D curve."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/Curve.html#overview","title":"Curve > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nparameterization\n\nParameterize the curve.\n\ncontains_param\n\nCheck a parameter is within the parametric range of the curve.\n\ncontains_point\n\nCheck a point is contained by the curve.\n\ntransformed_copy\n\nCreate a transformed copy of the curve.\n\n__eq__\n\nDetermine if two curves are equal.\n\nevaluate\n\nEvaluate the curve at the given parameter.\n\nproject_point\n\nProject a point to the curve.\n\nMethods\n\n\n\n\n\ntrim\n\nTrim this curve by bounding it with an interval."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/Curve.html#import-detail","title":"Curve > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve/Curve.html#method-detail","title":"Curve > Method detail","text":"Method detail\n\n\n\nabstractmethod Curve.parameterization() -> ansys.geometry.core.shapes.parameterization.Parameterization\n\nParameterize the curve.\n\n\n\nabstractmethod Curve.contains_param(param: ansys.geometry.core.typing.Real) -> bool\n\nCheck a parameter is within the parametric range of the curve.\n\n\n\nabstractmethod Curve.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the curve.\n\nThe point can either lie within the curve or on its boundary.\n\n\n\nabstractmethod Curve.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Curve\n\nCreate a transformed copy of the curve.\n\n\n\nabstractmethod Curve.__eq__(other: Curve) -> bool\n\nDetermine if two curves are equal.\n\n\n\nabstractmethod Curve.evaluate(parameter: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nEvaluate the curve at the given parameter.\n\n\n\nabstractmethod Curve.project_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nProject a point to the curve.\n\nThis method returns the evaluation at the closest point.\n\n\n\nCurve.trim(interval: ansys.geometry.core.shapes.parameterization.Interval) -> ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve\n\nTrim this curve by bounding it with an interval.\n\nReturns\n\nTrimmedCurve\n\nThe resulting bounded curve."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/Torus.html#torus","title":"Torus","text":"Torus\n\n\n\nclass ansys.geometry.core.shapes.surfaces.torus.Torus(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, major_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, minor_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nProvides 3D torus representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nCentered origin of the torus.\n\nmajor_radius\n\nQuantity | Distance | Real\n\nMajor radius of the torus.\n\nminor_radius\n\nQuantity | Distance | Real\n\nMinor radius of the torus.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/Torus.html#overview","title":"Torus > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\nMethods\n\n\n\n\n\ntransformed_copy\n\nCreate a transformed copy of the torus from a transformation matrix.\n\nmirrored_copy\n\nCreate a mirrored copy of the torus along the y-axis.\n\nevaluate\n\nEvaluate the torus at the given parameters.\n\nparameterization\n\nParameterize the torus surface as a tuple (U and V respectively).\n\nproject_point\n\nProject a point onto the torus and evaluate the torus.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the torus.\n\nmajor_radius\n\nSemi-major radius of the torus.\n\nminor_radius\n\nSemi-minor radius of the torus.\n\ndir_x\n\nX-direction of the torus.\n\ndir_y\n\nY-direction of the torus.\n\ndir_z\n\nZ-direction of the torus.\n\nvolume\n\nVolume of the torus.\n\nsurface_area\n\nSurface_area of the torus.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Torus class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/Torus.html#import-detail","title":"Torus > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/Torus.html#property-detail","title":"Torus > Property detail","text":"Property detail\n\n\n\nproperty Torus.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the torus.\n\n\n\nproperty Torus.major_radius: pint.Quantity\n\nSemi-major radius of the torus.\n\n\n\nproperty Torus.minor_radius: pint.Quantity\n\nSemi-minor radius of the torus.\n\n\n\nproperty Torus.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the torus.\n\n\n\nproperty Torus.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the torus.\n\n\n\nproperty Torus.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the torus.\n\n\n\nproperty Torus.volume: pint.Quantity\n\nVolume of the torus.\n\n\n\nproperty Torus.surface_area: pint.Quantity\n\nSurface_area of the torus."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/Torus.html#method-detail","title":"Torus > Method detail","text":"Method detail\n\n\n\nTorus.__eq__(other: Torus) -> bool\n\nEquals operator for the Torus class.\n\n\n\nTorus.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Torus\n\nCreate a transformed copy of the torus from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the torus.\n\nReturns\n\nTorus\n\nNew torus that is the transformed copy of the original torus.\n\n\n\nTorus.mirrored_copy() -> Torus\n\nCreate a mirrored copy of the torus along the y-axis.\n\nReturns\n\nTorus\n\nNew torus that is a mirrored copy of the original torus.\n\n\n\nTorus.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> TorusEvaluation\n\nEvaluate the torus at the given parameters.\n\nParameters\n\nparameter\n\nParamUV\n\nParameters (u,v) to evaluate the torus at.\n\nReturns\n\nTorusEvaluation\n\nResulting evaluation.\n\n\n\nTorus.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParameterize the torus surface as a tuple (U and V respectively).\n\nThe U parameter specifies the longitude angle, increasing clockwise (east) about\nthe axis (right-hand corkscrew law). It has a zero parameter at\nGeometry.Frame.DirX and a period of 2*pi.\n\nThe V parameter specifies the latitude, increasing north, with a zero parameter\nat the equator. For the donut, where the major radius is greater\nthan the minor radius, the range is [-pi, pi] and the\nparameterization is periodic. For a degenerate torus, the range is restricted\naccordingly and the parameterization is non-periodic.\n\nReturns\n\npython:tuple[Parameterization, Parameterization]\n\nInformation about how a torus’s u and v parameters are parameterized, respectively.\n\n\n\nTorus.project_point(point: ansys.geometry.core.math.point.Point3D) -> TorusEvaluation\n\nProject a point onto the torus and evaluate the torus.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the torus.\n\nReturns\n\nTorusEvaluation\n\nResulting evaluation.\n\n\n\nabstractmethod Torus.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod Torus.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/CurveEvaluation.html#curveevaluation","title":"CurveEvaluation","text":"CurveEvaluation\n\n\n\nclass ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation(parameter: ansys.geometry.core.typing.Real = None)\n\nProvides for evaluating a curve."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/CurveEvaluation.html#overview","title":"CurveEvaluation > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nis_set\n\nDetermine if the parameter for the evaluation has been set.\n\nProperties\n\n\n\n\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nfirst_derivative\n\nFirst derivative of the evaluation.\n\nsecond_derivative\n\nSecond derivative of the evaluation.\n\ncurvature\n\nCurvature of the evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/CurveEvaluation.html#import-detail","title":"CurveEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/CurveEvaluation.html#property-detail","title":"CurveEvaluation > Property detail","text":"Property detail\n\n\n\nproperty CurveEvaluation.parameter: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nParameter that the evaluation is based upon.\n\n\n\nproperty CurveEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nAbstractmethod\n\n\n\nPosition of the evaluation.\n\n\n\nproperty CurveEvaluation.first_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nFirst derivative of the evaluation.\n\n\n\nproperty CurveEvaluation.second_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nSecond derivative of the evaluation.\n\n\n\nproperty CurveEvaluation.curvature: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nCurvature of the evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/curve_evaluation/CurveEvaluation.html#method-detail","title":"CurveEvaluation > Method detail","text":"Method detail\n\n\n\nCurveEvaluation.is_set() -> bool\n\nDetermine if the parameter for the evaluation has been set."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/CurveType.html#curvetype","title":"CurveType","text":"CurveType\n\n\n\nclass ansys.geometry.core.designer.edge.CurveType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the curve types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/CurveType.html#overview","title":"CurveType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCURVETYPE_UNKNOWN\n\n\n\nCURVETYPE_LINE\n\n\n\nCURVETYPE_CIRCLE\n\n\n\nCURVETYPE_ELLIPSE\n\n\n\nCURVETYPE_NURBS\n\n\n\nCURVETYPE_PROCEDURAL\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/CurveType.html#import-detail","title":"CurveType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/CurveType.html#attribute-detail","title":"CurveType > Attribute detail","text":"Attribute detail\n\n\n\nCurveType.CURVETYPE_UNKNOWN = 0\n\n\n\n\n\nCurveType.CURVETYPE_LINE = 1\n\n\n\n\n\nCurveType.CURVETYPE_CIRCLE = 2\n\n\n\n\n\nCurveType.CURVETYPE_ELLIPSE = 3\n\n\n\n\n\nCurveType.CURVETYPE_NURBS = 4\n\n\n\n\n\nCurveType.CURVETYPE_PROCEDURAL = 5\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/TessellationOptions.html#tessellationoptions","title":"TessellationOptions","text":"TessellationOptions\n\n\n\nclass ansys.geometry.core.misc.options.TessellationOptions(surface_deviation: ansys.geometry.core.typing.Real, angle_deviation: ansys.geometry.core.typing.Real, max_aspect_ratio: ansys.geometry.core.typing.Real = 0.0, max_edge_length: ansys.geometry.core.typing.Real = 0.0, watertight: bool = False)\n\nProvides options for getting tessellation.\n\nParameters\n\nsurface_deviation\n\nReal\n\nThe maximum deviation from the true surface position.\n\nangle_deviation\n\nReal\n\nThe maximum deviation from the true surface normal, in radians.\n\nmax_aspect_ratio\n\nReal, default=0.0\n\nThe maximum aspect ratio of facets.\n\nmax_edge_length\n\nReal, default=0.0\n\nThe maximum facet edge length.\n\nwatertight\n\nbool, default=False\n\nWhether triangles on opposite sides of an edge should match."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/TessellationOptions.html#overview","title":"TessellationOptions > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsurface_deviation\n\nSurface Deviation.\n\nangle_deviation\n\nAngle deviation.\n\nmax_aspect_ratio\n\nMaximum aspect ratio.\n\nmax_edge_length\n\nMaximum edge length.\n\nwatertight\n\nWatertight."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/TessellationOptions.html#import-detail","title":"TessellationOptions > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/TessellationOptions.html#property-detail","title":"TessellationOptions > Property detail","text":"Property detail\n\n\n\nproperty TessellationOptions.surface_deviation: ansys.geometry.core.typing.Real\n\nSurface Deviation.\n\nThe maximum deviation from the true surface position.\n\n\n\nproperty TessellationOptions.angle_deviation: ansys.geometry.core.typing.Real\n\nAngle deviation.\n\nThe maximum deviation from the true surface normal, in radians.\n\n\n\nproperty TessellationOptions.max_aspect_ratio: ansys.geometry.core.typing.Real\n\nMaximum aspect ratio.\n\nThe maximum aspect ratio of facets.\n\n\n\nproperty TessellationOptions.max_edge_length: ansys.geometry.core.typing.Real\n\nMaximum edge length.\n\nThe maximum facet edge length.\n\n\n\nproperty TessellationOptions.watertight: bool\n\nWatertight.\n\nWhether triangles on opposite sides of an edge should match."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/index.html#the-measurement_toolspy-module","title":"The measurement_tools.py module","text":"The measurement_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/index.html#summary","title":"The measurement_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMeasurementToolsServiceV1\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/index.html#description","title":"The measurement_tools.py module > Description","text":"Description\n\nModule containing the measurement tools service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterUpdateStatus.html#parameterupdatestatus","title":"ParameterUpdateStatus","text":"ParameterUpdateStatus\n\n\n\nclass ansys.geometry.core.parameters.parameter.ParameterUpdateStatus(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the status messages associated with parameter updates."},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterUpdateStatus.html#overview","title":"ParameterUpdateStatus > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSUCCESS\n\n\n\nFAILURE\n\n\n\nCONSTRAINED_PARAMETERS\n\n\n\nUNKNOWN\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterUpdateStatus.html#import-detail","title":"ParameterUpdateStatus > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterUpdateStatus.html#attribute-detail","title":"ParameterUpdateStatus > Attribute detail","text":"Attribute detail\n\n\n\nParameterUpdateStatus.SUCCESS = 0\n\n\n\n\n\nParameterUpdateStatus.FAILURE = 1\n\n\n\n\n\nParameterUpdateStatus.CONSTRAINED_PARAMETERS = 2\n\n\n\n\n\nParameterUpdateStatus.UNKNOWN = 3\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#interval","title":"Interval","text":"Interval\n\n\n\nclass ansys.geometry.core.shapes.parameterization.Interval(start: ansys.geometry.core.typing.Real, end: ansys.geometry.core.typing.Real)\n\nInterval class that defines a range of values.\n\nParameters\n\nstart\n\nReal\n\nStart value of the interval.\n\nend\n\nReal\n\nEnd value of the interval."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#overview","title":"Interval > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nis_open\n\nIf the interval is open (-inf, inf).\n\nis_closed\n\nIf the interval is closed. Neither value is inf or -inf.\n\nis_empty\n\nCheck if the current interval is empty.\n\nget_span\n\nGet the quantity contained by the interval.\n\nget_relative_val\n\nGet an evaluation property of the interval, used in BoxUV.\n\nis_negative\n\nIndicate whether the current interval is negative.\n\nself_unite\n\nGet the union of two intervals and update the current interval.\n\nself_intersect\n\nGet the intersection of two intervals and update the current one.\n\ncontains_value\n\nCheck if the current interval contains the value t.\n\ncontains\n\nCheck if interval contains value t using default accuracy.\n\ninflate\n\nEnlarge the current interval by the given delta value.\n\nProperties\n\n\n\n\n\nstart\n\nStart value of the interval.\n\nend\n\nEnd value of the interval.\n\nAttributes\n\n\n\n\n\nnot_empty\n\n\n\nStatic methods\n\n\n\n\n\nunite\n\nGet the union of two intervals.\n\nintersect\n\nGet the intersection of two intervals.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nCompare two intervals.\n\n__repr__\n\nRepresent the interval as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#import-detail","title":"Interval > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#property-detail","title":"Interval > Property detail","text":"Property detail\n\n\n\nproperty Interval.start: ansys.geometry.core.typing.Real\n\nStart value of the interval.\n\n\n\nproperty Interval.end: ansys.geometry.core.typing.Real\n\nEnd value of the interval."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#attribute-detail","title":"Interval > Attribute detail","text":"Attribute detail\n\n\n\nInterval.not_empty = True\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Interval.html#method-detail","title":"Interval > Method detail","text":"Method detail\n\n\n\nInterval.__eq__(other: object)\n\nCompare two intervals.\n\n\n\nInterval.is_open() -> bool\n\nIf the interval is open (-inf, inf).\n\nReturns\n\nbool\n\nTrue if both ends of the interval are negative and positive infinity respectively.\n\n\n\nInterval.is_closed() -> bool\n\nIf the interval is closed. Neither value is inf or -inf.\n\nReturns\n\nbool\n\nTrue if neither bound of the interval is infinite.\n\n\n\nInterval.is_empty() -> bool\n\nCheck if the current interval is empty.\n\nReturns\n\nbool\n\nTrue when the interval is empty, False otherwise.\n\n\n\nInterval.get_span() -> ansys.geometry.core.typing.Real\n\nGet the quantity contained by the interval.\n\nThe interval must be closed.\n\nReturns\n\nReal\n\nThe difference between the end and start of the interval.\n\n\n\nInterval.get_relative_val(t: ansys.geometry.core.typing.Real) -> ansys.geometry.core.typing.Real\n\nGet an evaluation property of the interval, used in BoxUV.\n\nParameters\n\nt\n\nReal\n\nOffset to evaluate the interval at.\n\nReturns\n\nReal\n\nActual value according to the offset.\n\n\n\nInterval.is_negative(tolerance: ansys.geometry.core.typing.Real) -> bool\n\nIndicate whether the current interval is negative.\n\nParameters\n\ntolerance\n\nReal\n\nAccepted range because the data type of the interval could be in doubles.\n\nReturns\n\nbool\n\nTrue if the interval is negative, False otherwise.\n\n\n\nstatic Interval.unite(first: Interval, second: Interval) -> Interval\n\nGet the union of two intervals.\n\nParameters\n\nfirst\n\nInterval\n\nFirst interval.\n\nsecond\n\nInterval\n\nSecond interval.\n\nReturns\n\nInterval\n\nUnion of the two intervals.\n\n\n\nInterval.self_unite(other: Interval) -> None\n\nGet the union of two intervals and update the current interval.\n\nParameters\n\nother\n\nInterval\n\nInterval to unite with.\n\n\n\nstatic Interval.intersect(first: Interval, second: Interval, tolerance: ansys.geometry.core.typing.Real) -> Interval\n\nGet the intersection of two intervals.\n\nParameters\n\nfirst\n\nInterval\n\nFirst interval.\n\nsecond\n\nInterval\n\nSecond interval.\n\nReturns\n\nInterval\n\nIntersection of the two intervals.\n\n\n\nInterval.self_intersect(other: Interval, tolerance: ansys.geometry.core.typing.Real) -> None\n\nGet the intersection of two intervals and update the current one.\n\nParameters\n\nother\n\nInterval\n\nInterval to intersect with.\n\ntolerance\n\nReal\n\nAccepted range of error given that the interval could be in float values.\n\n\n\nInterval.contains_value(t: ansys.geometry.core.typing.Real, accuracy: ansys.geometry.core.typing.Real) -> bool\n\nCheck if the current interval contains the value t.\n\nParameters\n\nt\n\nReal\n\nValue of interest.\n\naccuracy\n\nReal\n\nAccepted range of error given that the interval could be in float values.\n\nReturns\n\nbool\n\nTrue if the interval contains the value, False otherwise.\n\n\n\nInterval.contains(t: ansys.geometry.core.typing.Real) -> bool\n\nCheck if interval contains value t using default accuracy.\n\nParameters\n\nt\n\nReal\n\nValue of interest.\n\nReturns\n\nbool\n\nTrue if the interval contains the value, False otherwise.\n\n\n\nInterval.inflate(delta: ansys.geometry.core.typing.Real) -> Interval\n\nEnlarge the current interval by the given delta value.\n\n\n\nInterval.__repr__() -> str\n\nRepresent the interval as a string."},{"objectID":"Home","href":"getting_started/installation.html#install-package-in-development-mode","title":"Install package in development mode","text":"Install package in development mode\n\nThis topic assumes that you want to install PyAnsys Geometry in developer mode so that\nyou can modify the source and enhance it. You can install PyAnsys Geometry from PyPI, Conda,\nor from the PyAnsys Geometry repository on GitHub.\n\nContents\n\nInstall package in development mode\n\nPackage dependencies\n\nPyPI\n\nConda\n\nGitHub\n\nInstall in offline mode\n\nVerify your installation"},{"objectID":"Home","href":"getting_started/installation.html#package-dependencies","title":"Install package in development mode > Package dependencies","text":"Package dependencies\n\nPyAnsys Geometry is supported on Python version 3.10 and later. As indicated in the\nMoving to require Python 3 statement,\nprevious versions of Python are no longer supported.\n\nPyAnsys Geometry dependencies are automatically checked when packages are installed.\nThese projects are required dependencies for PyAnsys Geometry:\n\nansys-api-geometry: Used for supplying\ngRPC code generated from Protobuf (PROTO) files\n\nNumPy: Used for data array access\n\nPint: Used for measurement units\n\nPyVista: Used for interactive 3D plotting\n\nSciPy: Used for geometric transformations"},{"objectID":"Home","href":"getting_started/installation.html#pypi","title":"Install package in development mode > PyPI","text":"PyPI\n\nBefore installing PyAnsys Geometry, to ensure that you have the latest version of\npip, run this command:\n\nThen, to install PyAnsys Geometry, run this command:"},{"objectID":"Home","href":"getting_started/installation.html#conda","title":"Install package in development mode > Conda","text":"Conda\n\nYou can also install PyAnsys Geometry using conda. First, ensure that you have the latest version:\n\nThen, to install PyAnsys Geometry, run this command:"},{"objectID":"Home","href":"getting_started/installation.html#github","title":"Install package in development mode > GitHub","text":"GitHub\n\nTo install the latest release from the PyAnsys Geometry repository\non GitHub, run these commands:\n\nTo verify your development installation, run this command:"},{"objectID":"Home","href":"getting_started/installation.html#install-in-offline-mode","title":"Install package in development mode > Install in offline mode","text":"Install in offline mode\n\nIf you lack an internet connection on your installation machine (or you do not have access to the\nprivate Ansys PyPI packages repository), you should install PyAnsys Geometry by downloading the wheelhouse\narchive for your corresponding machine architecture from the repository’s Releases page.\n\nEach wheelhouse archive contains all the Python wheels necessary to install PyAnsys Geometry from scratch on Windows,\nLinux, and MacOS from Python 3.10 to 3.13. You can install this on an isolated system with a fresh Python\ninstallation or on a virtual environment.\n\nFor example, on Linux with Python 3.10, unzip the wheelhouse archive and install it with these commands:\n\nIf you are on Windows with Python 3.10, unzip the wheelhouse archive to a wheelhouse directory\nand then install using the same pip install command as in the preceding example.\n\nConsider installing using a virtual environment. For more information, see Creation of virtual\nenvironments in the Python documentation."},{"objectID":"Home","href":"getting_started/installation.html#verify-your-installation","title":"Install package in development mode > Verify your installation","text":"Verify your installation\n\nVerify the Modeler() connection with this code:\n\nIf you see a response from the server, you can start using PyAnsys Geometry as a service.\nFor more information on PyAnsys Geometry usage, see User guide.\n\nGo to Getting started\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/GRPCUnsupportedService.html#grpcunsupportedservice","title":"GRPCUnsupportedService","text":"GRPCUnsupportedService\n\n\n\nclass ansys.geometry.core._grpc._services.base.unsupported.GRPCUnsupportedService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nUnsupported service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/GRPCUnsupportedService.html#overview","title":"GRPCUnsupportedService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_import_id_map\n\nGet the import ID map.\n\nset_export_ids\n\nSet the export IDs for the entities.\n\nset_single_export_id\n\nSet a single export ID for an entity."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/GRPCUnsupportedService.html#import-detail","title":"GRPCUnsupportedService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/unsupported/GRPCUnsupportedService.html#method-detail","title":"GRPCUnsupportedService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCUnsupportedService.get_import_id_map(**kwargs) -> dict\n\nGet the import ID map.\n\n\n\nabstractmethod GRPCUnsupportedService.set_export_ids(**kwargs) -> dict\n\nSet the export IDs for the entities.\n\n\n\nabstractmethod GRPCUnsupportedService.set_single_export_id(**kwargs) -> dict\n\nSet a single export ID for an entity."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/index.html#the-materialspy-module","title":"The materials.py module","text":"The materials.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/index.html#summary","title":"The materials.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMaterialsServiceV0\n\nMaterials service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/materials/index.html#description","title":"The materials.py module > Description","text":"Description\n\nModule containing the materials service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/index.html#the-accuracypy-module","title":"The accuracy.py module","text":"The accuracy.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/index.html#summary","title":"The accuracy.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAccuracy\n\nDecimal precision evaluations for math operations.\n\nConstants\n\n\n\n\n\nLENGTH_ACCURACY\n\nConstant for decimal accuracy in length comparisons.\n\nANGLE_ACCURACY\n\nConstant for decimal accuracy in angle comparisons.\n\nDOUBLE_ACCURACY\n\nConstant for double accuracy.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/index.html#description","title":"The accuracy.py module > Description","text":"Description\n\nProvides for evaluating decimal precision."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/accuracy/index.html#module-detail","title":"The accuracy.py module > Module detail","text":"Module detail\n\n\n\naccuracy.LENGTH_ACCURACY: ansys.geometry.core.typing.Real = 1e-08\n\nConstant for decimal accuracy in length comparisons.\n\n\n\naccuracy.ANGLE_ACCURACY: ansys.geometry.core.typing.Real = 1e-06\n\nConstant for decimal accuracy in angle comparisons.\n\n\n\naccuracy.DOUBLE_ACCURACY: ansys.geometry.core.typing.Real = 1e-13\n\nConstant for double accuracy."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/index.html#the-docker_instancepy-module","title":"The docker_instance.py module","text":"The docker_instance.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/index.html#summary","title":"The docker_instance.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nLocalDockerInstance\n\nInstantiates a Geometry service as a local Docker container.\n\nEnums\n\n\n\n\n\nGeometryContainers\n\nProvides an enum holding the available Geometry services.\n\nFunctions\n\n\n\n\n\nget_geometry_container_type\n\nProvide back the GeometryContainers value.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/index.html#description","title":"The docker_instance.py module > Description","text":"Description\n\nModule for connecting to a local Geometry Service Docker container."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/index.html#module-detail","title":"The docker_instance.py module > Module detail","text":"Module detail\n\n\n\ndocker_instance.get_geometry_container_type(instance: LocalDockerInstance) -> GeometryContainers | None\n\nProvide back the GeometryContainers value.\n\nParameters\n\ninstance\n\nLocalDockerInstance\n\nThe LocalDockerInstance object.\n\nReturns\n\nGeometryContainers or python:None\n\nThe GeometryContainer value corresponding to the previous image or None\nif not match.\n\nNotes\n\nThis method returns the first hit on the available tags."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/index.html#the-ellipsepy-module","title":"The ellipse.py module","text":"The ellipse.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/index.html#summary","title":"The ellipse.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nEllipse\n\nProvides 3D ellipse representation.\n\nEllipseEvaluation\n\nEvaluate an ellipse at a given parameter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/index.html#description","title":"The ellipse.py module > Description","text":"Description\n\nProvides for creating and managing an ellipse."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Parameterization.html#parameterization","title":"Parameterization","text":"Parameterization\n\n\n\nclass ansys.geometry.core.shapes.parameterization.Parameterization(form: ParamForm, type: ParamType, interval: Interval)\n\nParameterization class describes the parameters of a specific geometry.\n\nParameters\n\nform\n\nParamForm\n\nForm of the parameterization.\n\ntype\n\nParamType\n\nType of the parameterization.\n\ninterval\n\nInterval\n\nInterval of the parameterization."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Parameterization.html#overview","title":"Parameterization > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nform\n\nThe form of the parameterization.\n\ntype\n\nThe type of the parameterization.\n\ninterval\n\nThe interval of the parameterization.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the Parameterization as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Parameterization.html#import-detail","title":"Parameterization > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Parameterization.html#property-detail","title":"Parameterization > Property detail","text":"Property detail\n\n\n\nproperty Parameterization.form: ParamForm\n\nThe form of the parameterization.\n\n\n\nproperty Parameterization.type: ParamType\n\nThe type of the parameterization.\n\n\n\nproperty Parameterization.interval: Interval\n\nThe interval of the parameterization."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/Parameterization.html#method-detail","title":"Parameterization > Method detail","text":"Method detail\n\n\n\nParameterization.__repr__() -> str\n\nRepresent the Parameterization as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/GRPCNamedSelectionService.html#grpcnamedselectionservice","title":"GRPCNamedSelectionService","text":"GRPCNamedSelectionService\n\n\n\nclass ansys.geometry.core._grpc._services.base.named_selection.GRPCNamedSelectionService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nNamed Selection service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/GRPCNamedSelectionService.html#overview","title":"GRPCNamedSelectionService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_named_selection\n\nGet the named selection by its id.\n\ncreate_named_selection\n\nCreate a named selection.\n\ndelete_named_selection\n\nDelete a named selection by id."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/GRPCNamedSelectionService.html#import-detail","title":"GRPCNamedSelectionService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/GRPCNamedSelectionService.html#method-detail","title":"GRPCNamedSelectionService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCNamedSelectionService.get_named_selection(**kwargs) -> dict\n\nGet the named selection by its id.\n\n\n\nabstractmethod GRPCNamedSelectionService.create_named_selection(**kwargs) -> dict\n\nCreate a named selection.\n\n\n\nabstractmethod GRPCNamedSelectionService.delete_named_selection(**kwargs) -> dict\n\nDelete a named selection by id."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/index.html#the-curvespy-module","title":"The curves.py module","text":"The curves.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/index.html#summary","title":"The curves.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCurvesServiceV0\n\nCurves service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/index.html#description","title":"The curves.py module > Description","text":"Description\n\nModule containing the curves service implementation for v0."},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#applied-prepare-a-naca-airfoil-for-a-fluent-simulation","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation","text":"Applied: Prepare a NACA airfoil for a Fluent simulation\n\nOnce a NACA airfoil is designed, it is necessary to prepare the geometry for a CFD simulation. This notebook demonstrates how to prepare a NACA 6412 airfoil for a Fluent simulation. The starting point of this example is the previously designed NACA 6412 airfoil. The airfoil was saved in an SCDOCX file, which is now imported into the notebook. The geometry is then prepared for the simulation.\n\nIn case you want to run this notebook, make sure that you have run the previous notebook to design the NACA 6412 airfoil."},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#import-the-naca-6412-airfoil","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Import the NACA 6412 airfoil","text":"Import the NACA 6412 airfoil\n\nThe following code starts up the Geometry Service and imports the NACA 6412 airfoil. The airfoil is then displayed in the notebook.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#prepare-the-geometry-for-the-simulation","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Prepare the geometry for the simulation","text":"Prepare the geometry for the simulation\n\nThe current design is only composed of the airfoil. To prepare the geometry for the simulation, you must define the domain around the airfoil. The following code creates a rectangular fluid domain around the airfoil.\n\nThe airfoil has the following dimensions:\n\nChord length: 1 (X-axis)\n\nThickness: Depends on NACA value (Y-axis)\n\nDefine the fluid domain as a large box with these dimensions:\n\nLength (X-axis) - 10 times the chord length\n\nWidth (Z-axis) - 5 times the chord length\n\nHeight (Y-axis) - 4 times the chord length\n\nPlace the airfoil at the center of the fluid domain.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#create-named-selections","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Create named selections","text":"Create named selections\n\nNamed selections are used to define boundary conditions in Fluent. The following code creates named selections for the inlet, outlet, and walls of the fluid domain. The airfoil is also assigned a named selection.\n\nThe airfoil is aligned with the X axis. The inlet is located at the left side of the airfoil, the outlet is located at the right side of the airfoil, and the walls are located at the top and bottom of the airfoil. The inlet face has therefore a negative X-axis normal vector, and the outlet face has a positive X-axis normal vector. The rest of the faces, therefore, constitute the walls.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#display-the-geometry","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Display the geometry","text":"Display the geometry\n\nThe geometry is now ready for the simulation. The following code displays the geometry in the notebook. This example uses the GeometryPlotter class to display the geometry for the airfoil and fluid domain in different colors with a specified opacity level.\n\nThe airfoil is displayed in green, and the fluid domain is displayed in blue with an opacity of 0.25.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#export-the-geometry","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Export the geometry","text":"Export the geometry\n\nExport the geometry into a Fluent-compatible format. The following code exports the geometry into a PMDB file, which retains the named selections.\n\nYou can import the exported PMDB file into Fluent to set up the mesh and perform the simulation. For an example of how to set up the mesh and boundary conditions in Fluent, see the Modeling External Compressible Flow example in the Fluent documentation.\n\nThe main difference between the Fluent example and this geometry is the coordinate system. The Fluent example defines the airfoil in the XY plane, while this geometry defines the airfoil in the XZ plane."},{"objectID":"Examples","href":"examples/04_applied/02_naca_fluent.html#close-the-modeler","title":"Examples > Applied: Prepare a NACA airfoil for a Fluent simulation > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/GRPCMaterialsService.html#grpcmaterialsservice","title":"GRPCMaterialsService","text":"GRPCMaterialsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.materials.GRPCMaterialsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nMaterials service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/GRPCMaterialsService.html#overview","title":"GRPCMaterialsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nadd_material\n\nAdd material to the service design.\n\nremove_material\n\nRemove material from the service design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/GRPCMaterialsService.html#import-detail","title":"GRPCMaterialsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/GRPCMaterialsService.html#method-detail","title":"GRPCMaterialsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCMaterialsService.add_material(**kwargs) -> dict\n\nAdd material to the service design.\n\n\n\nabstractmethod GRPCMaterialsService.remove_material(**kwargs) -> dict\n\nRemove material from the service design."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/index.html#the-linepy-module","title":"The line.py module","text":"The line.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/index.html#summary","title":"The line.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nLine\n\nProvides 3D line representation.\n\nLineEvaluation\n\nProvides for evaluating a line.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/index.html#description","title":"The line.py module > Description","text":"Description\n\nProvides for creating and managing a line."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/GRPCDesignsServiceV0.html#grpcdesignsservicev0","title":"GRPCDesignsServiceV0","text":"GRPCDesignsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.designs.GRPCDesignsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.designs.GRPCDesignsService\n\nDesigns service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ndesigns service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/GRPCDesignsServiceV0.html#overview","title":"GRPCDesignsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nopen\n\nOpen a design on the service.\n\nnew\n\nCreate a new design.\n\nget_assembly\n\nCreate a new design.\n\nclose\n\nClose the currently open design.\n\nput_active\n\nActivate an already opened design on the service.\n\nsave_as\n\nCreate a new design.\n\ndownload_export\n\nDownload and export a design into a certain format.\n\nstream_download_export\n\nDownload and export a design into a certain format.\n\ninsert\n\nInsert a part/component/design into an existing design.\n\nget_active\n\nGet the active design on the service.\n\nupload_file\n\nUpload a file to the server.\n\nupload_file_stream\n\nUpload a file to the server using streaming.\n\nstream_design_tessellation\n\nStream the tessellation of a design.\n\ndownload_file\n\nDownload the design from the server.\n\nAttributes\n\n\n\n\n\ndesigns_stub\n\n\n\ncommands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/GRPCDesignsServiceV0.html#import-detail","title":"GRPCDesignsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/GRPCDesignsServiceV0.html#attribute-detail","title":"GRPCDesignsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDesignsServiceV0.designs_stub\n\n\n\n\n\nGRPCDesignsServiceV0.commands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/GRPCDesignsServiceV0.html#method-detail","title":"GRPCDesignsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCDesignsServiceV0.open(**kwargs) -> dict\n\nOpen a design on the service.\n\n\n\nGRPCDesignsServiceV0.new(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nGRPCDesignsServiceV0.get_assembly(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nGRPCDesignsServiceV0.close(**kwargs) -> dict\n\nClose the currently open design.\n\n\n\nGRPCDesignsServiceV0.put_active(**kwargs) -> dict\n\nActivate an already opened design on the service.\n\n\n\nGRPCDesignsServiceV0.save_as(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nGRPCDesignsServiceV0.download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nGRPCDesignsServiceV0.stream_download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nGRPCDesignsServiceV0.insert(**kwargs) -> dict\n\nInsert a part/component/design into an existing design.\n\n\n\nGRPCDesignsServiceV0.get_active(**kwargs) -> dict\n\nGet the active design on the service.\n\n\n\nGRPCDesignsServiceV0.upload_file(**kwargs) -> dict\n\nUpload a file to the server.\n\n\n\nGRPCDesignsServiceV0.upload_file_stream(**kwargs) -> dict\n\nUpload a file to the server using streaming.\n\n\n\nGRPCDesignsServiceV0.stream_design_tessellation(**kwargs) -> dict\n\nStream the tessellation of a design.\n\n\n\nGRPCDesignsServiceV0.download_file(**kwargs) -> dict\n\nDownload the design from the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/GRPCBodyService.html#grpcbodyservice","title":"GRPCBodyService","text":"GRPCBodyService\n\n\n\nclass ansys.geometry.core._grpc._services.base.bodies.GRPCBodyService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nBody service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/GRPCBodyService.html#overview","title":"GRPCBodyService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_sphere_body\n\nCreate a sphere body.\n\ncreate_extruded_body\n\nCreate an extruded body.\n\ncreate_sweeping_profile_body\n\nCreate a sweeping profile body.\n\ncreate_sweeping_chain\n\nCreate a sweeping chain.\n\nsweep_with_guide\n\nSweep with a guide.\n\ncreate_extruded_body_from_face_profile\n\nCreate an extruded body from a face profile.\n\ncreate_extruded_body_from_loft_profiles\n\nCreate an extruded body from loft profiles.\n\ncreate_planar_body\n\nCreate a planar body.\n\ncreate_body_from_face\n\nCreate a body from a face.\n\ncreate_surface_body\n\nCreate a surface body.\n\ncreate_surface_body_from_trimmed_curves\n\nCreate a surface body from trimmed curves.\n\ntranslate\n\nTranslate a body.\n\ndelete\n\nDelete a body.\n\nis_suppressed\n\nCheck if a body is suppressed.\n\nget_color\n\nGet the color of a body.\n\nget_faces\n\nGet the faces of a body.\n\nget_edges\n\nGet the edges of a body.\n\nget_vertices\n\nGet the vertices of a body.\n\nget_volume\n\nGet the volume of a body.\n\nget_bounding_box\n\nGet the bounding box of a body.\n\nset_assigned_material\n\nSet the assigned material of a body.\n\nget_assigned_material\n\nGet the assigned material of a body.\n\nremove_assigned_material\n\nRemove the assigned material of a body.\n\nset_name\n\nSet the name of a body.\n\nset_fill_style\n\nSet the fill style of a body.\n\nset_suppressed\n\nSet the suppressed state of a body.\n\nset_color\n\nSet the color of a body.\n\nrotate\n\nRotate a body.\n\nscale\n\nScale a body.\n\nmirror\n\nMirror a body.\n\nmap\n\nMap a body.\n\nget_collision\n\nGet the collision of a body.\n\ncopy\n\nCopy a body.\n\nget_tesellation\n\nGet the tessellation of a body.\n\nget_tesellation_with_options\n\nGet the tessellation of a body with options.\n\nboolean\n\nBoolean operation.\n\ncombine\n\nBoolean operation through command.\n\ncreate_body_from_loft_profiles_with_guides\n\nCreate a body from loft profiles with guides.\n\ncombine_merge\n\nCombine and merge bodies.\n\nassign_midsurface_thickness\n\nAssign a thickness to a midsurface body.\n\nassign_midsurface_offset\n\nAssign a offset to a midsurface body.\n\nshell\n\nShell a body.\n\nremove_faces\n\nRemove faces from a body.\n\nimprint_curves\n\nImprint curves on a body.\n\nproject_curves\n\nProject curves on a body.\n\nimprint_projected_curves\n\nImprint projected curves on a body.\n\nget_full_tessellation\n\nGet the full tessellation of a body.\n\nMethods\n\n\n\n\n\nsplit_body\n\nSplit a body."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/GRPCBodyService.html#import-detail","title":"GRPCBodyService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/GRPCBodyService.html#method-detail","title":"GRPCBodyService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCBodyService.create_sphere_body(**kwargs) -> dict\n\nCreate a sphere body.\n\n\n\nabstractmethod GRPCBodyService.create_extruded_body(**kwargs) -> dict\n\nCreate an extruded body.\n\n\n\nabstractmethod GRPCBodyService.create_sweeping_profile_body(**kwargs) -> dict\n\nCreate a sweeping profile body.\n\n\n\nabstractmethod GRPCBodyService.create_sweeping_chain(**kwargs) -> dict\n\nCreate a sweeping chain.\n\n\n\nabstractmethod GRPCBodyService.sweep_with_guide(**kwargs) -> dict\n\nSweep with a guide.\n\n\n\nabstractmethod GRPCBodyService.create_extruded_body_from_face_profile(**kwargs) -> dict\n\nCreate an extruded body from a face profile.\n\n\n\nabstractmethod GRPCBodyService.create_extruded_body_from_loft_profiles(**kwargs) -> dict\n\nCreate an extruded body from loft profiles.\n\n\n\nabstractmethod GRPCBodyService.create_planar_body(**kwargs) -> dict\n\nCreate a planar body.\n\n\n\nabstractmethod GRPCBodyService.create_body_from_face(**kwargs) -> dict\n\nCreate a body from a face.\n\n\n\nabstractmethod GRPCBodyService.create_surface_body(**kwargs) -> dict\n\nCreate a surface body.\n\n\n\nabstractmethod GRPCBodyService.create_surface_body_from_trimmed_curves(**kwargs) -> dict\n\nCreate a surface body from trimmed curves.\n\n\n\nabstractmethod GRPCBodyService.translate(**kwargs) -> dict\n\nTranslate a body.\n\n\n\nabstractmethod GRPCBodyService.delete(**kwargs) -> dict\n\nDelete a body.\n\n\n\nabstractmethod GRPCBodyService.is_suppressed(**kwargs) -> dict\n\nCheck if a body is suppressed.\n\n\n\nabstractmethod GRPCBodyService.get_color(**kwargs) -> dict\n\nGet the color of a body.\n\n\n\nabstractmethod GRPCBodyService.get_faces(**kwargs) -> dict\n\nGet the faces of a body.\n\n\n\nabstractmethod GRPCBodyService.get_edges(**kwargs) -> dict\n\nGet the edges of a body.\n\n\n\nabstractmethod GRPCBodyService.get_vertices(**kwargs) -> dict\n\nGet the vertices of a body.\n\n\n\nabstractmethod GRPCBodyService.get_volume(**kwargs) -> dict\n\nGet the volume of a body.\n\n\n\nabstractmethod GRPCBodyService.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a body.\n\n\n\nabstractmethod GRPCBodyService.set_assigned_material(**kwargs) -> dict\n\nSet the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyService.get_assigned_material(**kwargs) -> dict\n\nGet the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyService.remove_assigned_material(**kwargs) -> dict\n\nRemove the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyService.set_name(**kwargs) -> dict\n\nSet the name of a body.\n\n\n\nabstractmethod GRPCBodyService.set_fill_style(**kwargs) -> dict\n\nSet the fill style of a body.\n\n\n\nabstractmethod GRPCBodyService.set_suppressed(**kwargs) -> dict\n\nSet the suppressed state of a body.\n\n\n\nabstractmethod GRPCBodyService.set_color(**kwargs) -> dict\n\nSet the color of a body.\n\n\n\nabstractmethod GRPCBodyService.rotate(**kwargs) -> dict\n\nRotate a body.\n\n\n\nabstractmethod GRPCBodyService.scale(**kwargs) -> dict\n\nScale a body.\n\n\n\nabstractmethod GRPCBodyService.mirror(**kwargs) -> dict\n\nMirror a body.\n\n\n\nabstractmethod GRPCBodyService.map(**kwargs) -> dict\n\nMap a body.\n\n\n\nabstractmethod GRPCBodyService.get_collision(**kwargs) -> dict\n\nGet the collision of a body.\n\n\n\nabstractmethod GRPCBodyService.copy(**kwargs) -> dict\n\nCopy a body.\n\n\n\nabstractmethod GRPCBodyService.get_tesellation(**kwargs) -> dict\n\nGet the tessellation of a body.\n\n\n\nabstractmethod GRPCBodyService.get_tesellation_with_options(**kwargs) -> dict\n\nGet the tessellation of a body with options.\n\n\n\nabstractmethod GRPCBodyService.boolean(**kwargs) -> dict\n\nBoolean operation.\n\n\n\nabstractmethod GRPCBodyService.combine(**kwargs) -> dict\n\nBoolean operation through command.\n\n\n\nGRPCBodyService.split_body(**kwargs) -> dict\n\nSplit a body.\n\n\n\nabstractmethod GRPCBodyService.create_body_from_loft_profiles_with_guides(**kwargs) -> dict\n\nCreate a body from loft profiles with guides.\n\n\n\nabstractmethod GRPCBodyService.combine_merge(**kwargs) -> dict\n\nCombine and merge bodies.\n\n\n\nabstractmethod GRPCBodyService.assign_midsurface_thickness(**kwargs) -> dict\n\nAssign a thickness to a midsurface body.\n\n\n\nabstractmethod GRPCBodyService.assign_midsurface_offset(**kwargs) -> dict\n\nAssign a offset to a midsurface body.\n\n\n\nabstractmethod GRPCBodyService.shell(**kwargs) -> dict\n\nShell a body.\n\n\n\nabstractmethod GRPCBodyService.remove_faces(**kwargs) -> dict\n\nRemove faces from a body.\n\n\n\nabstractmethod GRPCBodyService.imprint_curves(**kwargs) -> dict\n\nImprint curves on a body.\n\n\n\nabstractmethod GRPCBodyService.project_curves(**kwargs) -> dict\n\nProject curves on a body.\n\n\n\nabstractmethod GRPCBodyService.imprint_projected_curves(**kwargs) -> dict\n\nImprint projected curves on a body.\n\n\n\nabstractmethod GRPCBodyService.get_full_tessellation(**kwargs) -> dict\n\nGet the full tessellation of a body."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurface.html#nurbssurface","title":"NURBSSurface","text":"NURBSSurface\n\n\n\nclass ansys.geometry.core.shapes.surfaces.nurbs.NURBSSurface(origin: ansys.geometry.core.math.Point3D = ZERO_POINT3D, reference: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_X, axis: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_Z, geomdl_object: geomdl.NURBS.Surface = None)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nRepresents a NURBS surface.\n\nNotes\n\nThis class is a wrapper around the NURBS surface class from the geomdl library.\nBy leveraging the geomdl library, this class provides a high-level interface\nto create and manipulate NURBS surfaces. The geomdl library is a powerful\nlibrary for working with NURBS curves and surfaces. For more information, see\nhttps://pypi.org/project/geomdl/."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurface.html#overview","title":"NURBSSurface > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ntransformed_copy\n\nCreate a transformed copy of the surface.\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\nproject_point\n\nProject a point to the surface.\n\nConstructors\n\n\n\n\n\nfrom_control_points\n\nCreate a NURBS surface from control points and knot vectors.\n\nfit_surface_from_points\n\nFit a NURBS surface to a set of points.\n\nMethods\n\n\n\n\n\nparameterization\n\nGet the parametrization of the NURBS surface.\n\nevaluate\n\nEvaluate the surface at the given parameter.\n\nProperties\n\n\n\n\n\ngeomdl_nurbs_surface\n\nGet the underlying geomdl NURBS surface object.\n\ncontrol_points\n\nGet the control points of the NURBS surface.\n\ndegree_u\n\nGet the degree of the surface in the U direction.\n\ndegree_v\n\nGet the degree of the surface in the V direction.\n\nknotvector_u\n\nGet the knot vector for the u-direction of the surface.\n\nknotvector_v\n\nGet the knot vector for the v-direction of the surface.\n\nweights\n\nGet the weights of the control points.\n\norigin\n\nGet the origin of the surface.\n\ndir_x\n\nGet the reference direction of the surface.\n\ndir_z\n\nGet the axis direction of the surface.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nDetermine if two surfaces are equal."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurface.html#import-detail","title":"NURBSSurface > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurface.html#property-detail","title":"NURBSSurface > Property detail","text":"Property detail\n\n\n\nproperty NURBSSurface.geomdl_nurbs_surface: geomdl.NURBS.Surface\n\nGet the underlying geomdl NURBS surface object.\n\nNotes\n\nThis property gives access to the full functionality of the NURBS surface\ncoming from the geomdl library. Use with caution.\n\n\n\nproperty NURBSSurface.control_points: list[ansys.geometry.core.math.Point3D]\n\nGet the control points of the NURBS surface.\n\n\n\nproperty NURBSSurface.degree_u: int\n\nGet the degree of the surface in the U direction.\n\n\n\nproperty NURBSSurface.degree_v: int\n\nGet the degree of the surface in the V direction.\n\n\n\nproperty NURBSSurface.knotvector_u: list[ansys.geometry.core.typing.Real]\n\nGet the knot vector for the u-direction of the surface.\n\n\n\nproperty NURBSSurface.knotvector_v: list[ansys.geometry.core.typing.Real]\n\nGet the knot vector for the v-direction of the surface.\n\n\n\nproperty NURBSSurface.weights: list[ansys.geometry.core.typing.Real]\n\nGet the weights of the control points.\n\n\n\nproperty NURBSSurface.origin: ansys.geometry.core.math.Point3D\n\nGet the origin of the surface.\n\n\n\nproperty NURBSSurface.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nGet the reference direction of the surface.\n\n\n\nproperty NURBSSurface.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nGet the axis direction of the surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurface.html#method-detail","title":"NURBSSurface > Method detail","text":"Method detail\n\n\n\nclassmethod NURBSSurface.from_control_points(degree_u: int, degree_v: int, knots_u: list[ansys.geometry.core.typing.Real], knots_v: list[ansys.geometry.core.typing.Real], control_points: list[ansys.geometry.core.math.Point3D], weights: list[ansys.geometry.core.typing.Real] = None, origin: ansys.geometry.core.math.Point3D = ZERO_POINT3D, reference: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_X, axis: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_Z) -> NURBSSurface\n\nCreate a NURBS surface from control points and knot vectors.\n\nParameters\n\ndegree_u\n\npython:int\n\nDegree of the surface in the U direction.\n\ndegree_v\n\npython:int\n\nDegree of the surface in the V direction.\n\nknots_u\n\npython:list[Real]\n\nKnot vector for the U direction.\n\nknots_v\n\npython:list[Real]\n\nKnot vector for the V direction.\n\ncontrol_points\n\npython:list[Point3D]\n\nControl points for the surface.\n\nweights\n\npython:list[Real], optional\n\nWeights for the control points. If not provided, all weights are set to 1.\n\ndelta\n\npython:float, optional\n\nEvaluation delta for the surface. Default is 0.01.\n\norigin\n\nPoint3D, optional\n\nOrigin of the surface. Default is (0, 0, 0).\n\nreference\n\nUnitVector3D, optional\n\nReference direction of the surface. Default is (1, 0, 0).\n\naxis\n\nUnitVector3D, optional\n\nAxis direction of the surface. Default is (0, 0, 1).\n\nReturns\n\nNURBSSurface\n\nCreated NURBS surface.\n\n\n\nclassmethod NURBSSurface.fit_surface_from_points(points: list[ansys.geometry.core.math.Point3D], size_u: int, size_v: int, degree_u: int, degree_v: int, origin: ansys.geometry.core.math.Point3D = ZERO_POINT3D, reference: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_X, axis: ansys.geometry.core.math.vector.UnitVector3D = UNITVECTOR3D_Z) -> NURBSSurface\n\nFit a NURBS surface to a set of points.\n\nParameters\n\npoints\n\npython:list[Point3D]\n\nPoints to fit the surface to.\n\nsize_u\n\npython:int\n\nNumber of control points in the U direction.\n\nsize_v\n\npython:int\n\nNumber of control points in the V direction.\n\ndegree_u\n\npython:int\n\nDegree of the surface in the U direction.\n\ndegree_v\n\npython:int\n\nDegree of the surface in the V direction.\n\norigin\n\nPoint3D, optional\n\nOrigin of the surface. Default is (0, 0, 0).\n\nreference\n\nUnitVector3D, optional\n\nReference direction of the surface. Default is (1, 0, 0).\n\naxis\n\nUnitVector3D, optional\n\nAxis direction of the surface. Default is (0, 0, 1).\n\nReturns\n\nNURBSSurface\n\nFitted NURBS surface.\n\n\n\nNURBSSurface.__eq__(other: NURBSSurface) -> bool\n\nDetermine if two surfaces are equal.\n\n\n\nNURBSSurface.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nGet the parametrization of the NURBS surface.\n\nThe parameter is defined in the interval [0, 1] by default. Information\nis provided about the parameter type and form.\n\nReturns\n\npython:tuple[Parameterization, Parameterization]\n\nParameterization in the U and V directions respectively.\n\n\n\nabstractmethod NURBSSurface.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> NURBSSurface\n\nCreate a transformed copy of the surface.\n\n\n\nNURBSSurface.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the surface at the given parameter.\n\nParameters\n\nparameter\n\nParamUV\n\nParameter to evaluate the surface at.\n\nReturns\n\nSurfaceEvaluation\n\nEvaluation of the surface at the given parameter.\n\n\n\nabstractmethod NURBSSurface.contains_param(param: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod NURBSSurface.contains_point(point: ansys.geometry.core.math.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary.\n\n\n\nabstractmethod NURBSSurface.project_point(point: ansys.geometry.core.math.Point3D) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProject a point to the surface.\n\nThis method returns the evaluation at the closest point."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/FillPatternType.html#fillpatterntype","title":"FillPatternType","text":"FillPatternType\n\n\n\nclass ansys.geometry.core.designer.geometry_commands.FillPatternType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for types of fill patterns."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/FillPatternType.html#overview","title":"FillPatternType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nGRID\n\n\n\nOFFSET\n\n\n\nSKEWED\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/FillPatternType.html#import-detail","title":"FillPatternType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/FillPatternType.html#attribute-detail","title":"FillPatternType > Attribute detail","text":"Attribute detail\n\n\n\nFillPatternType.GRID = 0\n\n\n\n\n\nFillPatternType.OFFSET = 1\n\n\n\n\n\nFillPatternType.SKEWED = 2\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/TorusEvaluation.html#torusevaluation","title":"TorusEvaluation","text":"TorusEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.torus.TorusEvaluation(torus: Torus, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the torus`` at given parameters.\n\nParameters\n\nTorus: ~ansys.geometry.core.shapes.surfaces.torus.Torus\n\nTorust to evaluate.\n\nparameter: ParamUV\n\nParameters (u, v) to evaluate the torus at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/TorusEvaluation.html#overview","title":"TorusEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntorus\n\nTorus being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nSecond derivative with respect to the U and V parameters.\n\nvv_derivative\n\nSecond derivative with respect to the V parameter.\n\ncurvature\n\nCurvature of the torus.\n\nmin_curvature\n\nMinimum curvature of the torus.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature of the torus.\n\nmax_curvature_direction\n\nMaximum curvature direction.\n\nAttributes\n\n\n\n\n\ncache\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/TorusEvaluation.html#import-detail","title":"TorusEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/TorusEvaluation.html#property-detail","title":"TorusEvaluation > Property detail","text":"Property detail\n\n\n\nproperty TorusEvaluation.torus: Torus\n\nTorus being evaluated.\n\n\n\nproperty TorusEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter that the evaluation is based upon.\n\n\n\nproperty TorusEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the torus at this evaluation.\n\n\n\nproperty TorusEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the surface.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the torus at this evaluation.\n\n\n\nproperty TorusEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the U parameter.\n\n\n\nproperty TorusEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the V parameter.\n\n\n\nproperty TorusEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U parameter.\n\n\n\nproperty TorusEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U and V parameters.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U and V parameters.\n\n\n\nproperty TorusEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the V parameter.\n\n\n\nproperty TorusEvaluation.curvature: tuple[ansys.geometry.core.typing.Real, ansys.geometry.core.math.vector.Vector3D, ansys.geometry.core.typing.Real, ansys.geometry.core.math.vector.Vector3D]\n\nCurvature of the torus.\n\nReturns\n\npython:tuple[Real, Vector3D, Real, Vector3D]\n\nMinimum and maximum curvature value and direction, respectively.\n\n\n\nproperty TorusEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nMinimum curvature of the torus.\n\nReturns\n\nReal\n\nMinimum curvature of the torus.\n\n\n\nproperty TorusEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMinimum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMinimum curvature direction.\n\n\n\nproperty TorusEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nMaximum curvature of the torus.\n\nReturns\n\nReal\n\nMaximum curvature of the torus.\n\n\n\nproperty TorusEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMaximum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/TorusEvaluation.html#attribute-detail","title":"TorusEvaluation > Attribute detail","text":"Attribute detail\n\n\n\nTorusEvaluation.cache\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/Arc.html#arc","title":"Arc","text":"Arc\n\n\n\nclass ansys.geometry.core.sketch.arc.Arc(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, center: ansys.geometry.core.math.point.Point2D, clockwise: bool = False)\n\nBases: ansys.geometry.core.sketch.edge.SketchEdge\n\nProvides for modeling an arc.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\ncenter\n\nPoint2D\n\nCenter point of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the clockwise angle between the start and end points.\nWhen False (default), the arc spans the counter-clockwise angle. When\nTrue, the arc spands the clockwise angle."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/Arc.html#overview","title":"Arc > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_three_points\n\nCreate an arc from three given points.\n\nfrom_start_end_and_radius\n\nCreate an arc from a starting point, an ending point, and a radius.\n\nfrom_start_center_and_angle\n\nCreate an arc from a starting point, a center point, and an angle.\n\nProperties\n\n\n\n\n\nstart\n\nStarting point of the arc line.\n\nend\n\nEnding point of the arc line.\n\ncenter\n\nCenter point of the arc.\n\nlength\n\nLength of the arc.\n\nradius\n\nRadius of the arc.\n\nangle\n\nAngle of the arc.\n\nis_clockwise\n\nFlag indicating whether the rotation of the angle is clockwise.\n\nsector_area\n\nArea of the sector of the arc.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Arc class.\n\n__ne__\n\nNot equals operator for the Arc class."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/Arc.html#import-detail","title":"Arc > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/Arc.html#property-detail","title":"Arc > Property detail","text":"Property detail\n\n\n\nproperty Arc.start: ansys.geometry.core.math.point.Point2D\n\nStarting point of the arc line.\n\n\n\nproperty Arc.end: ansys.geometry.core.math.point.Point2D\n\nEnding point of the arc line.\n\n\n\nproperty Arc.center: ansys.geometry.core.math.point.Point2D\n\nCenter point of the arc.\n\n\n\nproperty Arc.length: pint.Quantity\n\nLength of the arc.\n\n\n\nproperty Arc.radius: pint.Quantity\n\nRadius of the arc.\n\n\n\nproperty Arc.angle: pint.Quantity\n\nAngle of the arc.\n\n\n\nproperty Arc.is_clockwise: bool\n\nFlag indicating whether the rotation of the angle is clockwise.\n\nReturns\n\nbool\n\nTrue if the sense of rotation is clockwise.\nFalse if the sense of rotation is counter-clockwise.\n\n\n\nproperty Arc.sector_area: pint.Quantity\n\nArea of the sector of the arc.\n\n\n\nproperty Arc.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration.\n\nNotes\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/Arc.html#method-detail","title":"Arc > Method detail","text":"Method detail\n\n\n\nArc.__eq__(other: Arc) -> bool\n\nEquals operator for the Arc class.\n\n\n\nArc.__ne__(other: Arc) -> bool\n\nNot equals operator for the Arc class.\n\n\n\nclassmethod Arc.from_three_points(start: ansys.geometry.core.math.point.Point2D, inter: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D)\n\nCreate an arc from three given points.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\ninter\n\nPoint2D\n\nIntermediate point (location) of the arc.\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\nReturns\n\nArc\n\nArc generated from the three points.\n\n\n\nclassmethod Arc.from_start_end_and_radius(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, convex_arc: bool = False, clockwise: bool = False)\n\nCreate an arc from a starting point, an ending point, and a radius.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the arc.\n\nconvex_arc\n\nbool, default: python:False\n\nWhether the arc is convex. The default is False.\nWhen False, the arc is concave. When True, the arc is convex.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the clockwise angle between the start and end points.\nWhen False, the arc spans the counter-clockwise angle.\nWhen True, the arc spands the clockwise angle.\n\nReturns\n\nArc\n\nArc generated from the three points.\n\n\n\nclassmethod Arc.from_start_center_and_angle(start: ansys.geometry.core.math.point.Point2D, center: ansys.geometry.core.math.point.Point2D, angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, clockwise: bool = False)\n\nCreate an arc from a starting point, a center point, and an angle.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\ncenter\n\nPoint2D\n\nCenter point of the arc.\n\nangle\n\nAngle | Quantity | Real\n\nAngle of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the provided angle should be considered clockwise.\nWhen False, the angle is considered counter-clockwise.\nWhen True, the angle is considered clockwise.\n\nReturns\n\nArc\n\nArc generated from the three points."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/PrepareTools.html#preparetools","title":"PrepareTools","text":"PrepareTools\n\n\n\nclass ansys.geometry.core.tools.prepare_tools.PrepareTools(grpc_client: ansys.geometry.core.connection.GrpcClient, _internal_use: bool = False)\n\nPrepare tools for PyAnsys Geometry.\n\nParameters\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\n_internal_use\n\nbool, optional\n\nInternal flag to prevent direct instantiation by users.\nThis parameter is for internal use only.\n\nRaises\n\nGeometryRuntimeError\n\nIf the class is instantiated directly by users instead of through the modeler.\n\nNotes\n\nThis class should not be instantiated directly. Use\nmodeler.prepare_tools instead."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/PrepareTools.html#overview","title":"PrepareTools > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nextract_volume_from_faces\n\nExtract a volume from input faces.\n\nextract_volume_from_edge_loops\n\nExtract a volume from input edge loops.\n\nremove_rounds\n\nRemove rounds from geometry.\n\nshare_topology\n\nShare topology between the chosen bodies.\n\nenhanced_share_topology\n\nShare topology between the chosen bodies.\n\nfind_logos\n\nDetect logos in geometry.\n\nfind_and_remove_logos\n\nDetect and remove logos in geometry.\n\ndetect_helixes\n\nDetect helixes in the given bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/PrepareTools.html#import-detail","title":"PrepareTools > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/prepare_tools/PrepareTools.html#method-detail","title":"PrepareTools > Method detail","text":"Method detail\n\n\n\nPrepareTools.extract_volume_from_faces(sealing_faces: list[ansys.geometry.core.designer.face.Face], inside_faces: list[ansys.geometry.core.designer.face.Face]) -> list[ansys.geometry.core.designer.body.Body]\n\nExtract a volume from input faces.\n\nCreates a volume (typically a flow volume) from a list of faces that seal the volume\nand one or more faces that define the wetted surface (inside faces of the solid).\n\nParameters\n\nsealing_faces\n\npython:list[Face]\n\nList of faces that seal the volume.\n\ninside_faces\n\npython:list[Face]\n\nList of faces that define the interior of the solid.\n\nReturns\n\npython:list[Body]\n\nList of created bodies.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nPrepareTools.extract_volume_from_edge_loops(sealing_edges: list[ansys.geometry.core.designer.edge.Edge], inside_faces: list[ansys.geometry.core.designer.face.Face] = None) -> list[ansys.geometry.core.designer.body.Body]\n\nExtract a volume from input edge loops.\n\nCreates a volume (typically a flow volume) from a list of edge loops that seal the volume.\nand one or more faces that define the wetted surface (inside faces of the solid).\n\nParameters\n\nsealing_edges\n\npython:list[Edge]\n\nList of faces that seal the volume.\n\ninside_faces\n\npython:list[Face], optional\n\nList of faces that define the interior of the solid (not always necessary).\n\nReturns\n\npython:list[Body]\n\nList of created bodies.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nPrepareTools.remove_rounds(faces: list[ansys.geometry.core.designer.face.Face], auto_shrink: bool = False) -> bool\n\nRemove rounds from geometry.\n\nTries to remove rounds from geometry. Faces to be removed are input to the method.\n\nParameters\n\nround_faces\n\npython:list[Face]\n\nList of rounds faces to be removed\n\nauto_shrink\n\nbool, default: python:False\n\nWhether to shrink the geometry after removing rounds. Fills in the gaps\nleft by the removed rounds.\n\nReturns\n\nbool\n\nTrue if successful, False if failed.\n\n\n\nPrepareTools.share_topology(bodies: list[ansys.geometry.core.designer.body.Body], tol: ansys.geometry.core.typing.Real = 0.0, preserve_instances: bool = False) -> bool\n\nShare topology between the chosen bodies.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to share topology between.\n\ntol\n\nReal\n\nMaximum distance between bodies.\n\npreserve_instances\n\nbool\n\nWhether instances are preserved.\n\nReturns\n\nbool\n\nTrue if successful, False if failed.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nPrepareTools.enhanced_share_topology(bodies: list[ansys.geometry.core.designer.body.Body], tol: ansys.geometry.core.typing.Real = 0.0, preserve_instances: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nShare topology between the chosen bodies.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to share topology between.\n\ntol\n\nReal\n\nMaximum distance between bodies.\n\npreserve_instances\n\nbool\n\nWhether instances are preserved.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nPrepareTools.find_logos(bodies: list[ansys.geometry.core.designer.body.Body] = None, min_height: ansys.geometry.core.typing.Real = None, max_height: ansys.geometry.core.typing.Real = None) -> ansys.geometry.core.tools.problem_areas.LogoProblemArea\n\nDetect logos in geometry.\n\nDetects logos, using a list of bodies if provided.\nThe logos are returned as a list of faces.\n\nParameters\n\nbodies\n\npython:list[Body], optional\n\nList of bodies where logos should be detected\n\nmin_height\n\nreal, optional\n\nThe minimum height when searching for logos\n\nmax_height: real, optional\n\nThe minimum height when searching for logos\n\nReturns\n\nLogoProblemArea\n\nProblem area with logo faces.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nPrepareTools.find_and_remove_logos(bodies: list[ansys.geometry.core.designer.body.Body] = None, min_height: ansys.geometry.core.typing.Real = None, max_height: ansys.geometry.core.typing.Real = None) -> bool\n\nDetect and remove logos in geometry.\n\nDetects and remove logos, using a list of bodies if provided.\n\nParameters\n\nbodies\n\npython:list[Body], optional\n\nList of bodies where logos should be detected and removed.\n\nmin_height\n\nreal, optional\n\nThe minimum height when searching for logos\n\nmax_height: real, optional\n\nThe minimum height when searching for logos\n\nReturns\n\nBoolean value indicating whether the operation was successful.\n\n\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nPrepareTools.detect_helixes(bodies: list[ansys.geometry.core.designer.body.Body], min_radius: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0.0, max_radius: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 100.0, fit_radius_error: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0.01) -> dict[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve, list[ansys.geometry.core.designer.edge.Edge]]\n\nDetect helixes in the given bodies.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to detect helixes in.\n\nmin_radius\n\nDistance, Quantity, or Real, default: 0.0\n\nMinimum radius of the helix to be detected.\n\nmax_radius\n\nDistance, Quantity, or Real, default: 1e6\n\nMaximum radius of the helix to be detected.\n\nfit_radius_error\n\nDistance, Quantity, or Real, default: 0.01\n\nMaximum fit radius error of the helix to be detected.\n\nReturns\n\npython:dict\n\nDictionary with key “helixes” containing a list of detected helixes.\nEach helix is represented as a dictionary with keys “trimmed_curve” and “edges”.\n\nThis method is only available starting on Ansys release 26R1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/index.html#the-bodiespy-module","title":"The bodies.py module","text":"The bodies.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/index.html#summary","title":"The bodies.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBodyServiceV1\n\nBody service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/index.html#description","title":"The bodies.py module > Description","text":"Description\n\nModule containing the bodies service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/index.html#the-repair_toolspy-module","title":"The repair_tools.py module","text":"The repair_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/index.html#summary","title":"The repair_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCRepairToolsServiceV0\n\nRepair tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/index.html#description","title":"The repair_tools.py module > Description","text":"Description\n\nModule containing the repair tools service implementation for v0.\n\nThis module defines an abstract base class for a gRPC-based repair tools service.\nThe class provides a set of abstract methods for identifying and repairing various\ngeometry issues, such as split edges, extra edges, duplicate faces etc."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/Component.html#component","title":"Component","text":"Component\n\n\n\nclass ansys.geometry.core.designer.component.Component(name: str, parent_component: Component | None, grpc_client: ansys.geometry.core.connection.client.GrpcClient, template: Component | None = None, instance_name: str | None = None, preexisting_id: str | None = None, master_component: ansys.geometry.core.designer.part.MasterComponent | None = None, read_existing_comp: bool = False)\n\nProvides for creating and managing a component.\n\nThis class synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new component.\n\nparent_component\n\nComponent or python:None\n\nParent component to place the new component under within the design assembly. The\ndefault is None only when dealing with a Design object.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling.\n\ntemplate\n\nComponent, default: python:None\n\nTemplate to create this component from. This creates an\ninstance component that shares a master with the template component.\n\ninstance_name: str, default: None\n\nUser defined optional name for the component instance.\n\npreexisting_id\n\npython:str, default: python:None\n\nID of a component pre-existing on the server side to use to create the component\non the client-side data model. If an ID is specified, a new component is not\ncreated on the server.\n\nmaster_component\n\nMasterComponent, default: python:None\n\nMaster component to use to create a nested component instance instead\nof creating a new conponent.\n\nread_existing_comp\n\nbool, default: python:False\n\nWhether an existing component on the service should be read. This\nparameter is only valid when connecting to an existing service session.\nOtherwise, avoid using this optional parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/Component.html#overview","title":"Component > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_name\n\nSet the name of the component.\n\nget_all_bodies\n\nGet all bodies in the component hierarchy.\n\nget_world_transform\n\nGet the full transformation matrix of the component in world space.\n\nmodify_placement\n\nApply a translation and/or rotation to the placement matrix.\n\nreset_placement\n\nReset a component’s placement matrix to an identity matrix.\n\nadd_component\n\nAdd a new component under this component within the design assembly.\n\nset_shared_topology\n\nSet the shared topology to apply to the component.\n\nextrude_sketch\n\nCreate a solid body by extruding the sketch profile a distance.\n\nsweep_sketch\n\nCreate a body by sweeping a planar profile along a path.\n\nsweep_chain\n\nCreate a body by sweeping a chain of curves along a path.\n\nsweep_with_guide\n\nCreate a body by sweeping a sketch along a path with a guide curve.\n\nrevolve_sketch\n\nCreate a solid body by revolving a sketch profile around an axis.\n\nextrude_face\n\nExtrude the face profile by a given distance to create a solid body.\n\ncreate_sphere\n\nCreate a sphere body defined by the center point and the radius.\n\ncreate_body_from_loft_profile\n\nCreate a lofted body from a collection of trimmed curves.\n\ncreate_body_from_loft_profiles_with_guides\n\nCreate a lofted body from a collection of trimmed curves with guide curves.\n\ncreate_surface\n\nCreate a surface body with a sketch profile.\n\ncreate_surface_from_face\n\nCreate a surface body based on a face.\n\ncreate_body_from_surface\n\nCreate a surface body from a trimmed surface.\n\ncreate_surface_from_trimmed_curves\n\nCreate a surface body from a list of trimmed curves all lying on the same plane.\n\ncreate_coordinate_system\n\nCreate a coordinate system.\n\ntranslate_bodies\n\nTranslate the bodies in a specified direction by a distance.\n\ncreate_beams\n\nCreate beams under the component.\n\ncreate_beam\n\nCreate a beam under the component.\n\ndelete_component\n\nDelete a component (itself or its children).\n\ndelete_body\n\nDelete a body belonging to this component (or its children).\n\nadd_design_point\n\nCreate a single design point.\n\nadd_design_points\n\nCreate a list of design points.\n\ndelete_beam\n\nDelete an existing beam belonging to this component’s scope.\n\nsearch_component\n\nSearch nested components recursively for a component.\n\nsearch_body\n\nSearch bodies in the component’s scope.\n\nsearch_beam\n\nSearch beams in the component’s scope.\n\ntessellate\n\nTessellate the component.\n\nplot\n\nPlot the component.\n\ntree_print\n\nPrint the component in tree format.\n\nimport_named_selections\n\nImport named selections of a component.\n\nmake_independent\n\nMake a component independent if it is an instance.\n\nProperties\n\n\n\n\n\nid\n\nID of the component.\n\nname\n\nName of the component.\n\ninstance_name\n\nName of the component instance.\n\ncomponents\n\nList of Component objects inside of the component.\n\nbodies\n\nList of Body objects inside of the component.\n\nbeams\n\nList of Beam objects inside of the component.\n\ndesign_points\n\nList of DesignPoint objects inside of the component.\n\ncoordinate_systems\n\nList of CoordinateSystem objects inside of the component.\n\nparent_component\n\nParent of the component.\n\nis_alive\n\nWhether the component is still alive on the server side.\n\nshared_topology\n\nShared topology type of the component (if any).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the Component as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/Component.html#import-detail","title":"Component > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/Component.html#property-detail","title":"Component > Property detail","text":"Property detail\n\n\n\nproperty Component.id: str\n\nID of the component.\n\n\n\nproperty Component.name: str\n\nName of the component.\n\n\n\nproperty Component.instance_name: str\n\nName of the component instance.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nproperty Component.components: list[Component]\n\nList of Component objects inside of the component.\n\n\n\nproperty Component.bodies: list[ansys.geometry.core.designer.body.Body]\n\nList of Body objects inside of the component.\n\n\n\nproperty Component.beams: list[ansys.geometry.core.designer.beam.Beam]\n\nList of Beam objects inside of the component.\n\n\n\nproperty Component.design_points: list[ansys.geometry.core.designer.designpoint.DesignPoint]\n\nList of DesignPoint objects inside of the component.\n\n\n\nproperty Component.coordinate_systems: list[ansys.geometry.core.designer.coordinate_system.CoordinateSystem]\n\nList of CoordinateSystem objects inside of the component.\n\n\n\nproperty Component.parent_component: Component\n\nParent of the component.\n\n\n\nproperty Component.is_alive: bool\n\nWhether the component is still alive on the server side.\n\n\n\nproperty Component.shared_topology: SharedTopologyType | None\n\nShared topology type of the component (if any).\n\nNotes\n\nIf no shared topology has been set, None is returned."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/Component.html#method-detail","title":"Component > Method detail","text":"Method detail\n\n\n\nComponent.set_name(name: str) -> None\n\nSet the name of the component.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nComponent.get_all_bodies() -> list[ansys.geometry.core.designer.body.Body]\n\nGet all bodies in the component hierarchy.\n\nReturns\n\npython:list[Body]\n\nList of all bodies in the component hierarchy.\n\n\n\nComponent.get_world_transform() -> ansys.geometry.core.math.matrix.Matrix44\n\nGet the full transformation matrix of the component in world space.\n\nReturns\n\nMatrix44\n\n4x4 transformation matrix of the component in world space.\n\n\n\nComponent.modify_placement(translation: ansys.geometry.core.math.vector.Vector3D | None = None, rotation_origin: ansys.geometry.core.math.point.Point3D | None = None, rotation_direction: ansys.geometry.core.math.vector.UnitVector3D | None = None, rotation_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0)\n\nApply a translation and/or rotation to the placement matrix.\n\nParameters\n\ntranslation\n\nVector3D, default: python:None\n\nVector that defines the desired translation to the component.\n\nrotation_origin\n\nPoint3D, default: python:None\n\nOrigin that defines the axis to rotate the component about.\n\nrotation_direction\n\nUnitVector3D, default: python:None\n\nDirection of the axis to rotate the component about.\n\nrotation_angle\n\nQuantity | Angle | Real, default: 0\n\nAngle to rotate the component around the axis.\n\nNotes\n\nTo reset a component’s placement to an identity matrix, see\nreset_placement() or call modify_placement() with no arguments.\n\n\n\nComponent.reset_placement()\n\nReset a component’s placement matrix to an identity matrix.\n\nSee modify_placement().\n\n\n\nComponent.add_component(name: str, template: Component | None = None, instance_name: str = None) -> Component\n\nAdd a new component under this component within the design assembly.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new component.\n\ntemplate\n\nComponent, default: python:None\n\nTemplate to create this component from. This creates an\ninstance component that shares a master with the template component.\n\nReturns\n\nComponent\n\nNew component with no children in the design assembly.\n\n\n\nComponent.set_shared_topology(share_type: SharedTopologyType) -> None\n\nSet the shared topology to apply to the component.\n\nParameters\n\nshare_type\n\nSharedTopologyType\n\nShared topology type to assign to the component.\n\n\n\nComponent.extrude_sketch(name: str, sketch: ansys.geometry.core.sketch.sketch.Sketch, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, direction: ExtrusionDirection | str = ExtrusionDirection.POSITIVE, cut: bool = False) -> ansys.geometry.core.designer.body.Body | None\n\nCreate a solid body by extruding the sketch profile a distance.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new solid body.\n\nsketch\n\nSketch\n\nTwo-dimensional sketch source for the extrusion.\n\ndistance\n\nQuantity | Distance | Real\n\nDistance to extrude the solid body.\n\ndirection\n\nExtrusionDirection | python:str, default: “+”\n\nDirection for extruding the solid body.\nThe default is to extrude in the positive normal direction of the sketch.\nOptions are “+” and “-” as a string, or the enum values.\n\ncut\n\nbool, default: python:False\n\nWhether to cut the extrusion from the existing component.\nBy default, the extrusion is added to the existing component.\n\nReturns\n\nBody\n\nExtruded body from the given sketch.\n\npython:None\n\nIf the cut parameter is True, the function returns None.\n\nNotes\n\nThe newly created body is placed under this component within the design assembly.\n\n\n\nComponent.sweep_sketch(name: str, sketch: ansys.geometry.core.sketch.sketch.Sketch, path: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]) -> ansys.geometry.core.designer.body.Body\n\nCreate a body by sweeping a planar profile along a path.\n\nThe newly created body is placed under this component within the design assembly.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new solid body.\n\nsketch\n\nSketch\n\nTwo-dimensional sketch source for the extrusion.\n\npath\n\npython:list[TrimmedCurve]\n\nThe path to sweep the profile along.\n\nReturns\n\nBody\n\nCreated body from the given sketch.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nComponent.sweep_chain(name: str, path: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve], chain: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]) -> ansys.geometry.core.designer.body.Body\n\nCreate a body by sweeping a chain of curves along a path.\n\nThe newly created body is placed under this component within the design assembly.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new solid body.\n\npath\n\npython:list[TrimmedCurve]\n\nThe path to sweep the chain along.\n\nchain\n\npython:list[TrimmedCurve]\n\nA chain of trimmed curves.\n\nReturns\n\nBody\n\nCreated body from the given sketch.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nComponent.sweep_with_guide(sweep_data: list[SweepWithGuideData]) -> list[ansys.geometry.core.designer.body.Body]\n\nCreate a body by sweeping a sketch along a path with a guide curve.\n\nThe newly created body is placed under this component within the design assembly.\n\nParameters\n\nsweep_data: list[SweepWithGuideData]\n\nData for the sweep operation, including the sketch, path, and guide curve.\n\nReturns\n\npython:list[Body]\n\nCreated bodies from the given sweep data.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nComponent.revolve_sketch(name: str, sketch: ansys.geometry.core.sketch.sketch.Sketch, axis: ansys.geometry.core.math.vector.Vector3D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, rotation_origin: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.designer.body.Body\n\nCreate a solid body by revolving a sketch profile around an axis.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new solid body.\n\nsketch\n\nSketch\n\nTwo-dimensional sketch source for the revolve.\n\naxis\n\nVector3D\n\nAxis of rotation for the revolve.\n\nangle\n\nQuantity | Angle | Real\n\nAngle to revolve the solid body around the axis. The angle can be positive or negative.\n\nrotation_origin\n\nPoint3D\n\nOrigin of the axis of rotation.\n\nReturns\n\nBody\n\nRevolved body from the given sketch.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nComponent.extrude_face(name: str, face: ansys.geometry.core.designer.face.Face, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance, direction: ExtrusionDirection | str = ExtrusionDirection.POSITIVE) -> ansys.geometry.core.designer.body.Body\n\nExtrude the face profile by a given distance to create a solid body.\n\nThere are no modifications against the body containing the source face.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new solid body.\n\nface\n\nFace\n\nTarget face to use as the source for the new surface.\n\ndistance\n\nQuantity | Distance | Real\n\nDistance to extrude the solid body.\n\ndirection\n\nExtrusionDirection | python:str, default: “+”\n\nDirection for extruding the solid body’s face.\nThe default is to extrude in the positive normal direction of the face.\nOptions are “+” and “-” as a string, or the enum values.\n\nReturns\n\nBody\n\nExtruded solid body.\n\nNotes\n\nThe source face can be anywhere within the design component hierarchy.\nTherefore, there is no validation requiring that the face is placed under the\ntarget component where the body is to be created.\n\n\n\nComponent.create_sphere(name: str, center: ansys.geometry.core.math.point.Point3D, radius: ansys.geometry.core.misc.measurements.Distance) -> ansys.geometry.core.designer.body.Body\n\nCreate a sphere body defined by the center point and the radius.\n\nParameters\n\nname\n\npython:str\n\nBody name.\n\ncenter\n\nPoint3D\n\nCenter point of the sphere.\n\nradius\n\nDistance\n\nRadius of the sphere.\n\nReturns\n\nBody\n\nSphere body object.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nComponent.create_body_from_loft_profile(name: str, profiles: list[list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]], periodic: bool = False, ruled: bool = False) -> ansys.geometry.core.designer.body.Body\n\nCreate a lofted body from a collection of trimmed curves.\n\nSurfaces produced have a U parameter in the direction of the profile curves,\nand a V parameter in the direction of lofting.\nProfiles can have different numbers of segments. A minimum twist solution is\nproduced.\nProfiles should be all closed or all open. Closed profiles cannot contain inner\nloops. If closed profiles are supplied, a closed (solid) body is produced, if\npossible. Otherwise, an open (sheet) body is produced.\nThe periodic argument applies when the profiles are closed. It is ignored if\nthe profiles are open.\n\nIf periodic=True, at least three profiles must be supplied. The loft continues\nfrom the last profile back to the first profile to produce surfaces that are\nperiodic in V.\n\nIf periodic=False, at least two profiles must be supplied. If the first\nand last profiles are planar, end capping faces are created. Otherwise, an open\n(sheet) body is produced.\nIf ruled=True, separate ruled surfaces are produced between each pair of profiles.\nIf periodic=True, the loft continues from the last profile back to the first\nprofile, but the surfaces are not periodic.\n\nParameters\n\nname\n\npython:str\n\nName of the lofted body.\n\nprofiles\n\npython:list[python:list[TrimmedCurve]]\n\nCollection of lists of trimmed curves (profiles) defining the lofted body’s shape.\n\nperiodic\n\nbool, default: python:False\n\nWhether the lofted body should have periodic continuity.\n\nruled\n\nbool\n\nWhether the lofted body should be ruled.\n\nReturns\n\nBody\n\nCreated lofted body object.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nComponent.create_body_from_loft_profiles_with_guides(name: str, profiles: list[list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]], guides: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]) -> ansys.geometry.core.designer.body.Body\n\nCreate a lofted body from a collection of trimmed curves with guide curves.\n\nParameters\n\nname\n\npython:str\n\nName of the lofted body.\n\nprofiles\n\npython:list[python:list[TrimmedCurve]]\n\nCollection of lists of trimmed curves (profiles) defining the lofted body’s shape.\n\nguides\n\npython:list[TrimmedCurve]\n\nCollection of guide curves to influence the lofting process.\n\nReturns\n\nBody\n\nCreated lofted body object.\n\n\n\nComponent.create_surface(name: str, sketch: ansys.geometry.core.sketch.sketch.Sketch) -> ansys.geometry.core.designer.body.Body\n\nCreate a surface body with a sketch profile.\n\nThe newly created body is placed under this component within the design assembly.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new surface body.\n\nsketch\n\nSketch\n\nTwo-dimensional sketch source for the surface definition.\n\nReturns\n\nBody\n\nBody (as a planar surface) from the given sketch.\n\n\n\nComponent.create_surface_from_face(name: str, face: ansys.geometry.core.designer.face.Face) -> ansys.geometry.core.designer.body.Body\n\nCreate a surface body based on a face.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new surface body.\n\nface\n\nFace\n\nTarget face to use as the source for the new surface.\n\nReturns\n\nBody\n\nSurface body.\n\nNotes\n\nThe source face can be anywhere within the design component hierarchy.\nTherefore, there is no validation requiring that the face is placed under the\ntarget component where the body is to be created.\n\n\n\nComponent.create_body_from_surface(name: str, trimmed_surface: ansys.geometry.core.shapes.surfaces.TrimmedSurface) -> ansys.geometry.core.designer.body.Body\n\nCreate a surface body from a trimmed surface.\n\nIt is possible to create a closed solid body (as opposed to an open surface body) with a\nSphere or Torus if they are untrimmed. This can be validated with body.is_surface.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new surface body.\n\ntrimmed_surface\n\nTrimmedSurface\n\nGeometry for the new surface body.\n\nReturns\n\nBody\n\nSurface body.\n\nThis method is only available starting on Ansys release 25R1.\nNURBS surface bodies are only supported starting on Ansys release 26R1.\n\n\n\nComponent.create_surface_from_trimmed_curves(name: str, trimmed_curves: list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]) -> ansys.geometry.core.designer.body.Body\n\nCreate a surface body from a list of trimmed curves all lying on the same plane.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new surface body.\n\ntrimmed_curves\n\npython:list[TrimmedCurve]\n\nCurves to define the plane and body.\n\nReturns\n\nBody\n\nSurface body.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nComponent.create_coordinate_system(name: str, frame: ansys.geometry.core.math.frame.Frame) -> ansys.geometry.core.designer.coordinate_system.CoordinateSystem\n\nCreate a coordinate system.\n\nThe newly created coordinate system is place under this component\nwithin the design assembly.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the new coordinate system.\n\nframe\n\nFrame\n\nFrame defining the coordinate system bounds.\n\nReturns\n\nCoordinateSystem\n\n\n\n\n\nComponent.translate_bodies(bodies: list[ansys.geometry.core.designer.body.Body], direction: ansys.geometry.core.math.vector.UnitVector3D, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> None\n\nTranslate the bodies in a specified direction by a distance.\n\nParameters\n\nbodies: list[Body]\n\nlist of bodies to translate by the same distance.\n\ndirection: UnitVector3D\n\nDirection of the translation.\n\ndistance: ~pint.Quantity | Distance | Real\n\nMagnitude of the translation.\n\nNotes\n\nIf the body does not belong to this component (or its children), it\nis not translated.\n\n\n\nComponent.create_beams(segments: list[tuple[ansys.geometry.core.math.point.Point3D, ansys.geometry.core.math.point.Point3D]], profile: ansys.geometry.core.designer.beam.BeamProfile) -> list[ansys.geometry.core.designer.beam.Beam]\n\nCreate beams under the component.\n\nParameters\n\nsegments\n\npython:list[python:tuple[Point3D, Point3D]]\n\nList of start and end pairs, each specifying a single line segment.\n\nprofile\n\nBeamProfile\n\nBeam profile to use to create the beams.\n\nReturns\n\npython:list[Beam]\n\nA list of the created Beams.\n\nNotes\n\nThe newly created beams synchronize to a design within a supporting\nGeometry service instance.\n\n\n\nComponent.create_beam(start: ansys.geometry.core.math.point.Point3D, end: ansys.geometry.core.math.point.Point3D, profile: ansys.geometry.core.designer.beam.BeamProfile) -> ansys.geometry.core.designer.beam.Beam\n\nCreate a beam under the component.\n\nThe newly created beam synchronizes to a design within a supporting\nGeometry service instance.\n\nParameters\n\nstart\n\nPoint3D\n\nStarting point of the beam line segment.\n\nend\n\nPoint3D\n\nEnding point of the beam line segment.\n\nprofile\n\nBeamProfile\n\nBeam profile to use to create the beam.\n\n\n\nComponent.delete_component(component: Component | str) -> None\n\nDelete a component (itself or its children).\n\nParameters\n\ncomponent\n\nComponent | python:str\n\nID of the component or instance to delete.\n\nNotes\n\nIf the component is not this component (or its children), it\nis not deleted.\n\n\n\nComponent.delete_body(body: ansys.geometry.core.designer.body.Body | str) -> None\n\nDelete a body belonging to this component (or its children).\n\nParameters\n\nbody\n\nBody | python:str\n\nID of the body or instance to delete.\n\nNotes\n\nIf the body does not belong to this component (or its children), it\nis not deleted.\n\n\n\nComponent.add_design_point(name: str, point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.designer.designpoint.DesignPoint\n\nCreate a single design point.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the design points.\n\npoints\n\nPoint3D\n\n3D point constituting the design point.\n\n\n\nComponent.add_design_points(name: str, points: list[ansys.geometry.core.math.point.Point3D]) -> list[ansys.geometry.core.designer.designpoint.DesignPoint]\n\nCreate a list of design points.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the list of design points.\n\npoints\n\npython:list[Point3D]\n\nlist of the 3D points that constitute the list of design points.\n\n\n\nComponent.delete_beam(beam: ansys.geometry.core.designer.beam.Beam | str) -> None\n\nDelete an existing beam belonging to this component’s scope.\n\nParameters\n\nbeam\n\nBeam | python:str\n\nID of the beam or instance to delete.\n\nNotes\n\nIf the beam belongs to this component’s children, it is deleted.\nIf the beam does not belong to this component (or its children), it\nis not deleted.\n\n\n\nComponent.search_component(id: str) -> Component | None\n\nSearch nested components recursively for a component.\n\nParameters\n\nid\n\npython:str\n\nID of the component to search for.\n\nReturns\n\nComponent\n\nComponent with the requested ID. If this ID is not found, None is returned.\n\n\n\nComponent.search_body(id: str) -> ansys.geometry.core.designer.body.Body | None\n\nSearch bodies in the component’s scope.\n\nParameters\n\nid\n\npython:str\n\nID of the body to search for.\n\nReturns\n\nBody | python:None\n\nBody with the requested ID. If the ID is not found, None is returned.\n\nNotes\n\nThis method searches for bodies in the component and nested components\nrecursively.\n\n\n\nComponent.search_beam(id: str) -> ansys.geometry.core.designer.beam.Beam | None\n\nSearch beams in the component’s scope.\n\nParameters\n\nid\n\npython:str\n\nID of the beam to search for.\n\nReturns\n\nBeam | python:None\n\nBeam with the requested ID. If the ID is not found, None is returned.\n\nNotes\n\nThis method searches for beams in the component and nested components\nrecursively.\n\n\n\nComponent.tessellate(tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, _recursive_call: bool = False) -> pyvista.PolyData | list[pyvista.MultiBlock]\n\nTessellate the component.\n\nParameters\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\n_recursive_call: bool, default: False\n\nInternal flag to indicate if this method is being called recursively.\nNot to be used by the user.\n\nReturns\n\nPolyData, python:list[MultiBlock]\n\nTessellated component as a single PolyData object.\nIf the method is called recursively, a list of MultiBlock objects is returned.\n\n\n\nComponent.plot(merge_component: bool = True, merge_bodies: bool = True, screenshot: str | None = None, use_trame: bool | None = None, use_service_colors: bool | None = None, allow_picking: bool | None = None, **plotting_options: dict | None) -> None | list[Any]\n\nPlot the component.\n\nParameters\n\nmerge_component\n\nbool, default: python:True\n\nWhether to merge the component into a single dataset. By default, True.\nPerformance improved. When True, all the faces of the component are effectively\nmerged into a single dataset. If False, the individual bodies are kept separate.\n\nmerge_bodies\n\nbool, default: python:True\n\nWhether to merge each body into a single dataset. By default, True.\nPerformance improved. When True, all the faces of each individual body are\neffectively merged into a single dataset. If False, the individual faces are kept\nseparate.\n\nscreenshot\n\npython:str, default: python:None\n\nPath for saving a screenshot of the image being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enable the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\nuse_service_colors\n\nbool, default: python:None\n\nWhether to use the colors assigned to the body in the service. The default\nis None, in which case the ansys.geometry.core.USE_SERVICE_COLORS\nglobal setting is used.\n\nallow_picking\n\nbool, default: python:None\n\nWhether to enable picking. The default is None, in which case the\npicker is not enabled.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for plotting. For allowable keyword arguments, see the\n\nReturns\n\npython:None | python:list[Any]\n\nIf allow_picking=True, a list of picked objects is returned. Otherwise, None.\n\nExamples\n\nCreate 25 small cylinders in a grid-like pattern on the XY plane and\nplot them. Make the cylinders look metallic by enabling\nphysically-based rendering with pbr=True.\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> import numpy as np\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 1, 0])\n>>> design = modeler.create_design(\"my-design\")\n>>> mycomp = design.add_component(\"my-comp\")\n>>> n = 5\n>>> xx, yy = np.meshgrid(\n...     np.linspace(-4, 4, n),\n...     np.linspace(-4, 4, n),\n... )\n>>> for x, y in zip(xx.ravel(), yy.ravel()):\n...     sketch = Sketch(plane)\n...     sketch.circle(Point2D([x, y]), 0.2 * u.m)\n...     mycomp.extrude_sketch(f\"body-{x}-{y}\", sketch, 1 * u.m)\n>>> mycomp\nansys.geometry.core.designer.Component 0x2203cc9ec50\n    Name                 : my-comp\n    Exists               : True\n    Parent component     : my-design\n    N Bodies             : 25\n    N Components         : 0\n    N Coordinate Systems : 0\n>>> mycomp.plot(pbr=True, metallic=1.0)\n\n\n\nComponent.__repr__() -> str\n\nRepresent the Component as a string.\n\n\n\nComponent.tree_print(consider_comps: bool = True, consider_bodies: bool = True, consider_beams: bool = True, depth: int | None = None, indent: int = 4, sort_keys: bool = False, return_list: bool = False, skip_loc_header: bool = False) -> None | list[str]\n\nPrint the component in tree format.\n\nParameters\n\nconsider_comps\n\nbool, default: python:True\n\nWhether to print the nested components.\n\nconsider_bodies\n\nbool, default: python:True\n\nWhether to print the bodies.\n\nconsider_beams\n\nbool, default: python:True\n\nWhether to print the beams.\n\ndepth\n\npython:int | python:None, default: python:None\n\nDepth level to print. If None, it prints all levels.\n\nindent\n\npython:int, default: 4\n\nIndentation level. Minimum is 2 - if less than 2, it is set to 2\nby default.\n\nsort_keys\n\nbool, default: python:False\n\nWhether to sort the keys alphabetically.\n\nreturn_list\n\nbool, default: python:False\n\nWhether to return a list of strings or print out\nthe tree structure.\n\nskip_loc_header\n\nbool, default: python:False\n\nWhether to skip the location header. Mostly for internal use.\n\nReturns\n\npython:None | python:list[python:str]\n\nTree-style printed component or list of strings representing the component tree.\n\n\n\nComponent.import_named_selections() -> None\n\nImport named selections of a component.\n\nWhen a design is inserted, it becomes a component. From 26R1 onwards, the named selections\nof that component will be imported by default. If a file is opened that contains a\ncomponent that did not have its named selections imported, this method can be used to\nimport them.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nComponent.make_independent(others: list[Component] = None) -> None\n\nMake a component independent if it is an instance.\n\nIf a component is an instance of another component, modifying one component modifies both.\nWhen a component is made independent, it is no longer associated with other instances and\ncan be modified separately.\n\nParameters\n\nothers\n\npython:list[Component], default: python:None\n\nOptionally include multiple components to make them all independent.\n\nThis method is only available starting on Ansys release 26R1."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/Face.html#face","title":"Face","text":"Face\n\n\n\nclass ansys.geometry.core.designer.face.Face(id: str, surface_type: SurfaceType, body: ansys.geometry.core.designer.body.Body, grpc_client: ansys.geometry.core.connection.client.GrpcClient, is_reversed: bool = False)\n\nRepresents a single face of a body within the design assembly.\n\nThis class synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the body.\n\nsurface_type\n\nSurfaceType\n\nType of surface that the face forms.\n\nbody\n\nBody\n\nParent body that the face constructs.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/Face.html#overview","title":"Face > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_color\n\nSet the color of the face.\n\nset_opacity\n\nSet the opacity of the face.\n\nnormal\n\nGet the normal direction to the face at certain UV coordinates.\n\npoint\n\nGet a point of the face evaluated at certain UV coordinates.\n\ncreate_isoparametric_curves\n\nCreate isoparametic curves at the given proportional parameter.\n\nsetup_offset_relationship\n\nCreate an offset relationship between two faces.\n\ntessellate\n\nTessellate the face and return the geometry as triangles.\n\nplot\n\nPlot the face.\n\nProperties\n\n\n\n\n\nid\n\nFace ID.\n\nis_reversed\n\nFlag indicating if the face is reversed.\n\nbody\n\nBody that the face belongs to.\n\nshape\n\nUnderlying trimmed surface of the face.\n\nsurface_type\n\nSurface type of the face.\n\narea\n\nCalculated area of the face.\n\nedges\n\nList of all edges of the face.\n\nvertices\n\nList of all vertices of the face.\n\nloops\n\nList of all loops of the face.\n\ncolor\n\nGet the current color of the face.\n\nopacity\n\nGet the opacity of the face.\n\nbounding_box\n\nGet the bounding box for the face."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/Face.html#import-detail","title":"Face > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/Face.html#property-detail","title":"Face > Property detail","text":"Property detail\n\n\n\nproperty Face.id: str\n\nFace ID.\n\n\n\nproperty Face.is_reversed: bool\n\nFlag indicating if the face is reversed.\n\n\n\nproperty Face.body: ansys.geometry.core.designer.body.Body\n\nBody that the face belongs to.\n\n\n\nproperty Face.shape: ansys.geometry.core.shapes.surfaces.trimmed_surface.TrimmedSurface\n\nUnderlying trimmed surface of the face.\n\nIf the face is reversed, its shape is a ReversedTrimmedSurface type, which handles the\ndirection of the normal vector to ensure it is always facing outward.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nproperty Face.surface_type: SurfaceType\n\nSurface type of the face.\n\n\n\nproperty Face.area: pint.Quantity\n\nCalculated area of the face.\n\n\n\nproperty Face.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nList of all edges of the face.\n\n\n\nproperty Face.vertices: list[ansys.geometry.core.designer.vertex.Vertex]\n\nList of all vertices of the face.\n\n\n\nproperty Face.loops: list[FaceLoop]\n\nList of all loops of the face.\n\n\n\nproperty Face.color: str\n\nGet the current color of the face.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nproperty Face.opacity: float\n\nGet the opacity of the face.\n\n\n\nproperty Face.bounding_box: ansys.geometry.core.math.bbox.BoundingBox\n\nGet the bounding box for the face.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/Face.html#method-detail","title":"Face > Method detail","text":"Method detail\n\n\n\nFace.set_color(color: str | tuple[float, float, float]) -> None\n\nSet the color of the face.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nFace.set_opacity(opacity: float) -> None\n\nSet the opacity of the face.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nFace.normal(u: float = 0.5, v: float = 0.5) -> ansys.geometry.core.math.vector.UnitVector3D\n\nGet the normal direction to the face at certain UV coordinates.\n\nParameters\n\nu\n\npython:float, default: 0.5\n\nFirst coordinate of the 2D representation of a surface in UV space.\nThe default is 0.5, which is the center of the surface.\n\nv\n\npython:float, default: 0.5\n\nSecond coordinate of the 2D representation of a surface in UV space.\nThe default is 0.5, which is the center of the surface.\n\nReturns\n\nUnitVector3D\n\nUnitVector3D object evaluated at the given U and V coordinates.\nThis UnitVector3D object is perpendicular to the surface at the\ngiven UV coordinates.\n\nNotes\n\nTo properly use this method, you must handle UV coordinates. Thus, you must\nknow how these relate to the underlying Geometry service. It is an advanced\nmethod for Geometry experts only.\n\n\n\nFace.point(u: float = 0.5, v: float = 0.5) -> ansys.geometry.core.math.point.Point3D\n\nGet a point of the face evaluated at certain UV coordinates.\n\nParameters\n\nu\n\npython:float, default: 0.5\n\nFirst coordinate of the 2D representation of a surface in UV space.\nThe default is 0.5, which is the center of the surface.\n\nv\n\npython:float, default: 0.5\n\nSecond coordinate of the 2D representation of a surface in UV space.\nThe default is 0.5, which is the center of the surface.\n\nReturns\n\nPoint3D\n\nPoint3D object evaluated at the given UV coordinates.\n\nNotes\n\nTo properly use this method, you must handle UV coordinates. Thus, you must\nknow how these relate to the underlying Geometry service. It is an advanced\nmethod for Geometry experts only.\n\n\n\nFace.create_isoparametric_curves(use_u_param: bool, parameter: float) -> list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]\n\nCreate isoparametic curves at the given proportional parameter.\n\nTypically, only one curve is created, but if the face has a hole, it is possible that\nmore than one curve is created.\n\nParameters\n\nuse_u_param\n\nbool\n\nWhether the parameter is the u coordinate or v coordinate. If True,\nit is the u coordinate. If False, it is the v coordinate.\n\nparameter\n\npython:float\n\nProportional [0-1] parameter to create the one or more curves at.\n\nReturns\n\npython:list[TrimmedCurve]\n\nlist of curves that were created.\n\n\n\nFace.setup_offset_relationship(other_face: Face, set_baselines: bool = False, process_adjacent_faces: bool = False) -> bool\n\nCreate an offset relationship between two faces.\n\nParameters\n\nother_face\n\nFace\n\nThe face to setup an offset relationship with.\n\nset_baselines\n\nbool, default: python:False\n\nAutomatically set baseline faces.\n\nprocess_adjacent_faces\n\nbool, default: python:False\n\nLook for relationships of the same offset on adjacent faces.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nFace.tessellate(tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None) -> pyvista.PolyData\n\nTessellate the face and return the geometry as triangles.\n\nParameters\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nReturns\n\nPolyData\n\npyvista.PolyData object holding the face.\n\nNotes\n\nThe tessellation options are ONLY used if the face has not been tessellated before.\nIf the face has been tessellated before, the stored tessellation is returned.\n\n\n\nFace.plot(screenshot: str | None = None, use_trame: bool | None = None, use_service_colors: bool | None = None, **plotting_options: dict | None) -> None\n\nPlot the face.\n\nParameters\n\nscreenshot\n\npython:str, default: python:None\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enable the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\nuse_service_colors\n\nbool, default: python:None\n\nWhether to use the colors assigned to the face in the service. The default\nis None, in which case the ansys.geometry.core.USE_SERVICE_COLORS\nglobal setting is used.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for plotting. For allowable keyword arguments, see the\nPlotter.add_mesh method."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ShortEdgeProblemAreas.html#shortedgeproblemareas","title":"ShortEdgeProblemAreas","text":"ShortEdgeProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.ShortEdgeProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nBases: ProblemArea\n\nRepresents a short edge problem area with a unique identifier and associated edges.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nedges\n\npython:list[Edge]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ShortEdgeProblemAreas.html#overview","title":"ShortEdgeProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nedges\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ShortEdgeProblemAreas.html#import-detail","title":"ShortEdgeProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ShortEdgeProblemAreas.html#property-detail","title":"ShortEdgeProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty ShortEdgeProblemAreas.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ShortEdgeProblemAreas.html#method-detail","title":"ShortEdgeProblemAreas > Method detail","text":"Method detail\n\n\n\nShortEdgeProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/GRPCPatternsService.html#grpcpatternsservice","title":"GRPCPatternsService","text":"GRPCPatternsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.patterns.GRPCPatternsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nPatterns service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/GRPCPatternsService.html#overview","title":"GRPCPatternsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_linear_pattern\n\nCreate a linear pattern of entities.\n\nmodify_linear_pattern\n\nModify a linear pattern of entities.\n\ncreate_circular_pattern\n\nCreate a circular pattern of entities.\n\nmodify_circular_pattern\n\nModify a circular pattern of entities.\n\ncreate_fill_pattern\n\nCreate a fill pattern of entities.\n\nupdate_fill_pattern\n\nUpdate a fill pattern of entities."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/GRPCPatternsService.html#import-detail","title":"GRPCPatternsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/GRPCPatternsService.html#method-detail","title":"GRPCPatternsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPatternsService.create_linear_pattern(**kwargs) -> dict\n\nCreate a linear pattern of entities.\n\n\n\nabstractmethod GRPCPatternsService.modify_linear_pattern(**kwargs) -> dict\n\nModify a linear pattern of entities.\n\n\n\nabstractmethod GRPCPatternsService.create_circular_pattern(**kwargs) -> dict\n\nCreate a circular pattern of entities.\n\n\n\nabstractmethod GRPCPatternsService.modify_circular_pattern(**kwargs) -> dict\n\nModify a circular pattern of entities.\n\n\n\nabstractmethod GRPCPatternsService.create_fill_pattern(**kwargs) -> dict\n\nCreate a fill pattern of entities.\n\n\n\nabstractmethod GRPCPatternsService.update_fill_pattern(**kwargs) -> dict\n\nUpdate a fill pattern of entities."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/UnsupportedCommands.html#unsupportedcommands","title":"UnsupportedCommands","text":"UnsupportedCommands\n\n\n\nclass ansys.geometry.core.tools.unsupported.UnsupportedCommands(grpc_client: ansys.geometry.core.connection.GrpcClient, modeler: ansys.geometry.core.modeler.Modeler, _internal_use: bool = False)\n\nProvides unsupported commands for PyAnsys Geometry.\n\nParameters\n\ngrpc_client\n\nGrpcClient\n\ngRPC client to use for the geometry commands.\n\nmodeler\n\nModeler\n\nModeler instance to use for the geometry commands.\n\n_internal_use\n\nbool, optional\n\nInternal flag to prevent direct instantiation by users.\nThis parameter is for internal use only.\n\nRaises\n\nGeometryRuntimeError\n\nIf the class is instantiated directly by users instead of through the modeler.\n\nNotes\n\nThis class should not be instantiated directly. Use\nmodeler.unsupported instead."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/UnsupportedCommands.html#overview","title":"UnsupportedCommands > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_export_id\n\nSet the persistent id for the moniker.\n\nset_multiple_export_ids\n\nSet multiple persistent ids for the monikers.\n\nget_body_occurrences_from_import_id\n\nGet all body occurrences whose master has the given import id.\n\nget_face_occurrences_from_import_id\n\nGet all face occurrences whose master has the given import id.\n\nget_edge_occurrences_from_import_id\n\nGet all edge occurrences whose master has the given import id."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/UnsupportedCommands.html#import-detail","title":"UnsupportedCommands > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/UnsupportedCommands.html#method-detail","title":"UnsupportedCommands > Method detail","text":"Method detail\n\n\n\nUnsupportedCommands.set_export_id(moniker: str, id_type: PersistentIdType, value: str) -> None\n\nSet the persistent id for the moniker.\n\nParameters\n\nmoniker\n\npython:str\n\nMoniker to set the id for.\n\nid_type\n\nPersistentIdType\n\nType of id.\n\nvalue\n\npython:str\n\nId to set.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nUnsupportedCommands.set_multiple_export_ids(export_data: list[ExportIdData]) -> None\n\nSet multiple persistent ids for the monikers.\n\nParameters\n\nexport_data\n\npython:list[ExportIdData]\n\nList of export data containing monikers, id types, and values.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nUnsupportedCommands.get_body_occurrences_from_import_id(import_id: str, id_type: PersistentIdType) -> list[ansys.geometry.core.designer.body.Body]\n\nGet all body occurrences whose master has the given import id.\n\nParameters\n\nimport_id\n\npython:str\n\nPersistent id\n\nid_type\n\nPersistentIdType\n\nType of id\n\nReturns\n\npython:list[Body]\n\nList of body occurrences.\n\n\n\nUnsupportedCommands.get_face_occurrences_from_import_id(import_id: str, id_type: PersistentIdType) -> list[ansys.geometry.core.designer.face.Face]\n\nGet all face occurrences whose master has the given import id.\n\nParameters\n\nimport_id\n\npython:str\n\nPersistent id.\n\nid_type\n\nPersistentIdType\n\nType of id.\n\nReturns\n\npython:list[Face]\n\nList of face occurrences.\n\n\n\nUnsupportedCommands.get_edge_occurrences_from_import_id(import_id: str, id_type: PersistentIdType) -> list[ansys.geometry.core.designer.edge.Edge]\n\nGet all edge occurrences whose master has the given import id.\n\nParameters\n\nimport_id\n\npython:str\n\nPersistent id.\n\nid_type\n\nPersistentIdType\n\nType of id.\n\nReturns\n\npython:list[Edge]\n\nList of edge occurrences."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/index.html#the-componentspy-module","title":"The components.py module","text":"The components.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/index.html#summary","title":"The components.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCComponentsServiceV1\n\nComponents service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/index.html#description","title":"The components.py module > Description","text":"Description\n\nModule containing the components service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/index.html#the-partpy-module","title":"The part.py module","text":"The part.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/index.html#summary","title":"The part.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPart\n\nRepresents a part master.\n\nMasterComponent\n\nRepresents a part occurrence.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/index.html#description","title":"The part.py module > Description","text":"Description\n\nModule providing fundamental data of an assembly."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/index.html#the-pointspy-module","title":"The points.py module","text":"The points.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/index.html#summary","title":"The points.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPointsServiceV1\n\nPoints service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/index.html#description","title":"The points.py module > Description","text":"Description\n\nModule containing the points service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/TangentCondition.html#tangentcondition","title":"TangentCondition","text":"TangentCondition\n\n\n\nclass ansys.geometry.core.designer.mating_conditions.TangentCondition\n\nBases: MatingCondition\n\nTangentCondition dataclass."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/TangentCondition.html#overview","title":"TangentCondition > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\noffset\n\n\n\nis_reversed\n\n\n\nis_valid\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/TangentCondition.html#import-detail","title":"TangentCondition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/TangentCondition.html#attribute-detail","title":"TangentCondition > Attribute detail","text":"Attribute detail\n\n\n\nTangentCondition.offset: float\n\n\n\n\n\nTangentCondition.is_reversed: bool\n\n\n\n\n\nTangentCondition.is_valid: bool\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/GeometryIssue.html#geometryissue","title":"GeometryIssue","text":"GeometryIssue\n\n\n\nclass ansys.geometry.core.tools.check_geometry.GeometryIssue(message_type: str, message_id: str, message: str, edges: list[str], faces: list[str])\n\nProvides return message for the repair tool methods."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/GeometryIssue.html#overview","title":"GeometryIssue > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage_type\n\nThe type of the message (warning, error, info).\n\nmessage_id\n\nThe identifier for the message.\n\nmessage\n\nThe content of the message.\n\nedges\n\nThe List of edges (if any) that are part of the issue.\n\nfaces\n\nThe List of faces (if any) that are part of the issue."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/GeometryIssue.html#import-detail","title":"GeometryIssue > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/GeometryIssue.html#property-detail","title":"GeometryIssue > Property detail","text":"Property detail\n\n\n\nproperty GeometryIssue.message_type: str\n\nThe type of the message (warning, error, info).\n\n\n\nproperty GeometryIssue.message_id: str\n\nThe identifier for the message.\n\n\n\nproperty GeometryIssue.message: str\n\nThe content of the message.\n\n\n\nproperty GeometryIssue.edges: list[str]\n\nThe List of edges (if any) that are part of the issue.\n\n\n\nproperty GeometryIssue.faces: list[str]\n\nThe List of faces (if any) that are part of the issue."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#windows-docker-container","title":"Windows Docker container","text":"Windows Docker container\n\nContents\n\nWindows Docker container\n\nDocker for Windows containers\n\nBuild or install the Geometry service image\n\nGitHub Container Registry\n\nBuild the Geometry service Windows container\n\nPrerequisites\n\nBuild from available Ansys installation\n\nBuild the Docker image from available binaries\n\nLaunch the Geometry service\n\nEnvironment variables\n\nGeometry service launcher\n\nConnect to the Geometry service\n\n"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#docker-for-windows-containers","title":"Windows Docker container > Docker for Windows containers","text":"Docker for Windows containers\n\nTo run the Windows Docker container for the Geometry service, ensure that you follow\nthese steps when installing Docker:\n\nInstall Docker Desktop.\n\nWhen prompted for Use WSL2 instead of Hyper-V (recommended), clear this checkbox.\nHyper-V must be enabled to run Windows Docker containers.\n\nOnce the installation finishes, restart your machine and start Docker Desktop.\n\nOn the Windows taskbar, go to the Show hidden icons section, right-click in the Docker\nDesktop app, and select Switch to Windows containers.\n\nNow that your Docker engine supports running Windows Docker containers, you can build or install\nthe PyAnsys Geometry image."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#build-or-install-the-geometry-service-image","title":"Windows Docker container > Build or install the Geometry service image","text":"Build or install the Geometry service image\n\nThere are two options for installing the PyAnsys Geometry image:\n\nDownload it from the GitHub Container Registry.\n\nBuild the Geometry service Windows container.\n\n"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#github-container-registry","title":"Windows Docker container > GitHub Container Registry","text":"GitHub Container Registry\n\nThis option is only available for users with write access to the repository or\nwho are members of the Ansys organization.\n\nOnce Docker is installed on your machine, follow these steps to download the Windows Docker\ncontainer for the Geometry service and install this image.\n\nUsing your GitHub credentials, download the Docker image from the PyAnsys Geometry repository\non GitHub.\n\nUse a GitHub personal access token with permission for reading packages to authorize Docker\nto access this repository. For more information, see Managing your personal access tokens\nin the GitHub documentation.\n\nSave the token to a file with this command:\n\nAuthorize Docker to access the repository and run the commands for your OS. To see these commands, click the tab for your OS.\n\nPowershell\n\n\n\nWindows CMD\n\n\n\nPull the Geometry service locally using Docker with a command like this:\n\n"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#build-the-geometry-service-windows-container","title":"Windows Docker container > Build the Geometry service Windows container","text":"Build the Geometry service Windows container\n\nThe Geometry service Docker containers can be easily built by following\nthese steps.\n\nInside the repository’s docker folder, there are two Dockerfile files:\n\nlinux/Dockerfile: Builds the Linux-based Docker image.\n\nwindows/Dockerfile: Builds the Windows-based Docker image.\n\nDepending on the characteristics of the Docker engine installed on your\nmachine, either one or the other has to be built.\n\nThis guide focuses on building the windows/Dockerfile image.\n\nThere are two build modes:\n\nBuild from available Ansys installation: This mode builds the Docker image\nusing the Ansys installation available in the machine where the Docker image\nis being built.\n\nBuild from available binaries: This mode builds the Docker image using\nthe binaries available in the ansys/pyansys-geometry-binaries repository.\nIf you do not have access to this repository, you can only use the first mode.\n\nOnly Ansys employees with access to\nhttps://github.com/ansys/pyansys-geometry-binaries can download these binaries."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#prerequisites","title":"Windows Docker container > Prerequisites","text":"Prerequisites\n\nEnsure that Docker is installed in your machine.\nIf you do not have Docker available, see\nDocker for Windows containers.\n\n"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#build-from-available-ansys-installation","title":"Windows Docker container > Build from available Ansys installation","text":"Build from available Ansys installation\n\nTo build your own image based on your own Ansys installation, follow these instructions:\n\nDownload the Python Docker build script.\n\nExecute the script with the following command (no specific location needed):\n\nCheck that the image has been created successfully. You should see output similar\nto this:"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#build-the-docker-image-from-available-binaries","title":"Windows Docker container > Build the Docker image from available binaries","text":"Build the Docker image from available binaries\n\nPrior to building your image, follow these steps:\n\nDownload the latest Windows Dockerfile.\n\nDownload the latest release artifacts for the Windows\nDocker container (ZIP file) for your version.\n\nOnly Ansys employees with access to\nhttps://github.com/ansys/pyansys-geometry-binaries can download these binaries.\n\nMove this ZIP file to the location of the Windows Dockerfile previously downloaded.\n\nTo build your image, follow these instructions:\n\nNavigate to the folder where the ZIP file and Dockerfile are located.\n\nRun this Docker command:\n\nCheck that the image has been created successfully. You should see output similar\nto this:"},{"objectID":"Home","href":"getting_started/docker/windows_container.html#launch-the-geometry-service","title":"Windows Docker container > Launch the Geometry service","text":"Launch the Geometry service\n\nThere are methods for launching the Geometry service:\n\nYou can use the PyAnsys Geometry launcher.\n\nYou can manually launch the Geometry service."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#environment-variables","title":"Windows Docker container > Environment variables","text":"Environment variables\n\nThe Geometry service requires this mandatory environment variable for its use:\n\nLICENSE_SERVER: License server (IP address or DNS) that the Geometry service is to\nconnect to. For example, 127.0.0.1.\n\nYou can also specify other optional environment variables:\n\nLOG_LEVEL: Sets the Geometry service logging level. The default is 2, in which case\nthe logging level is WARNING.\n\nHere are some terms to keep in mind:\n\nhost: Machine that hosts the Geometry service. It is typically on localhost, but if\nyou are deploying the service on a remote machine, you must pass in this host machine’s\nIP address when connecting. By default, PyAnsys Geometry assumes it is on localhost.\n\nport: Port that exposes the Geometry service on the host machine. Its\nvalue is assumed to be 50051, but users can deploy the service on preferred ports.\n\nPrior to using the PyAnsys Geometry launcher to launch the Geometry service, you must define\ngeneral environment variables required for your OS. You do not need to define these\nenvironment variables prior to manually launching the Geometry service.\n\nUsing PyAnsys Geometry launcher\n\nDefine the following general environment variables prior to using the PyAnsys Geometry\nlauncher. Click the tab for your OS to see the appropriate commands.\n\nLinux/Mac\n\n\n\nPowershell\n\n\n\nWindows CMD\n\n\n\nWhen running a Windows Docker container, certain high-value ports might be restricted\nfrom its use. This means that the port exposed by the container has to be set\nto lower values. You should change the value of ANSRV_GEO_PORT\nto use a port such as 700, instead of 50051.\n\nManual launch\n\nYou do not need to define general environment variables prior to manually launching\nthe Geometry service. They are directly passed to the Docker container itself."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#geometry-service-launcher","title":"Windows Docker container > Geometry service launcher","text":"Geometry service launcher\n\nAs mentioned earlier, you can launch the Geometry service locally in two different ways.\nTo see the commands for each method, click the following tabs.\n\nUsing PyAnsys Geometry launcher\n\nThis method directly launches the Geometry service and\nprovides a Modeler object.\n\nThe launch_modeler() method launches the Geometry service under the default\nconditions. For more configurability, use the launch_docker_modeler() method.\n\nManual launch\n\nThis method requires that you manually launch the Geometry service. Remember to pass\nin the different environment variables that are needed. Afterwards, see the next section\nto understand how to connect to this service instance from PyAnsys Geometry.\n\nLinux/Mac\n\n\n\nPowershell\n\n\n\nWindows CMD\n\n\n\nWhen running a Windows Docker container, certain high-value ports might be restricted\nfrom its use. This means that the port exposed by the container has to be set\nto lower values. You should change the value of -p 50051:50051\nto use a port such as -p 700:50051."},{"objectID":"Home","href":"getting_started/docker/windows_container.html#connect-to-the-geometry-service","title":"Windows Docker container > Connect to the Geometry service","text":"Connect to the Geometry service\n\nAfter the Geometry service is launched, connect to it with these commands:\n\nBy default, the Modeler instance connects to 127.0.0.1 (\"localhost\") on\nport 50051. You can change this by modifying the host and port\nparameters of the Modeler object, but note that you must also modify\nyour docker run command by changing the <HOST-PORT>-50051 argument.\n\nThe following tabs show the commands that set the environment variables and Modeler\nfunction.\n\nWhen running a Windows Docker container, certain high-value ports might be restricted\nfrom its use. This means that the port exposed by the container has to be set\nto lower values. You should change the value of ANSRV_GEO_PORT\nto use a port such as 700, instead of 50051.\n\nEnvironment variables\n\nLinux/Mac\n\n\n\nPowershell\n\n\n\nWindows CMD\n\n\n\nModeler function\n\n\n\nGo to Docker containers\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/index.html#the-beamspy-module","title":"The beams.py module","text":"The beams.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/index.html#summary","title":"The beams.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBeamsServiceV0\n\nBeams service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/index.html#description","title":"The beams.py module > Description","text":"Description\n\nModule containing the beams service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/index.html#the-assembly_controlspy-module","title":"The assembly_controls.py module","text":"The assembly_controls.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/index.html#summary","title":"The assembly_controls.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAssemblyControlsServiceV0\n\nAssembly controls service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/index.html#description","title":"The assembly_controls.py module > Description","text":"Description\n\nModule containing the assembly controls service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryCustomAdapter.html#pygeometrycustomadapter","title":"PyGeometryCustomAdapter","text":"PyGeometryCustomAdapter\n\n\n\nclass ansys.geometry.core.logger.PyGeometryCustomAdapter(logger, extra=None)\n\nBases: logging.LoggerAdapter\n\nKeeps the reference to the Geometry service instance name dynamic.\n\nIf you use the standard approach, which is supplying extra input\nto the logger, you must input Geometry service instances each time\nyou do a log.\n\nUsing adapters, you only need to specify the Geometry service\ninstance that you are referring to once."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryCustomAdapter.html#overview","title":"PyGeometryCustomAdapter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nprocess\n\nProcess the logging message and keyword arguments passed in to\n\nlog_to_file\n\nAdd a file handler to the logger.\n\nlog_to_stdout\n\nAdd a standard output handler to the logger.\n\nsetLevel\n\nChange the log level of the object and the attached handlers.\n\nAttributes\n\n\n\n\n\nlevel\n\n\n\nfile_handler\n\n\n\nstdout_handler\n\n\n\nlogger\n\n\n\nstd_out_handler\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryCustomAdapter.html#import-detail","title":"PyGeometryCustomAdapter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryCustomAdapter.html#attribute-detail","title":"PyGeometryCustomAdapter > Attribute detail","text":"Attribute detail\n\n\n\nPyGeometryCustomAdapter.level = None\n\n\n\n\n\nPyGeometryCustomAdapter.file_handler = None\n\n\n\n\n\nPyGeometryCustomAdapter.stdout_handler = None\n\n\n\n\n\nPyGeometryCustomAdapter.logger\n\n\n\n\n\nPyGeometryCustomAdapter.std_out_handler\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryCustomAdapter.html#method-detail","title":"PyGeometryCustomAdapter > Method detail","text":"Method detail\n\n\n\nPyGeometryCustomAdapter.process(msg, kwargs)\n\nProcess the logging message and keyword arguments passed in to\na logging call to insert contextual information. You can either\nmanipulate the message itself, the keyword args or both. Return\nthe message and kwargs modified (or not) to suit your needs.\n\nNormally, you’ll only need to override this one method in a\nLoggerAdapter subclass for your specific needs.\n\n\n\nPyGeometryCustomAdapter.log_to_file(filename: str = FILE_NAME, level: int = LOG_LEVEL)\n\nAdd a file handler to the logger.\n\nParameters\n\nfilename\n\npython:str, default: “pyansys-geometry.log”\n\nName of the file to write log messages to.\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\n\n\nPyGeometryCustomAdapter.log_to_stdout(level=LOG_LEVEL)\n\nAdd a standard output handler to the logger.\n\nParameters\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\n\n\nPyGeometryCustomAdapter.setLevel(level='DEBUG')\n\nChange the log level of the object and the attached handlers.\n\nParameters\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/GeometryExitedError.html#geometryexitederror","title":"GeometryExitedError","text":"GeometryExitedError\n\n\n\nexception ansys.geometry.core.errors.GeometryExitedError(msg='Geometry service has exited.')\n\nBases: RuntimeError\n\nProvides error message to raise when Geometry service has exited.\n\nParameters\n\nmsg\n\npython:str, default: “Geometry service has exited.”\n\nMessage to raise."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/GeometryExitedError.html#import-detail","title":"GeometryExitedError > Import detail","text":"Import detail"},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#sketching-dynamic-sketch-plane","title":"Examples > Sketching: Dynamic sketch plane","text":"Sketching: Dynamic sketch plane\n\nThe sketch is a lightweight, two-dimensional modeler driven primarily by client-side execution.\n\nAt any point, the current state of a sketch can be used for operations such as extruding a body, projecting a profile, or imprinting curves.\n\nThe sketch is designed as an effective functional-style API with all operations receiving 2D configurations.\n\nFor easy reuse of sketches across different regions of your design, you can move a sketch around the global coordinate system by modifying the plane defining the current sketch location.\n\nThis example creates a multi-layer PCB from many extrusions of the same sketch, creating unique design bodies for each layer."},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#perform-required-imports","title":"Examples > Sketching: Dynamic sketch plane > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#define-sketch-profile","title":"Examples > Sketching: Dynamic sketch plane > Define sketch profile","text":"Define sketch profile\n\nYou can create, modify, and plot Sketch instances independent of supporting Geometry service instances.\n\nTo define the sketch profile for the PCB, you create a sketch outline of individual Segment and Arc objects with two circular through-hole attachment points added within the profile boundary to maintain a single, closed sketch face.\n\nCreate a single Sketch instance to use for multiple design operations.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#instantiate-the-modeler","title":"Examples > Sketching: Dynamic sketch plane > Instantiate the modeler","text":"Instantiate the modeler\n\nLaunch a modeling service and connect to it.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#extrude-multiple-bodies","title":"Examples > Sketching: Dynamic sketch plane > Extrude multiple bodies","text":"Extrude multiple bodies\n\nUse the single sketch profile to extrude the board profile at multiple Z-offsets. Create a named selection from the resulting list of layer bodies.\n\nNote that translating the sketch plane prior to extrusion is more effective (10 server calls) than creating a design body on the supporting server and then translating the body on the server (20 server calls).\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/02_sketching/dynamic_sketch_plane.html#close-the-modeler","title":"Examples > Sketching: Dynamic sketch plane > Close the modeler","text":"Close the modeler\n\nClose the modeler to release the resources.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/index.html#the-facespy-module","title":"The faces.py module","text":"The faces.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/index.html#summary","title":"The faces.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCFacesServiceV0\n\nFaces service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/index.html#description","title":"The faces.py module > Description","text":"Description\n\nModule containing the faces service implementation for v0."},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#applied-develop-an-external-aerodynamic-simulation-model-for-fluent-analysis","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis","text":"Applied: Develop an external aerodynamic simulation model for Fluent analysis\n\nThe Ahmed body is a simplified car model used to study airflow around vehicles. The wake (turbulent flow behind the body) depends on the slant angle:\n\nLess than 12 degrees: The airflow stays attached to the slant, creating low drag and a mostly two-dimensional flow.\n\n12 to 30 degrees: The flow becomes three-dimensional with strong c-pillar vortices, peaking at 30 degrees. This increases drag due to low-pressure areas on the rear surfaces.\n\nMore than 30 degrees: The flow fully separates from the slant, reducing drag and weakening the c-pillar vortices.\n\nThis example creates an Ahmed body with a slant angle of 20 degrees. It consists of these steps:\n\nLaunch PyAnsys Geometry and define the default units.\n\nCreate sketches for the Ahmed body, enclosure, and BOI (Body of Influence).\n\nGenerate solid bodies from the sketches.\n\nPerform Boolean operations for region extraction.\n\nGroup faces and define a named selection.\n\nExport model as a CAD file.\n\nClose session."},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-function-for-sorting-planar-face-pairs-along-any-axis","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define function for sorting planar face pairs along any axis","text":"Define function for sorting planar face pairs along any axis\n\nThis function is used to sort the planar faces along any of the coordinate axis. This is used primarily for sorting the faces to define the named selections.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-function-for-calculating-the-vertical-and-horizontal-distances-based-on-the-slant-angle","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define function for calculating the vertical and horizontal distances based on the slant angle","text":"Define function for calculating the vertical and horizontal distances based on the slant angle\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#launch-pyansys-geometry-and-define-the-default-units","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Launch PyAnsys geometry and define the default units","text":"Launch PyAnsys geometry and define the default units\n\nBefore you start creating the Ahmed body, you must import the necessary modules to create the model using PyAnsys Geometry. It’s also a good practice to define the units before initiating the development of the sketch.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#create-sketches-for-the-ahmed-body-enclosure-and-boi","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Create sketches for the Ahmed body, enclosure, and BOI","text":"Create sketches for the Ahmed body, enclosure, and BOI\n\nDefine the appropriate sketch planes parallel to the y-z and x-z planes, passing through the origin (namely sketch_plane and sketch_plane_2 respectively)."},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-the-sketch-planes","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define the sketch planes","text":"Define the sketch planes\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-the-ahmed-body","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define the Ahmed body","text":"Define the Ahmed body\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-the-enclosure","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define the enclosure","text":"Define the enclosure\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#define-the-boi","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Define the BOI","text":"Define the BOI\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#generate-solid-bodies-from-the-sketches","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Generate solid bodies from the sketches","text":"Generate solid bodies from the sketches\n\nFrom the 2D sketches, generate 3D models by extruding the sketch. First create the design body (namely ahmed_model, which is the root part. A component named Component1 is created under the root part. All the bodies generated as a part of sketch extrusion would be placed within Component1.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#perform-boolean-operations-for-region-extraction","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Perform Boolean operations for region extraction","text":"Perform Boolean operations for region extraction\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#group-faces-and-define-named-selection","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Group faces and define named selection","text":"Group faces and define named selection\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#export-model-as-a-pmdb-file","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Export model as a PMDB file","text":"Export model as a PMDB file\n\nExport the geometry into a Fluent-compatible format. The following code exports the geometry into a PMDB file, which retains the named selections.\n\n\n\n\n\n\n\n\n\nYou can import the exported PMDB file into Fluent to set up the mesh and perform the simulation. For an example of how to set up the mesh and boundary conditions in Fluent, see the Ahmed Body External Aerodynamics Simulation example in the Fluent documentation."},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#close-session","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > Close session","text":"Close session\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/03_ahmed_body_fluent.html#references","title":"Examples > Applied: Develop an external aerodynamic simulation model for Fluent analysis > References","text":"References\n\n[1] S.R. Ahmed, G. Ramm, Some Salient Features of the Time-Averaged Ground Vehicle Wake,SAE-Paper 840300,1984"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/index.html#the-repair_toolspy-module","title":"The repair_tools.py module","text":"The repair_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/index.html#summary","title":"The repair_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCRepairToolsServiceV1\n\nRepair tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/repair_tools/index.html#description","title":"The repair_tools.py module > Description","text":"Description\n\nModule containing the repair tools service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/MissingFaceProblemAreas.html#missingfaceproblemareas","title":"MissingFaceProblemAreas","text":"MissingFaceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.MissingFaceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nBases: ProblemArea\n\nProvides missing face problem area definition.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nedges\n\npython:list[Edge]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/MissingFaceProblemAreas.html#overview","title":"MissingFaceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nedges\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/MissingFaceProblemAreas.html#import-detail","title":"MissingFaceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/MissingFaceProblemAreas.html#property-detail","title":"MissingFaceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty MissingFaceProblemAreas.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/MissingFaceProblemAreas.html#method-detail","title":"MissingFaceProblemAreas > Method detail","text":"Method detail\n\n\n\nMissingFaceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/index.html#the-commandspy-module","title":"The commands.py module","text":"The commands.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/index.html#summary","title":"The commands.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCommandsServiceV0\n\nCommands service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/index.html#description","title":"The commands.py module > Description","text":"Description\n\nModule containing the commands service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/index.html#the-connection-package","title":"The connection package","text":"The connection package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/index.html#summary","title":"The connection package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nbackend\n\nModule providing definitions for the backend types.\n\nclient\n\nModule providing a wrapped abstraction of the gRPC stubs.\n\ndefaults\n\nModule providing default connection parameters.\n\ndocker_instance\n\nModule for connecting to a local Geometry Service Docker container.\n\nlauncher\n\nModule for connecting to instances of the Geometry service.\n\nproduct_instance\n\nModule containing the ProductInstance class.\n\nvalidate\n\nModule to perform a connection validation check.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/index.html#description","title":"The connection package > Description","text":"Description\n\nPyAnsys Geometry connection subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/index.html#the-bodiespy-module","title":"The bodies.py module","text":"The bodies.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/index.html#summary","title":"The bodies.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBodyService\n\nBody service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/bodies/index.html#description","title":"The bodies.py module > Description","text":"Description\n\nModule containing the bodies service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryFormatter.html#pygeometryformatter","title":"PyGeometryFormatter","text":"PyGeometryFormatter\n\n\n\nclass ansys.geometry.core.logger.PyGeometryFormatter(fmt=STDOUT_MSG_FORMAT, datefmt=None, style='%', validate=True, defaults=None)\n\nBases: logging.Formatter\n\nProvides a Formatter class for overwriting default format styles."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryFormatter.html#import-detail","title":"PyGeometryFormatter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/GRPCPrepareToolsServiceV1.html#grpcpreparetoolsservicev1","title":"GRPCPrepareToolsServiceV1","text":"GRPCPrepareToolsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.prepare_tools.GRPCPrepareToolsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.prepare_tools.GRPCPrepareToolsService\n\nPrepare tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nPrepare Tools service. It is specifically designed for the v1 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/GRPCPrepareToolsServiceV1.html#overview","title":"GRPCPrepareToolsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nextract_volume_from_faces\n\nExtract a volume from input faces.\n\nextract_volume_from_edge_loops\n\nExtract a volume from input edge loop.\n\nremove_rounds\n\nRemove rounds from geometry.\n\nshare_topology\n\nShare topology between the given bodies.\n\nenhanced_share_topology\n\nShare topology between the given bodies.\n\nfind_logos\n\nDetect logos in geometry.\n\nfind_and_remove_logos\n\nDetect and remove logos in geometry.\n\nremove_logo\n\nRemove logos in geometry.\n\ndetect_helixes\n\nDetect helixes in geometry.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/GRPCPrepareToolsServiceV1.html#import-detail","title":"GRPCPrepareToolsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/GRPCPrepareToolsServiceV1.html#attribute-detail","title":"GRPCPrepareToolsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPrepareToolsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/prepare_tools/GRPCPrepareToolsServiceV1.html#method-detail","title":"GRPCPrepareToolsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.extract_volume_from_faces(**kwargs) -> dict\n\nExtract a volume from input faces.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.extract_volume_from_edge_loops(**kwargs) -> dict\n\nExtract a volume from input edge loop.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.remove_rounds(**kwargs) -> dict\n\nRemove rounds from geometry.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.enhanced_share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.find_logos(**kwargs) -> dict\n\nDetect logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.find_and_remove_logos(**kwargs) -> dict\n\nDetect and remove logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.remove_logo(**kwargs) -> dict\n\nRemove logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsServiceV1.detect_helixes(**kwargs) -> dict\n\nDetect helixes in geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/DefaultUnitsClass.html#defaultunitsclass","title":"DefaultUnitsClass","text":"DefaultUnitsClass\n\n\n\nclass ansys.geometry.core.misc.measurements.DefaultUnitsClass\n\nProvides default units for PyAnsys Geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/DefaultUnitsClass.html#overview","title":"DefaultUnitsClass > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nLENGTH\n\nDefault length unit for PyAnsys Geometry.\n\nANGLE\n\nDefault angle unit for PyAnsys Geometry.\n\nAREA\n\nDefault area unit for PyAnsys Geometry.\n\nSERVER_LENGTH\n\nDefault length unit for gRPC messages.\n\nSERVER_AREA\n\nDefault area unit for gRPC messages.\n\nSERVER_VOLUME\n\nDefault volume unit for gRPC messages.\n\nSERVER_ANGLE\n\nDefault angle unit for gRPC messages."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/DefaultUnitsClass.html#import-detail","title":"DefaultUnitsClass > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/DefaultUnitsClass.html#property-detail","title":"DefaultUnitsClass > Property detail","text":"Property detail\n\n\n\nproperty DefaultUnitsClass.LENGTH: pint.Unit\n\nDefault length unit for PyAnsys Geometry.\n\n\n\nproperty DefaultUnitsClass.ANGLE: pint.Unit\n\nDefault angle unit for PyAnsys Geometry.\n\n\n\nproperty DefaultUnitsClass.AREA: pint.Unit\n\nDefault area unit for PyAnsys Geometry.\n\n\n\nproperty DefaultUnitsClass.SERVER_LENGTH: pint.Unit\n\nDefault length unit for gRPC messages.\n\nNotes\n\nThe default units on the server side are not modifiable yet.\n\n\n\nproperty DefaultUnitsClass.SERVER_AREA: pint.Unit\n\nDefault area unit for gRPC messages.\n\nNotes\n\nThe default units on the server side are not modifiable yet.\n\n\n\nproperty DefaultUnitsClass.SERVER_VOLUME: pint.Unit\n\nDefault volume unit for gRPC messages.\n\nNotes\n\nThe default units on the server side are not modifiable yet.\n\n\n\nproperty DefaultUnitsClass.SERVER_ANGLE: pint.Unit\n\nDefault angle unit for gRPC messages.\n\nNotes\n\nThe default units on the server side are not modifiable yet."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/GRPCDbuApplicationService.html#grpcdbuapplicationservice","title":"GRPCDbuApplicationService","text":"GRPCDbuApplicationService\n\n\n\nclass ansys.geometry.core._grpc._services.base.dbuapplication.GRPCDbuApplicationService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nDBU Application service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/GRPCDbuApplicationService.html#overview","title":"GRPCDbuApplicationService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nrun_script\n\nRun a Scripting API script."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/GRPCDbuApplicationService.html#import-detail","title":"GRPCDbuApplicationService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/dbuapplication/GRPCDbuApplicationService.html#method-detail","title":"GRPCDbuApplicationService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDbuApplicationService.run_script(**kwargs) -> dict\n\nRun a Scripting API script."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/ImportOptions.html#importoptions","title":"ImportOptions","text":"ImportOptions\n\n\n\nclass ansys.geometry.core.misc.options.ImportOptions\n\nImport options when opening a file.\n\nParameters\n\ncleanup_bodies\n\nbool = python:False\n\nSimplify geometry and clean up topology.\n\nimport_coordinate_systems\n\nbool = python:False\n\nImport coordinate systems.\n\nimport_curves\n\nbool = python:False\n\nImport curves.\n\nimport_hidden_components_and_geometry\n\nbool = python:False\n\nImport hidden components and geometry.\n\nimport_names\n\nbool = python:False\n\nImport names of bodies and curves.\n\nimport_planes\n\nbool = python:False\n\nImport planes.\n\nimport_points\n\nbool = python:False\n\nImport points.\n\nimport_named_selections\n\nbool = python:True\n\nImport the named selections associated with the root component being inserted."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/ImportOptions.html#overview","title":"ImportOptions > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nto_dict\n\nProvide the dictionary representation of the ImportOptions class.\n\nAttributes\n\n\n\n\n\ncleanup_bodies\n\n\n\nimport_coordinate_systems\n\n\n\nimport_curves\n\n\n\nimport_hidden_components_and_geometry\n\n\n\nimport_names\n\n\n\nimport_planes\n\n\n\nimport_points\n\n\n\nimport_named_selections\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/ImportOptions.html#import-detail","title":"ImportOptions > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/ImportOptions.html#attribute-detail","title":"ImportOptions > Attribute detail","text":"Attribute detail\n\n\n\nImportOptions.cleanup_bodies: bool = False\n\n\n\n\n\nImportOptions.import_coordinate_systems: bool = False\n\n\n\n\n\nImportOptions.import_curves: bool = False\n\n\n\n\n\nImportOptions.import_hidden_components_and_geometry: bool = False\n\n\n\n\n\nImportOptions.import_names: bool = False\n\n\n\n\n\nImportOptions.import_planes: bool = False\n\n\n\n\n\nImportOptions.import_points: bool = False\n\n\n\n\n\nImportOptions.import_named_selections: bool = True\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/ImportOptions.html#method-detail","title":"ImportOptions > Method detail","text":"Method detail\n\n\n\nImportOptions.to_dict()\n\nProvide the dictionary representation of the ImportOptions class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/Line.html#line","title":"Line","text":"Line\n\n\n\nclass ansys.geometry.core.shapes.curves.line.Line(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, direction: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D)\n\nBases: ansys.geometry.core.shapes.curves.curve.Curve\n\nProvides 3D line representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the line.\n\ndirection\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nDirection of the line."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/Line.html#overview","title":"Line > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the curve.\n\ncontains_point\n\nCheck a point is contained by the curve.\n\nMethods\n\n\n\n\n\nevaluate\n\nEvaluate the line at a given parameter.\n\ntransformed_copy\n\nCreate a transformed copy of the line from a transformation matrix.\n\nproject_point\n\nProject a point onto the line and evaluate the line.\n\nis_coincident_line\n\nDetermine if the line is coincident with another line.\n\nis_opposite_line\n\nDetermine if the line is opposite another line.\n\nparameterization\n\nGet the parametrization of the line.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the line.\n\ndirection\n\nDirection of the line.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Line class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/Line.html#import-detail","title":"Line > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/Line.html#property-detail","title":"Line > Property detail","text":"Property detail\n\n\n\nproperty Line.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the line.\n\n\n\nproperty Line.direction: ansys.geometry.core.math.vector.UnitVector3D\n\nDirection of the line."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/Line.html#method-detail","title":"Line > Method detail","text":"Method detail\n\n\n\nLine.__eq__(other: object) -> bool\n\nEquals operator for the Line class.\n\n\n\nLine.evaluate(parameter: float) -> LineEvaluation\n\nEvaluate the line at a given parameter.\n\nParameters\n\nparameter\n\nReal\n\nParameter to evaluate the line at.\n\nReturns\n\nLineEvaluation\n\nResulting evaluation.\n\n\n\nLine.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Line\n\nCreate a transformed copy of the line from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4X4 transformation matrix to apply to the line.\n\nReturns\n\nLine\n\nNew line that is the transformed copy of the original line.\n\n\n\nLine.project_point(point: ansys.geometry.core.math.point.Point3D) -> LineEvaluation\n\nProject a point onto the line and evaluate the line.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the line.\n\nReturns\n\nLineEvaluation\n\nResulting evaluation.\n\n\n\nLine.is_coincident_line(other: Line) -> bool\n\nDetermine if the line is coincident with another line.\n\nParameters\n\nother\n\nLine\n\nLine to determine coincidence with.\n\nReturns\n\nbool\n\nTrue if the line is coincident with another line, False otherwise.\n\n\n\nLine.is_opposite_line(other: Line) -> bool\n\nDetermine if the line is opposite another line.\n\nParameters\n\nother\n\nLine\n\nLine to determine opposition with.\n\nReturns\n\nbool\n\nTrue if the line is opposite to another line.\n\n\n\nLine.parameterization() -> ansys.geometry.core.shapes.parameterization.Parameterization\n\nGet the parametrization of the line.\n\nThe parameter of a line specifies the distance from the origin in the\ndirection of direction.\n\nReturns\n\nParameterization\n\nInformation about how the line is parameterized.\n\n\n\nabstractmethod Line.contains_param(param: ansys.geometry.core.typing.Real) -> bool\n\nCheck a parameter is within the parametric range of the curve.\n\n\n\nabstractmethod Line.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the curve.\n\nThe point can either lie within the curve or on its boundary."},{"objectID":"Examples","href":"examples/03_modeling/chamfer.html#modeling-chamfer-edges-and-faces","title":"Examples > Modeling: Chamfer edges and faces","text":"Modeling: Chamfer edges and faces\n\nA chamfer is an angled cut on an edge. Chamfers can be created using the Modeler.geometry_commands module."},{"objectID":"Examples","href":"examples/03_modeling/chamfer.html#create-a-block","title":"Examples > Modeling: Chamfer edges and faces > Create a block","text":"Create a block\n\nLaunch the modeler and create a block.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/chamfer.html#chamfer-edges","title":"Examples > Modeling: Chamfer edges and faces > Chamfer edges","text":"Chamfer edges\n\nCreate a uniform chamfer on all edges of the block.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/chamfer.html#chamfer-faces","title":"Examples > Modeling: Chamfer edges and faces > Chamfer faces","text":"Chamfer faces\n\nThe chamfer of a face can also be modified. Create a chamfer on a single edge and then modify the chamfer distance value by providing the newly created face that represents the chamfer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/chamfer.html#close-session","title":"Examples > Modeling: Chamfer edges and faces > Close session","text":"Close session\n\nWhen you finish interacting with your modeling service, you should close the active server session. This frees resources wherever the service is running.\n\nClose the server session.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/ShowDesignPoints.html#showdesignpoints","title":"ShowDesignPoints","text":"ShowDesignPoints\n\n\n\nclass ansys.geometry.core.plotting.widgets.show_design_point.ShowDesignPoints(plotter_helper: ansys.tools.visualization_interface.backends.pyvista.PyVistaBackend)\n\nBases: ansys.tools.visualization_interface.backends.pyvista.widgets.PlotterWidget\n\nProvides the a button to hide/show DesignPoint objects in the plotter.\n\nParameters\n\nplotter_helper\n\nGeometryPlotter\n\nProvides the plotter to add the button to."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/ShowDesignPoints.html#overview","title":"ShowDesignPoints > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncallback\n\nRemove or add the DesignPoint actors upon click.\n\nupdate\n\nDefine the configuration and representation of the button widget.\n\nAttributes\n\n\n\n\n\nplotter_helper\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/ShowDesignPoints.html#import-detail","title":"ShowDesignPoints > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/ShowDesignPoints.html#attribute-detail","title":"ShowDesignPoints > Attribute detail","text":"Attribute detail\n\n\n\nShowDesignPoints.plotter_helper\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/ShowDesignPoints.html#method-detail","title":"ShowDesignPoints > Method detail","text":"Method detail\n\n\n\nShowDesignPoints.callback(state: bool) -> None\n\nRemove or add the DesignPoint actors upon click.\n\nParameters\n\nstate\n\nbool\n\nState of the button, which is inherited from PyVista. The value is True\nif the button is active.\n\n\n\nShowDesignPoints.update() -> None\n\nDefine the configuration and representation of the button widget."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/InstanceFilter.html#instancefilter","title":"InstanceFilter","text":"InstanceFilter\n\n\n\nclass ansys.geometry.core.logger.InstanceFilter(name='')\n\nBases: logging.Filter\n\nEnsures that the instance_name record always exists."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/InstanceFilter.html#overview","title":"InstanceFilter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfilter\n\nEnsure that the instance_name attribute is always present."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/InstanceFilter.html#import-detail","title":"InstanceFilter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/InstanceFilter.html#method-detail","title":"InstanceFilter > Method detail","text":"Method detail\n\n\n\nInstanceFilter.filter(record)\n\nEnsure that the instance_name attribute is always present."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialPropertyType.html#materialpropertytype","title":"MaterialPropertyType","text":"MaterialPropertyType\n\n\n\nclass ansys.geometry.core.materials.property.MaterialPropertyType(*args, **kwds)\n\nBases: enum.Enum\n\nEnum holding the possible values for MaterialProperty objects."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialPropertyType.html#overview","title":"MaterialPropertyType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDENSITY\n\n\n\nELASTIC_MODULUS\n\n\n\nPOISSON_RATIO\n\n\n\nSHEAR_MODULUS\n\n\n\nSPECIFIC_HEAT\n\n\n\nTENSILE_STRENGTH\n\n\n\nTHERMAL_CONDUCTIVITY\n\n\n\nStatic methods\n\n\n\n\n\nfrom_id\n\nReturn the MaterialPropertyType value from the service."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialPropertyType.html#import-detail","title":"MaterialPropertyType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialPropertyType.html#attribute-detail","title":"MaterialPropertyType > Attribute detail","text":"Attribute detail\n\n\n\nMaterialPropertyType.DENSITY = 'Density'\n\n\n\n\n\nMaterialPropertyType.ELASTIC_MODULUS = 'ElasticModulus'\n\n\n\n\n\nMaterialPropertyType.POISSON_RATIO = 'PoissonsRatio'\n\n\n\n\n\nMaterialPropertyType.SHEAR_MODULUS = 'ShearModulus'\n\n\n\n\n\nMaterialPropertyType.SPECIFIC_HEAT = 'SpecificHeat'\n\n\n\n\n\nMaterialPropertyType.TENSILE_STRENGTH = 'TensileStrength'\n\n\n\n\n\nMaterialPropertyType.THERMAL_CONDUCTIVITY = 'ThermalConductivity'\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialPropertyType.html#method-detail","title":"MaterialPropertyType > Method detail","text":"Method detail\n\n\n\nstatic MaterialPropertyType.from_id(id: str) -> MaterialPropertyType\n\nReturn the MaterialPropertyType value from the service.\n\nParameters\n\nid\n\npython:str\n\nGeometry Service string representation of a property type.\n\nReturns\n\nMaterialPropertyType\n\nCommon name for property type."},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#applied-create-a-naca-4-digit-airfoil","title":"Examples > Applied: Create a NACA 4-digit airfoil","text":"Applied: Create a NACA 4-digit airfoil\n\nNACA airfoils are a series of airfoil shapes for aircraft wings developed by the National Advisory Committee for Aeronautics (NACA). They are a standardized system of airfoil shapes that are defined by a series of digits. The digits, which indicate the shape of the airfoil, are used to create the airfoil shape.\n\nEach digit in the NACA airfoil number has a specific meaning:\n\nThe first digit defines the maximum camber as a percentage of the chord length.\n\nThe second digit defines the position of the maximum camber as a percentage of the chord length.\n\nThe last two digits define the maximum thickness of the airfoil as a percentage of the chord length.\n\nTo fully understand the previous definitions, it is important to know that the chord length is the length of the airfoil from the leading edge to the trailing edge. The camber is the curvature of the airfoil, and the thickness is the distance between the upper and lower surfaces.\n\nSymmetric airfoils have a camber of 0% and consequently, the first two digits of the NACA number are 0. For example, the NACA 0012 airfoil is a symmetric airfoil with a maximum thickness of 12%."},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#define-the-naca-4-digit-airfoil-equation","title":"Examples > Applied: Create a NACA 4-digit airfoil > Define the NACA 4-digit airfoil equation","text":"Define the NACA 4-digit airfoil equation\n\nThe following code uses the equation for a NACA 4-digit airfoil to create a set of points that define the airfoil shape. These points are Point2D objects in PyAnsys Geometry.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#example-of-a-symmetric-airfoil-naca-0012","title":"Examples > Applied: Create a NACA 4-digit airfoil > Example of a symmetric airfoil: NACA 0012","text":"Example of a symmetric airfoil: NACA 0012\n\nNow that the function for generating a NACA 4-digit airfoil is generated, this code creates a NACA 0012 airfoil, which is symmetric. This airfoil has a maximum thickness of 12%. The NACA number is a constant.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#required-imports","title":"Examples > Applied: Create a NACA 4-digit airfoil > Required imports","text":"Required imports\n\nBefore you start creating the airfoil points, you must import the necessary modules to create the airfoil using PyAnsys Geometry.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#generate-the-airfoil-points","title":"Examples > Applied: Create a NACA 4-digit airfoil > Generate the airfoil points","text":"Generate the airfoil points\n\nUsing the function defined previously, you generate the points that define the NACA 0012 airfoil. Create a Sketch object and add the points to it. Then, approximate the airfoil using straight lines between the points.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#create-the-3d-airfoil","title":"Examples > Applied: Create a NACA 4-digit airfoil > Create the 3D airfoil","text":"Create the 3D airfoil\n\nOnce the Sketch object is created, you create a 3D airfoil. For this operation, you must create a modeler object, create a design object, and extrude the sketch.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#save-the-design","title":"Examples > Applied: Create a NACA 4-digit airfoil > Save the design","text":"Save the design\n\nFinally, save the design to a file. This file can be used in other applications or imported into a simulation software. This code saves the design as an FMD file, which can then be imported into Ansys Fluent.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#close-the-modeler","title":"Examples > Applied: Create a NACA 4-digit airfoil > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#example-of-a-cambered-airfoil-naca-6412","title":"Examples > Applied: Create a NACA 4-digit airfoil > Example of a cambered airfoil: NACA 6412","text":"Example of a cambered airfoil: NACA 6412\n\nThis code creates a NACA 6412 airfoil, which is cambered. This airfoil has a maximum camber of 6% and a maximum thickness of 12%. After overriding the NACA number, the code generates the airfoil points.\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#generate-the-airfoil-points","title":"Examples > Applied: Create a NACA 4-digit airfoil > Generate the airfoil points","text":"Generate the airfoil points\n\nAs before, you generate the points that define the NACA 6412 airfoil. Create a Sketch object and add the points to it. Then, approximate the airfoil using straight lines.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#create-the-3d-airfoil","title":"Examples > Applied: Create a NACA 4-digit airfoil > Create the 3D airfoil","text":"Create the 3D airfoil\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#save-the-design","title":"Examples > Applied: Create a NACA 4-digit airfoil > Save the design","text":"Save the design\n\nIn this case, the design is saved as an SCDOCX file.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/04_applied/01_naca_airfoils.html#close-the-modeler","title":"Examples > Applied: Create a NACA 4-digit airfoil > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/PhysicalQuantity.html#physicalquantity","title":"PhysicalQuantity","text":"PhysicalQuantity\n\n\n\nclass ansys.geometry.core.misc.units.PhysicalQuantity(unit: pint.Unit, expected_dimensions: pint.Unit | None = None)\n\nProvides the base class for handling units throughout PyAnsys Geometry.\n\nParameters\n\nunit\n\nUnit\n\nUnits for the class.\n\nexpected_dimensions\n\nUnit, default: python:None\n\nUnits for the dimensionality of the physical quantity."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/PhysicalQuantity.html#overview","title":"PhysicalQuantity > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nunit\n\nUnit of the object.\n\nbase_unit\n\nBase unit of the object."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/PhysicalQuantity.html#import-detail","title":"PhysicalQuantity > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/units/PhysicalQuantity.html#property-detail","title":"PhysicalQuantity > Property detail","text":"Property detail\n\n\n\nproperty PhysicalQuantity.unit: pint.Unit\n\nUnit of the object.\n\n\n\nproperty PhysicalQuantity.base_unit: pint.Unit\n\nBase unit of the object."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/EllipseEvaluation.html#ellipseevaluation","title":"EllipseEvaluation","text":"EllipseEvaluation\n\n\n\nclass ansys.geometry.core.shapes.curves.ellipse.EllipseEvaluation(ellipse: Ellipse, parameter: ansys.geometry.core.typing.Real)\n\nBases: ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nEvaluate an ellipse at a given parameter.\n\nParameters\n\nellipse: ~ansys.geometry.core.shapes.curves.ellipse.Ellipse\n\nEllipse to evaluate.\n\nparameter: float, int\n\nParameter to evaluate the ellipse at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/EllipseEvaluation.html#overview","title":"EllipseEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nellipse\n\nEllipse being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\ntangent\n\nTangent of the evaluation.\n\nnormal\n\nNormal of the evaluation.\n\nfirst_derivative\n\nGirst derivative of the evaluation.\n\nsecond_derivative\n\nSecond derivative of the evaluation.\n\ncurvature\n\nCurvature of the ellipse."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/EllipseEvaluation.html#import-detail","title":"EllipseEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/ellipse/EllipseEvaluation.html#property-detail","title":"EllipseEvaluation > Property detail","text":"Property detail\n\n\n\nproperty EllipseEvaluation.ellipse: Ellipse\n\nEllipse being evaluated.\n\n\n\nproperty EllipseEvaluation.parameter: ansys.geometry.core.typing.Real\n\nParameter that the evaluation is based upon.\n\n\n\nproperty EllipseEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the ellipse at this evaluation.\n\n\n\nproperty EllipseEvaluation.tangent: ansys.geometry.core.math.vector.UnitVector3D\n\nTangent of the evaluation.\n\nReturns\n\nUnitVector3D\n\nTangent unit vector to the ellipse at this evaluation.\n\n\n\nproperty EllipseEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal of the evaluation.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the ellipse at this evaluation.\n\n\n\nproperty EllipseEvaluation.first_derivative: ansys.geometry.core.math.vector.Vector3D\n\nGirst derivative of the evaluation.\n\nThe first derivative is in the direction of the tangent and has a magnitude\nequal to the velocity (rate of change of position) at that point.\n\nReturns\n\nVector3D\n\nFirst derivative of the evaluation.\n\n\n\nproperty EllipseEvaluation.second_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative of the evaluation.\n\nReturns\n\nVector3D\n\nSecond derivative of the evaluation.\n\n\n\nproperty EllipseEvaluation.curvature: ansys.geometry.core.typing.Real\n\nCurvature of the ellipse.\n\nReturns\n\nReal\n\nCurvature of the ellipse."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/LineEvaluation.html#lineevaluation","title":"LineEvaluation","text":"LineEvaluation\n\n\n\nclass ansys.geometry.core.shapes.curves.line.LineEvaluation(line: Line, parameter: float = None)\n\nBases: ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nProvides for evaluating a line."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/LineEvaluation.html#overview","title":"LineEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nline\n\nLine being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\ntangent\n\nTangent of the evaluation.\n\nfirst_derivative\n\nFirst derivative of the evaluation.\n\nsecond_derivative\n\nSecond derivative of the evaluation.\n\ncurvature\n\nCurvature of the line, which is always 0."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/LineEvaluation.html#import-detail","title":"LineEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/line/LineEvaluation.html#property-detail","title":"LineEvaluation > Property detail","text":"Property detail\n\n\n\nproperty LineEvaluation.line: Line\n\nLine being evaluated.\n\n\n\nproperty LineEvaluation.parameter: float\n\nParameter that the evaluation is based upon.\n\n\n\nproperty LineEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the line at this evaluation.\n\n\n\nproperty LineEvaluation.tangent: ansys.geometry.core.math.vector.UnitVector3D\n\nTangent of the evaluation.\n\nReturns\n\nUnitVector3D\n\nTangent unit vector to the line at this evaluation.\n\nNotes\n\nThis is always equal to the direction of the line.\n\n\n\nproperty LineEvaluation.first_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative of the evaluation.\n\nThe first derivative is always equal to the direction of the line.\n\nReturns\n\nVector3D\n\nFirst derivative of the evaluation.\n\n\n\nproperty LineEvaluation.second_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative of the evaluation.\n\nThe second derivative is always equal to a zero vector Vector3D([0, 0, 0]).\n\nReturns\n\nVector3D\n\nSecond derivative of the evaluation, which is always Vector3D([0, 0, 0]).\n\n\n\nproperty LineEvaluation.curvature: float\n\nCurvature of the line, which is always 0.\n\nReturns\n\nReal\n\nCurvature of the line, which is always 0."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/Material.html#material","title":"Material","text":"Material\n\n\n\nclass ansys.geometry.core.materials.material.Material(name: str, density: pint.Quantity, additional_properties: collections.abc.Sequence[ansys.geometry.core.materials.property.MaterialProperty] | None = None)\n\nProvides the data structure for a material.\n\nParameters\n\nname: str\n\nMaterial name.\n\ndensity: ~pint.Quantity\n\nMaterial density.\n\nadditional_properties: Sequence[MaterialProperty], default: None\n\nAdditional material properties."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/Material.html#overview","title":"Material > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_property\n\nAdd a material property to the Material class.\n\nProperties\n\n\n\n\n\nproperties\n\nDictionary of the material property type and material properties.\n\nname\n\nMaterial name."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/Material.html#import-detail","title":"Material > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/Material.html#property-detail","title":"Material > Property detail","text":"Property detail\n\n\n\nproperty Material.properties: dict[ansys.geometry.core.materials.property.MaterialPropertyType, ansys.geometry.core.materials.property.MaterialProperty]\n\nDictionary of the material property type and material properties.\n\n\n\nproperty Material.name: str\n\nMaterial name."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/Material.html#method-detail","title":"Material > Method detail","text":"Method detail\n\n\n\nMaterial.add_property(type: ansys.geometry.core.materials.property.MaterialPropertyType, name: str, quantity: pint.Quantity) -> None\n\nAdd a material property to the Material class.\n\nParameters\n\ntype\n\nMaterialPropertyType\n\nMaterial property type.\n\nname: str\n\nMaterial name.\n\nquantity: ~pint.Quantity\n\nMaterial value and unit."},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/index.html#the-framepy-module","title":"The frame.py module","text":"The frame.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/index.html#summary","title":"The frame.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nFrame\n\nRepresentation of a frame.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/index.html#description","title":"The frame.py module > Description","text":"Description\n\nProvides for managing a frame."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/GRPCBodyServiceV0.html#grpcbodyservicev0","title":"GRPCBodyServiceV0","text":"GRPCBodyServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.bodies.GRPCBodyServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.bodies.GRPCBodyService\n\nBody service for gRPC communication with the Geometry server.\n\nThis class provides methods to create and manipulate bodies in the\nGeometry server using gRPC. It is specifically designed for the v0\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/GRPCBodyServiceV0.html#overview","title":"GRPCBodyServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_sphere_body\n\nCreate a sphere body.\n\ncreate_extruded_body\n\nCreate an extruded body.\n\ncreate_sweeping_profile_body\n\nCreate a sweeping profile body.\n\ncreate_sweeping_chain\n\nCreate a sweeping chain.\n\nsweep_with_guide\n\nSweep with a guide.\n\ncreate_extruded_body_from_face_profile\n\nCreate an extruded body from a face profile.\n\ncreate_extruded_body_from_loft_profiles\n\nCreate an extruded body from loft profiles.\n\ncreate_planar_body\n\nCreate a planar body.\n\ncreate_body_from_face\n\nCreate a body from a face.\n\ncreate_surface_body\n\nCreate a surface body.\n\ncreate_surface_body_from_trimmed_curves\n\nCreate a surface body from trimmed curves.\n\ntranslate\n\nTranslate a body.\n\ndelete\n\nDelete a body.\n\nis_suppressed\n\nCheck if a body is suppressed.\n\nget_color\n\nGet the color of a body.\n\nget_faces\n\nGet the faces of a body.\n\nget_edges\n\nGet the edges of a body.\n\nget_vertices\n\nGet the vertices of a body.\n\nget_volume\n\nGet the volume of a body.\n\nget_bounding_box\n\nGet the bounding box of a body.\n\nset_assigned_material\n\nSet the assigned material of a body.\n\nget_assigned_material\n\nGet the assigned material of a body.\n\nremove_assigned_material\n\nRemove the assigned material of a body.\n\nset_name\n\nSet the name of a body.\n\nset_fill_style\n\nSet the fill style of a body.\n\nset_suppressed\n\nSet the suppressed state of a body.\n\nset_color\n\nSet the color of a body.\n\nrotate\n\nRotate a body.\n\nscale\n\nScale a body.\n\nmirror\n\nMirror a body.\n\nmap\n\nMap a body.\n\nget_collision\n\nGet the collision of a body.\n\ncopy\n\nCopy a body.\n\nget_tesellation\n\nGet the tessellation of a body.\n\nget_tesellation_with_options\n\nGet the tessellation of a body with options.\n\nboolean\n\nBoolean operation.\n\ncombine\n\nBoolean operation through command.\n\nsplit_body\n\nSplit a body.\n\ncreate_body_from_loft_profiles_with_guides\n\nCreate a body from loft profiles with guides.\n\ncombine_merge\n\nCombine and merge bodies.\n\nassign_midsurface_thickness\n\nAssign a thickness to a midsurface body.\n\nassign_midsurface_offset\n\nAssign a offset to a midsurface body.\n\nshell\n\nShell a body.\n\nremove_faces\n\nRemove faces from a body.\n\nimprint_curves\n\nImprint curves on a body.\n\nproject_curves\n\nProject curves on a body.\n\nimprint_projected_curves\n\nImprint projected curves on a body.\n\nget_full_tessellation\n\nGet the full tessellation of a body.\n\nAttributes\n\n\n\n\n\nstub\n\n\n\ncommand_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/GRPCBodyServiceV0.html#import-detail","title":"GRPCBodyServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/GRPCBodyServiceV0.html#attribute-detail","title":"GRPCBodyServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCBodyServiceV0.stub\n\n\n\n\n\nGRPCBodyServiceV0.command_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/GRPCBodyServiceV0.html#method-detail","title":"GRPCBodyServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCBodyServiceV0.create_sphere_body(**kwargs) -> dict\n\nCreate a sphere body.\n\n\n\nGRPCBodyServiceV0.create_extruded_body(**kwargs) -> dict\n\nCreate an extruded body.\n\n\n\nGRPCBodyServiceV0.create_sweeping_profile_body(**kwargs) -> dict\n\nCreate a sweeping profile body.\n\n\n\nGRPCBodyServiceV0.create_sweeping_chain(**kwargs) -> dict\n\nCreate a sweeping chain.\n\n\n\nGRPCBodyServiceV0.sweep_with_guide(**kwargs) -> dict\n\nSweep with a guide.\n\n\n\nGRPCBodyServiceV0.create_extruded_body_from_face_profile(**kwargs) -> dict\n\nCreate an extruded body from a face profile.\n\n\n\nGRPCBodyServiceV0.create_extruded_body_from_loft_profiles(**kwargs) -> dict\n\nCreate an extruded body from loft profiles.\n\n\n\nGRPCBodyServiceV0.create_planar_body(**kwargs) -> dict\n\nCreate a planar body.\n\n\n\nGRPCBodyServiceV0.create_body_from_face(**kwargs) -> dict\n\nCreate a body from a face.\n\n\n\nGRPCBodyServiceV0.create_surface_body(**kwargs) -> dict\n\nCreate a surface body.\n\n\n\nGRPCBodyServiceV0.create_surface_body_from_trimmed_curves(**kwargs) -> dict\n\nCreate a surface body from trimmed curves.\n\n\n\nGRPCBodyServiceV0.translate(**kwargs) -> dict\n\nTranslate a body.\n\n\n\nGRPCBodyServiceV0.delete(**kwargs) -> dict\n\nDelete a body.\n\n\n\nGRPCBodyServiceV0.is_suppressed(**kwargs) -> dict\n\nCheck if a body is suppressed.\n\n\n\nGRPCBodyServiceV0.get_color(**kwargs) -> dict\n\nGet the color of a body.\n\n\n\nGRPCBodyServiceV0.get_faces(**kwargs) -> dict\n\nGet the faces of a body.\n\n\n\nGRPCBodyServiceV0.get_edges(**kwargs) -> dict\n\nGet the edges of a body.\n\n\n\nGRPCBodyServiceV0.get_vertices(**kwargs) -> dict\n\nGet the vertices of a body.\n\n\n\nGRPCBodyServiceV0.get_volume(**kwargs) -> dict\n\nGet the volume of a body.\n\n\n\nGRPCBodyServiceV0.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a body.\n\n\n\nGRPCBodyServiceV0.set_assigned_material(**kwargs) -> dict\n\nSet the assigned material of a body.\n\n\n\nGRPCBodyServiceV0.get_assigned_material(**kwargs) -> dict\n\nGet the assigned material of a body.\n\n\n\nGRPCBodyServiceV0.remove_assigned_material(**kwargs) -> dict\n\nRemove the assigned material of a body.\n\n\n\nGRPCBodyServiceV0.set_name(**kwargs) -> dict\n\nSet the name of a body.\n\n\n\nGRPCBodyServiceV0.set_fill_style(**kwargs) -> dict\n\nSet the fill style of a body.\n\n\n\nGRPCBodyServiceV0.set_suppressed(**kwargs) -> dict\n\nSet the suppressed state of a body.\n\n\n\nGRPCBodyServiceV0.set_color(**kwargs) -> dict\n\nSet the color of a body.\n\n\n\nGRPCBodyServiceV0.rotate(**kwargs) -> dict\n\nRotate a body.\n\n\n\nGRPCBodyServiceV0.scale(**kwargs) -> dict\n\nScale a body.\n\n\n\nGRPCBodyServiceV0.mirror(**kwargs) -> dict\n\nMirror a body.\n\n\n\nGRPCBodyServiceV0.map(**kwargs) -> dict\n\nMap a body.\n\n\n\nGRPCBodyServiceV0.get_collision(**kwargs) -> dict\n\nGet the collision of a body.\n\n\n\nGRPCBodyServiceV0.copy(**kwargs) -> dict\n\nCopy a body.\n\n\n\nGRPCBodyServiceV0.get_tesellation(**kwargs) -> dict\n\nGet the tessellation of a body.\n\n\n\nGRPCBodyServiceV0.get_tesellation_with_options(**kwargs) -> dict\n\nGet the tessellation of a body with options.\n\n\n\nGRPCBodyServiceV0.boolean(**kwargs) -> dict\n\nBoolean operation.\n\n\n\nGRPCBodyServiceV0.combine(**kwargs) -> dict\n\nBoolean operation through command.\n\n\n\nGRPCBodyServiceV0.split_body(**kwargs) -> dict\n\nSplit a body.\n\n\n\nGRPCBodyServiceV0.create_body_from_loft_profiles_with_guides(**kwargs) -> dict\n\nCreate a body from loft profiles with guides.\n\n\n\nGRPCBodyServiceV0.combine_merge(**kwargs) -> dict\n\nCombine and merge bodies.\n\n\n\nGRPCBodyServiceV0.assign_midsurface_thickness(**kwargs) -> dict\n\nAssign a thickness to a midsurface body.\n\n\n\nGRPCBodyServiceV0.assign_midsurface_offset(**kwargs) -> dict\n\nAssign a offset to a midsurface body.\n\n\n\nGRPCBodyServiceV0.shell(**kwargs) -> dict\n\nShell a body.\n\n\n\nGRPCBodyServiceV0.remove_faces(**kwargs) -> dict\n\nRemove faces from a body.\n\n\n\nGRPCBodyServiceV0.imprint_curves(**kwargs) -> dict\n\nImprint curves on a body.\n\n\n\nGRPCBodyServiceV0.project_curves(**kwargs) -> dict\n\nProject curves on a body.\n\n\n\nGRPCBodyServiceV0.imprint_projected_curves(**kwargs) -> dict\n\nImprint projected curves on a body.\n\n\n\nGRPCBodyServiceV0.get_full_tessellation(**kwargs)\n\nGet the full tessellation of a body."},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#modeling-tessellation-of-two-bodies","title":"Examples > Modeling: Tessellation of two bodies","text":"Modeling: Tessellation of two bodies\n\nThis example shows how to create two stacked bodies and return the tessellation as two merged bodies."},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#perform-required-imports","title":"Examples > Modeling: Tessellation of two bodies > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#create-design","title":"Examples > Modeling: Tessellation of two bodies > Create design","text":"Create design\n\nCreate the basic sketches to be tessellated and extrude the sketch in the required plane. For more information on creating a component and extruding a sketch in the design, see the Rectangular plate with multiple bodies example.\n\nHere is a typical situation in which two bodies, with different sketch planes, merge each body into a single dataset. This effectively combines all the faces of each individual body into a single dataset without separating faces.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#tessellate-component-as-two-merged-bodies","title":"Examples > Modeling: Tessellation of two bodies > Tessellate component as two merged bodies","text":"Tessellate component as two merged bodies\n\nTessellate the component and merge each body into a single dataset. This effectively combines all the faces of each individual body into a single dataset without separating faces.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSingle body tessellation is possible. In that case, users can request the body-level tessellation method to tessellate the body and merge all the faces into a single dataset.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#plot-design","title":"Examples > Modeling: Tessellation of two bodies > Plot design","text":"Plot design\n\nPlot the design.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/tessellation_usage.html#close-the-modeler","title":"Examples > Modeling: Tessellation of two bodies > Close the modeler","text":"Close the modeler\n\nClose the modeler.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/index.html#the-parameterizationpy-module","title":"The parameterization.py module","text":"The parameterization.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/index.html#summary","title":"The parameterization.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nParamUV\n\nParameter class containing 2 parameters: (u, v).\n\nInterval\n\nInterval class that defines a range of values.\n\nParameterization\n\nParameterization class describes the parameters of a specific geometry.\n\nEnums\n\n\n\n\n\nParamForm\n\nParamForm enum class that defines the form of a Parameterization.\n\nParamType\n\nParamType enum class that defines the type of a Parameterization.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/index.html#description","title":"The parameterization.py module > Description","text":"Description\n\nProvides the parametrization-related classes."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/GeometryCommands.html#geometrycommands","title":"GeometryCommands","text":"GeometryCommands\n\n\n\nclass ansys.geometry.core.designer.geometry_commands.GeometryCommands(grpc_client: ansys.geometry.core.connection.client.GrpcClient, _internal_use: bool = False)\n\nProvides geometry commands for PyAnsys Geometry.\n\nParameters\n\ngrpc_client\n\nGrpcClient\n\ngRPC client to use for the geometry commands.\n\n_internal_use\n\nbool, optional\n\nInternal flag to prevent direct instantiation by users.\nThis parameter is for internal use only.\n\nRaises\n\nGeometryRuntimeError\n\nIf the class is instantiated directly by users instead\nof through the modeler.\n\nNotes\n\nThis class should not be instantiated directly. Use\nmodeler.geometry_commands instead."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/GeometryCommands.html#overview","title":"GeometryCommands > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nchamfer\n\nCreate a chamfer on an edge or adjust the chamfer of a face.\n\nfillet\n\nCreate a fillet on an edge or adjust the fillet of a face.\n\nfull_fillet\n\nCreate a full fillet betweens a collection of faces.\n\nextrude_faces\n\nExtrude a selection of faces.\n\nextrude_faces_up_to\n\nExtrude a selection of faces up to another object.\n\nextrude_edges\n\nExtrude a selection of edges. Provide either a face or a direction and point.\n\nextrude_edges_up_to\n\nExtrude a selection of edges up to another object.\n\nrename_object\n\nRename an object.\n\ncreate_linear_pattern\n\nCreate a linear pattern. The pattern can be one or two dimensions.\n\nmodify_linear_pattern\n\nModify a linear pattern. Leave an argument at 0 for it to remain unchanged.\n\ncreate_circular_pattern\n\nCreate a circular pattern. The pattern can be one or two dimensions.\n\nmodify_circular_pattern\n\nModify a circular pattern. Leave an argument at 0 for it to remain unchanged.\n\ncreate_fill_pattern\n\nCreate a fill pattern.\n\nupdate_fill_pattern\n\nUpdate a fill pattern.\n\nrevolve_faces\n\nRevolve face around an axis.\n\nrevolve_faces_up_to\n\nRevolve face around an axis up to a certain object.\n\nrevolve_faces_by_helix\n\nRevolve face around an axis in a helix shape.\n\nreplace_face\n\nReplace a face with another face.\n\nsplit_body\n\nSplit bodies with a plane, slicers, or faces.\n\nget_round_info\n\nGet info on the rounding of a face.\n\nmove_translate\n\nMove a selection by a distance in a direction.\n\nmove_rotate\n\nRotate a selection by an angle about a given axis.\n\noffset_faces_set_radius\n\nOffset faces with a radius.\n\ncreate_align_condition\n\nCreate an align condition between two geometry objects.\n\ncreate_tangent_condition\n\nCreate a tangent condition between two geometry objects.\n\ncreate_orient_condition\n\nCreate an orient condition between two geometry objects.\n\nmove_imprint_edges\n\nMove the imprint edges in the specified direction by the specified distance.\n\noffset_edges\n\nOffset the specified edges with the specified distance.\n\ndraft_faces\n\nDraft the specified faces in the specified direction by the specified angle.\n\nthicken_faces\n\nThicken the specified faces by the specified thickness in the specified direction.\n\noffset_faces\n\nOffset the specified faces by the specified distance in the specified direction.\n\nrevolve_edges\n\nRevolve edges around an axis."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/GeometryCommands.html#import-detail","title":"GeometryCommands > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/GeometryCommands.html#method-detail","title":"GeometryCommands > Method detail","text":"Method detail\n\n\n\nGeometryCommands.chamfer(selection: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge] | ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nCreate a chamfer on an edge or adjust the chamfer of a face.\n\nParameters\n\nselection\n\nEdge | python:list[Edge] | Face | python:list[Face]\n\nOne or more edges or faces to act on.\n\ndistance\n\nDistance | Quantity | Real\n\nChamfer distance.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.fillet(selection: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge] | ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], radius: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nCreate a fillet on an edge or adjust the fillet of a face.\n\nParameters\n\nselection\n\nEdge | python:list[Edge] | Face | python:list[Face]\n\nOne or more edges or faces to act on.\n\nradius\n\nDistance | Quantity | Real\n\nFillet radius.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.full_fillet(faces: list[ansys.geometry.core.designer.face.Face]) -> bool\n\nCreate a full fillet betweens a collection of faces.\n\nParameters\n\nfaces\n\npython:list[Face]\n\nFaces to round.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.extrude_faces(faces: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, direction: ansys.geometry.core.math.vector.UnitVector3D = None, extrude_type: ExtrudeType = ExtrudeType.ADD, offset_mode: OffsetMode = OffsetMode.MOVE_FACES_TOGETHER, pull_symmetric: bool = False, copy: bool = False, force_do_as_extrude: bool = False) -> list[ansys.geometry.core.designer.body.Body]\n\nExtrude a selection of faces.\n\nParameters\n\nfaces\n\nFace | python:list[Face]\n\nFaces to extrude.\n\ndistance\n\nReal\n\nDistance to extrude.\n\ndirection\n\nUnitVector3D, default: python:None\n\nDirection of extrusion. If no direction is provided, it will be inferred.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\noffset_mode\n\nOffsetMode, default: OffsetMode.MOVE_FACES_TOGETHER\n\nMode of how to handle offset relationships.\n\npull_symmetric\n\nbool, default: python:False\n\nPull symmetrically on both sides if True.\n\ncopy\n\nbool, default: python:False\n\nCopy the face and move it instead of extruding the original face if True.\n\nforce_do_as_extrude\n\nbool, default: python:False\n\nForces to do as an extrusion if True, if False allows extrusion by offset.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.extrude_faces_up_to(faces: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], up_to_selection: ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge | ansys.geometry.core.designer.body.Body, seed_point: ansys.geometry.core.math.point.Point3D, direction: ansys.geometry.core.math.vector.UnitVector3D, extrude_type: ExtrudeType = ExtrudeType.ADD, offset_mode: OffsetMode = OffsetMode.MOVE_FACES_TOGETHER, pull_symmetric: bool = False, copy: bool = False, force_do_as_extrude: bool = False) -> list[ansys.geometry.core.designer.body.Body]\n\nExtrude a selection of faces up to another object.\n\nParameters\n\nfaces\n\nFace | python:list[Face]\n\nFaces to extrude.\n\nup_to_selection\n\nFace | Edge | Body\n\nThe object to pull the faces up to.\n\nseed_point\n\nPoint3D\n\nOrigin to define the extrusion.\n\ndirection\n\nUnitVector3D, default: python:None\n\nDirection of extrusion. If no direction is provided, it will be inferred.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\noffset_mode\n\nOffsetMode, default: OffsetMode.MOVE_FACES_TOGETHER\n\nMode of how to handle offset relationships.\n\npull_symmetric\n\nbool, default: python:False\n\nPull symmetrically on both sides if True.\n\ncopy\n\nbool, default: python:False\n\nCopy the face and move it instead of extruding the original face if True.\n\nforce_do_as_extrude\n\nbool, default: python:False\n\nForces to do as an extrusion if True, if False allows extrusion by offset.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.extrude_edges(edges: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge], distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, from_face: ansys.geometry.core.designer.face.Face = None, from_point: ansys.geometry.core.math.point.Point3D = None, direction: ansys.geometry.core.math.vector.UnitVector3D = None, extrude_type: ExtrudeType = ExtrudeType.ADD, pull_symmetric: bool = False, copy: bool = False, natural_extension: bool = False) -> list[ansys.geometry.core.designer.body.Body]\n\nExtrude a selection of edges. Provide either a face or a direction and point.\n\nParameters\n\nedges\n\nEdge | python:list[Edge]\n\nEdges to extrude.\n\ndistance\n\nDistance | Quantity | Real\n\nDistance to extrude.\n\nfrom_face\n\nFace, default: python:None\n\nFace to pull normal from.\n\nfrom_point\n\nPoint3D, default: python:None\n\nPoint to pull from. Must be used with direction.\n\ndirection\n\nUnitVector3D, default: python:None\n\nDirection to pull. Must be used with from_point.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\npull_symmetric\n\nbool, default: python:False\n\nPull symmetrically on both sides if True.\n\ncopy\n\nbool, default: python:False\n\nCopy the edge and move it instead of extruding the original edge if True.\n\nnatural_extension\n\nbool, default: python:False\n\nSurfaces will extend in a natural or linear shape after exceeding its original range.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.extrude_edges_up_to(edges: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge], up_to_selection: ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge | ansys.geometry.core.designer.body.Body, seed_point: ansys.geometry.core.math.point.Point3D, direction: ansys.geometry.core.math.vector.UnitVector3D, extrude_type: ExtrudeType = ExtrudeType.ADD) -> list[ansys.geometry.core.designer.body.Body]\n\nExtrude a selection of edges up to another object.\n\nParameters\n\nedges\n\nEdge | python:list[Edge]\n\nEdges to extrude.\n\nup_to_selection\n\nFace, default: python:None\n\nThe object to pull the faces up to.\n\nseed_point\n\nPoint3D\n\nOrigin to define the extrusion.\n\ndirection\n\nUnitVector3D, default: python:None\n\nDirection of extrusion.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.rename_object(selection: list[ansys.geometry.core.designer.body.Body] | list[ansys.geometry.core.designer.component.Component], name: str) -> bool\n\nRename an object.\n\nParameters\n\nselection\n\npython:list[Body] | python:list[Component]\n\nSelection of the objects to rename.\n\nname\n\npython:str\n\nNew name for the object.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.create_linear_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], linear_direction: ansys.geometry.core.designer.edge.Edge | ansys.geometry.core.designer.face.Face, count_x: int, pitch_x: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, two_dimensional: bool = False, count_y: int = None, pitch_y: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = None) -> bool\n\nCreate a linear pattern. The pattern can be one or two dimensions.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFaces to create the pattern out of.\n\nlinear_direction\n\nEdge | Face\n\nDirection of the linear pattern, determined by the direction of an edge or face normal.\n\ncount_x\n\npython:int\n\nHow many times the pattern repeats in the x direction.\n\npitch_x\n\nDistance | Quantity | Real\n\nThe spacing between each pattern member in the x direction.\n\ntwo_dimensional\n\nbool, default: python:False\n\nIf True, create a pattern in the x and y direction.\n\ncount_y\n\npython:int, default: python:None\n\nHow many times the pattern repeats in the y direction.\n\npitch_y\n\nDistance | Quantity | Real, default: python:None\n\nThe spacing between each pattern member in the y direction.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.modify_linear_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], count_x: int = 0, pitch_x: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0.0, count_y: int = 0, pitch_y: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0.0, new_seed_index: int = 0, old_seed_index: int = 0) -> bool\n\nModify a linear pattern. Leave an argument at 0 for it to remain unchanged.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFaces that belong to the pattern.\n\ncount_x\n\npython:int, default: 0\n\nHow many times the pattern repeats in the x direction.\n\npitch_x\n\nDistance | Quantity | Real, default: 0.0\n\nThe spacing between each pattern member in the x direction.\n\ncount_y\n\npython:int, default: 0\n\nHow many times the pattern repeats in the y direction.\n\npitch_y\n\nDistance | Quantity | Real, default: 0.0\n\nThe spacing between each pattern member in the y direction.\n\nnew_seed_index\n\npython:int, default: 0\n\nThe new seed index of the member.\n\nold_seed_index\n\npython:int, default: 0\n\nThe old seed index of the member.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.create_circular_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], circular_axis: ansys.geometry.core.designer.edge.Edge, circular_count: int, circular_angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, two_dimensional: bool = False, linear_count: int = None, linear_pitch: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = None, radial_direction: ansys.geometry.core.math.vector.UnitVector3D = None) -> bool\n\nCreate a circular pattern. The pattern can be one or two dimensions.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFaces to create the pattern out of.\n\ncircular_axis\n\nEdge\n\nThe axis of the circular pattern, determined by the direction of an edge.\n\ncircular_count\n\npython:int\n\nHow many members are in the circular pattern.\n\ncircular_angle\n\nAngle | Quantity | Real\n\nThe angular range of the pattern.\n\ntwo_dimensional\n\nbool, default: python:False\n\nIf True, create a two-dimensional pattern.\n\nlinear_count\n\npython:int, default: python:None\n\nHow many times the circular pattern repeats along the radial lines for a\ntwo-dimensional pattern.\n\nlinear_pitch\n\nDistance | Quantity | Real, default: python:None\n\nThe spacing along the radial lines for a two-dimensional pattern.\n\nradial_direction\n\nUnitVector3D, default: python:None\n\nThe direction from the center out for a two-dimensional pattern.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.modify_circular_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], circular_count: int = 0, linear_count: int = 0, step_angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real = 0.0, step_linear: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0.0) -> bool\n\nModify a circular pattern. Leave an argument at 0 for it to remain unchanged.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFaces that belong to the pattern.\n\ncircular_count\n\npython:int, default: 0\n\nHow many members are in the circular pattern.\n\nlinear_count\n\npython:int, default: 0\n\nHow many times the circular pattern repeats along the radial lines for a\ntwo-dimensional pattern.\n\nstep_angle\n\nAngle | Quantity | Real, default: 0.0\n\nDefines the circular angle.\n\nstep_linear\n\nDistance | Quantity | Real, default: 0.0\n\nDefines the step, along the radial lines, for a pattern dimension greater than 1.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.create_fill_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], linear_direction: ansys.geometry.core.designer.edge.Edge | ansys.geometry.core.designer.face.Face, fill_pattern_type: FillPatternType, margin: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, x_spacing: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, y_spacing: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, row_x_offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0, row_y_offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0, column_x_offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0, column_y_offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real = 0) -> bool\n\nCreate a fill pattern.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFaces to create the pattern out of.\n\nlinear_direction\n\nEdge\n\nDirection of the linear pattern, determined by the direction of an edge.\n\nfill_pattern_type\n\nFillPatternType\n\nThe type of fill pattern.\n\nmargin\n\nDistance | Quantity | Real\n\nMargin defining the border of the fill pattern.\n\nx_spacing\n\nDistance | Quantity | Real\n\nSpacing between the pattern members in the x direction.\n\ny_spacing\n\nDistance | Quantity | Real\n\nSpacing between the pattern members in the x direction.\n\nrow_x_offset\n\nDistance | Quantity | Real, default: 0\n\nOffset for the rows in the x direction. Only used with FillPattern.SKEWED.\n\nrow_y_offset\n\nDistance | Quantity | Real, default: 0\n\nOffset for the rows in the y direction. Only used with FillPattern.SKEWED.\n\ncolumn_x_offset\n\nDistance | Quantity | Real, default: 0\n\nOffset for the columns in the x direction. Only used with FillPattern.SKEWED.\n\ncolumn_y_offset\n\nDistance | Quantity | Real, default: 0\n\nOffset for the columns in the y direction. Only used with FillPattern.SKEWED.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.update_fill_pattern(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face]) -> bool\n\nUpdate a fill pattern.\n\nWhen the face that a fill pattern exists upon changes in size, the\nfill pattern can be updated to fill the new space.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFace(s) that are part of a fill pattern.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.revolve_faces(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], axis: ansys.geometry.core.shapes.curves.line.Line, angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, extrude_type: ExtrudeType = ExtrudeType.ADD) -> list[ansys.geometry.core.designer.body.Body]\n\nRevolve face around an axis.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFace(s) to revolve.\n\naxis\n\nLine\n\nAxis of revolution.\n\nangle\n\nAngle | Quantity | Real\n\nAngular distance to revolve.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.revolve_faces_up_to(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], up_to: ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge | ansys.geometry.core.designer.body.Body, axis: ansys.geometry.core.shapes.curves.line.Line, direction: ansys.geometry.core.math.vector.UnitVector3D, extrude_type: ExtrudeType = ExtrudeType.ADD) -> list[ansys.geometry.core.designer.body.Body]\n\nRevolve face around an axis up to a certain object.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFace(s) to revolve.\n\nup_to\n\nFace | Edge | Body\n\nObject to revolve the face up to.\n\naxis\n\nLine\n\nAxis of revolution.\n\ndirection\n\nUnitVector3D\n\nDirection of extrusion.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.revolve_faces_by_helix(selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], axis: ansys.geometry.core.shapes.curves.line.Line, direction: ansys.geometry.core.math.vector.UnitVector3D, height: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, pitch: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, taper_angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, right_handed: bool, both_sides: bool, extrude_type: ExtrudeType = ExtrudeType.ADD) -> list[ansys.geometry.core.designer.body.Body]\n\nRevolve face around an axis in a helix shape.\n\nParameters\n\nselection\n\nFace | python:list[Face]\n\nFace(s) to revolve.\n\naxis\n\nLine\n\nAxis of revolution.\n\ndirection\n\nUnitVector3D\n\nDirection of extrusion.\n\nheight\n\nDistance | Quantity | Real,\n\nHeight of the helix.\n\npitch\n\nDistance | Quantity | Real,\n\nPitch of the helix.\n\ntaper_angle\n\nAngle | Quantity | Real,\n\nTaper angle of the helix.\n\nright_handed\n\nbool,\n\nRight-handed helix if True, left-handed if False.\n\nboth_sides\n\nbool,\n\nCreate on both sides if True, one side if False.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.ADD\n\nType of extrusion to be performed.\n\nReturns\n\npython:list[Body]\n\nBodies created by the extrusion if any.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.replace_face(target_selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], replacement_selection: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face]) -> bool\n\nReplace a face with another face.\n\nParameters\n\ntarget_selection\n\nUnion[Face, python:list[Face]]\n\nThe face or faces to replace.\n\nreplacement_selection\n\nUnion[Face, python:list[Face]]\n\nThe face or faces to replace with.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.split_body(bodies: list[ansys.geometry.core.designer.body.Body], plane: ansys.geometry.core.math.plane.Plane, slicers: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge] | ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], faces: list[ansys.geometry.core.designer.face.Face], extendfaces: bool) -> bool\n\nSplit bodies with a plane, slicers, or faces.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nBodies to split.\n\nplane\n\nPlane\n\nPlane to split with\n\nslicers\n\nEdge | python:list[Edge] | Face | python:list[Face]\n\nSlicers to split with.\n\nfaces\n\npython:list[Face]\n\nFaces to split with.\n\nextendFaces\n\nbool\n\nExtend faces if split with faces.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.get_round_info(face: ansys.geometry.core.designer.face.Face) -> tuple[bool, ansys.geometry.core.typing.Real]\n\nGet info on the rounding of a face.\n\nParameters\n\nFace\n\nThe design face to get round info on.\n\nReturns\n\npython:tuple[bool, Real]\n\nTrue if round is aligned with face’s U-parameter direction, False otherwise.\nRadius of the round.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.move_translate(selection: ansys.geometry.core.designer.selection.NamedSelection, direction: ansys.geometry.core.math.vector.UnitVector3D, distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nMove a selection by a distance in a direction.\n\nParameters\n\nselection\n\nNamedSelection\n\nNamed selection to move.\n\ndirection\n\nUnitVector3D\n\nDirection to move in.\n\ndistance\n\nDistance | Quantity | Real\n\nDistance to move. Default units are meters.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.move_rotate(selection: ansys.geometry.core.designer.selection.NamedSelection, axis: ansys.geometry.core.shapes.curves.line.Line, angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real) -> dict[str, bool | ansys.geometry.core.typing.Real]\n\nRotate a selection by an angle about a given axis.\n\nParameters\n\nselection\n\nNamedSelection\n\nNamed selection to move.\n\naxis\n\nLine\n\nDirection to move in.\n\nAngle\n\nAngle | Quantity | Real\n\nAngle to rotate by. Default units are radians.\n\nReturns\n\npython:dict[python:str, Union[bool, Real]]\n\nDictionary containing the useful output from the command result.\nKeys are success, modified_bodies, modified_faces, modified_edges.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.offset_faces_set_radius(faces: ansys.geometry.core.designer.face.Face | list[ansys.geometry.core.designer.face.Face], radius: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, copy: bool = False, offset_mode: OffsetMode = OffsetMode.IGNORE_RELATIONSHIPS, extrude_type: ExtrudeType = ExtrudeType.FORCE_INDEPENDENT) -> bool\n\nOffset faces with a radius.\n\nParameters\n\nfaces\n\nFace | python:list[Face]\n\nFaces to offset.\n\nradius\n\nDistance | Quantity | Real\n\nRadius of the offset.\n\ncopy\n\nbool, default: python:False\n\nCopy the face and move it instead of offsetting the original face if True.\n\noffset_mode\n\nOffsetMode, default: OffsetMode.MOVE_FACES_TOGETHER\n\nMode of how to handle offset relationships.\n\nextrude_type\n\nExtrudeType, default: ExtrudeType.FORCE_INDEPENDENT\n\nType of extrusion to be performed.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nGeometryCommands.create_align_condition(parent_component: ansys.geometry.core.designer.component.Component, geometry_a: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge, geometry_b: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge) -> ansys.geometry.core.designer.mating_conditions.AlignCondition\n\nCreate an align condition between two geometry objects.\n\nThis will move the objects to be aligned with each other.\n\nParameters\n\nparent_component\n\nComponent\n\nThe common ancestor component of the two geometry objects.\n\ngeometry_a\n\nBody | Face | Edge\n\nThe first geometry object to align to the second.\n\ngeometry_b\n\nBody | Face | Edge\n\nThe geometry object to be aligned to.\n\nReturns\n\nAlignCondition\n\nThe persistent align condition that was created.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nGeometryCommands.create_tangent_condition(parent_component: ansys.geometry.core.designer.component.Component, geometry_a: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge, geometry_b: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge) -> ansys.geometry.core.designer.mating_conditions.TangentCondition\n\nCreate a tangent condition between two geometry objects.\n\nThis aligns the objects so that they are tangent.\n\nParameters\n\nparent_component\n\nComponent\n\nThe common ancestor component of the two geometry objects.\n\ngeometry_a\n\nBody | Face | Edge\n\nThe first geometry object to tangent the second.\n\ngeometry_b\n\nBody | Face | Edge\n\nThe geometry object to be tangent with.\n\nReturns\n\nTangentCondition\n\nThe persistent tangent condition that was created.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nGeometryCommands.create_orient_condition(parent_component: ansys.geometry.core.designer.component.Component, geometry_a: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge, geometry_b: ansys.geometry.core.designer.body.Body | ansys.geometry.core.designer.face.Face | ansys.geometry.core.designer.edge.Edge) -> ansys.geometry.core.designer.mating_conditions.OrientCondition\n\nCreate an orient condition between two geometry objects.\n\nThis rotates the objects so that they are oriented in the same direction.\n\nParameters\n\nparent_component\n\nComponent\n\nThe common ancestor component of the two geometry objects.\n\ngeometry_a\n\nBody | Face | Edge\n\nThe first geometry object to orient with the second.\n\ngeometry_b\n\nBody | Face | Edge\n\nThe geometry object to be oriented with.\n\nReturns\n\nOrientCondition\n\nThe persistent orient condition that was created.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nGeometryCommands.move_imprint_edges(edges: list[ansys.geometry.core.designer.edge.Edge], direction: ansys.geometry.core.math.vector.UnitVector3D, distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nMove the imprint edges in the specified direction by the specified distance.\n\nParameters\n\nedges\n\npython:list[Edge]\n\nThe edges to move.\n\ndirection\n\nUnitVector3D\n\nThe direction to move the edges.\n\ndistance\n\nDistance | Quantity | Real\n\nThe distance to move the edges.\n\nReturns\n\nbool\n\nReturns True if the edges were moved successfully, False otherwise.\n\n\n\nGeometryCommands.offset_edges(edges: list[ansys.geometry.core.designer.edge.Edge], offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nOffset the specified edges with the specified distance.\n\nParameters\n\nedges\n\npython:list[Edge]\n\nThe edges to offset.\n\noffset\n\nDistance | Quantity | Real\n\nThe distance to offset the edges.\n\nReturns\n\nbool\n\nReturns True if the edges were offset successfully, False otherwise.\n\n\n\nGeometryCommands.draft_faces(faces: list[ansys.geometry.core.designer.face.Face], reference_faces: list[ansys.geometry.core.designer.face.Face], draft_side: DraftSide, angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, extrude_type: ExtrudeType) -> list[ansys.geometry.core.designer.face.Face]\n\nDraft the specified faces in the specified direction by the specified angle.\n\nParameters\n\nfaces\n\npython:list[Face]\n\nThe faces to draft.\n\nreference_faces\n\npython:list[Face]\n\nThe reference faces to use for the draft.\n\ndraft_side\n\nDraftSide\n\nThe side to draft.\n\nangle\n\nAngle | Quantity | Real\n\nThe angle to draft the faces.\n\nextrude_type\n\nExtrudeType\n\nThe type of extrusion to use.\n\nReturns\n\npython:list[Face]\n\nThe faces created by the draft operation.\n\n\n\nGeometryCommands.thicken_faces(faces: list[ansys.geometry.core.designer.face.Face], direction: ansys.geometry.core.math.vector.UnitVector3D, thickness: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, extrude_type: ExtrudeType, pull_symmetric: bool, select_direction: bool) -> bool\n\nThicken the specified faces by the specified thickness in the specified direction.\n\nParameters\n\nfaces\n\npython:list[Face]\n\nThe faces to thicken.\n\ndirection\n\nUnitVector3D\n\nThe direction to thicken the faces.\n\nthickness\n\nDistance | Quantity | Real\n\nThe thickness to apply to the faces.\n\nextrude_type\n\nExtrudeType\n\nThe type of extrusion to use.\n\npull_symmetric\n\nbool\n\nWhether to pull the faces symmetrically.\n\nselect_direction\n\nbool\n\nWhether to select the direction.\n\nReturns\n\nbool\n\nReturns True if the faces were thickened successfully, False otherwise.\n\n\n\nGeometryCommands.offset_faces(faces: list[ansys.geometry.core.designer.face.Face], distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real, direction: ansys.geometry.core.math.vector.UnitVector3D, extrude_type: ExtrudeType) -> None\n\nOffset the specified faces by the specified distance in the specified direction.\n\nParameters\n\nfaces\n\npython:list[Face]\n\nThe faces to offset.\n\ndistance\n\nDistance | Quantity | Real\n\nThe distance to offset the faces.\n\ndirection\n\nUnitVector3D\n\nThe direction to offset the faces.\n\nextrude_type\n\nExtrudeType\n\nThe type of extrusion to use.\n\nThis method is only available starting on Ansys release 26R1.\n\n\n\nGeometryCommands.revolve_edges(edges: ansys.geometry.core.designer.edge.Edge | list[ansys.geometry.core.designer.edge.Edge], axis: ansys.geometry.core.shapes.curves.line.Line, angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real, symmetric: bool) -> None\n\nRevolve edges around an axis.\n\nParameters\n\nedges\n\nEdge | python:list[Edge]\n\nEdge(s) to revolve.\n\naxis\n\nLine\n\nAxis of revolution.\n\nangle\n\nAngle | Quantity | Real\n\nAngular distance to revolve.\n\nsymmetric\n\nbool\n\nRevolve symmetrically if True, one side if False.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/index.html#the-optionspy-module","title":"The options.py module","text":"The options.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/index.html#summary","title":"The options.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nImportOptions\n\nImport options when opening a file.\n\nTessellationOptions\n\nProvides options for getting tessellation.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/options/index.html#description","title":"The options.py module > Description","text":"Description\n\nProvides various option classes."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/index.html#the-ellipsepy-module","title":"The ellipse.py module","text":"The ellipse.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/index.html#summary","title":"The ellipse.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchEllipse\n\nProvides for modeling an ellipse.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/index.html#description","title":"The ellipse.py module > Description","text":"Description\n\nProvides for creating and managing an ellipse."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/index.html#the-unsupportedpy-module","title":"The unsupported.py module","text":"The unsupported.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/index.html#summary","title":"The unsupported.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCUnsupportedServiceV1\n\nUnsupported service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/index.html#description","title":"The unsupported.py module > Description","text":"Description\n\nModule containing the unsupported service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/RepairToolMessage.html#repairtoolmessage","title":"RepairToolMessage","text":"RepairToolMessage\n\n\n\nclass ansys.geometry.core.tools.repair_tool_message.RepairToolMessage(success: bool, created_bodies: list[str], modified_bodies: list[str], deleted_bodies: list[str] = None, craeted_components: list[str] = None, modified_components: list[str] = None, deleted_components: list[str] = None, found: int = -1, repaired: int = -1)\n\nProvides return message for the repair tool methods."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/RepairToolMessage.html#overview","title":"RepairToolMessage > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsuccess\n\nThe success of the repair operation.\n\ncreated_bodies\n\nThe list of the created bodies after the repair operation.\n\nmodified_bodies\n\nThe list of the modified bodies after the repair operation.\n\ndeleted_bodies\n\nThe list of the deleted bodies after the repair operation.\n\nfound\n\nNumber of problem areas found for the repair operation.\n\nrepaired\n\nNumber of problem areas repaired during the repair operation."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/RepairToolMessage.html#import-detail","title":"RepairToolMessage > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/RepairToolMessage.html#property-detail","title":"RepairToolMessage > Property detail","text":"Property detail\n\n\n\nproperty RepairToolMessage.success: bool\n\nThe success of the repair operation.\n\n\n\nproperty RepairToolMessage.created_bodies: list[str]\n\nThe list of the created bodies after the repair operation.\n\n\n\nproperty RepairToolMessage.modified_bodies: list[str]\n\nThe list of the modified bodies after the repair operation.\n\n\n\nproperty RepairToolMessage.deleted_bodies: list[str]\n\nThe list of the deleted bodies after the repair operation.\n\n\n\nproperty RepairToolMessage.found: int\n\nNumber of problem areas found for the repair operation.\n\n\n\nproperty RepairToolMessage.repaired: int\n\nNumber of problem areas repaired during the repair operation."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/SphereEvaluation.html#sphereevaluation","title":"SphereEvaluation","text":"SphereEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.sphere.SphereEvaluation(sphere: Sphere, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate a sphere at given parameters.\n\nParameters\n\nsphere: ~ansys.geometry.core.shapes.surfaces.sphere.Sphere\n\nSphere to evaluate.\n\nparameter: ParamUV\n\nParameters (u, v) to evaluate the sphere at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/SphereEvaluation.html#overview","title":"SphereEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsphere\n\nSphere being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nnormal\n\nThe normal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nSecond derivative with respect to the U and V parameters.\n\nvv_derivative\n\nSecond derivative with respect to the V parameter.\n\nmin_curvature\n\nMinimum curvature of the sphere.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature of the sphere.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/SphereEvaluation.html#import-detail","title":"SphereEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/sphere/SphereEvaluation.html#property-detail","title":"SphereEvaluation > Property detail","text":"Property detail\n\n\n\nproperty SphereEvaluation.sphere: Sphere\n\nSphere being evaluated.\n\n\n\nproperty SphereEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter that the evaluation is based upon.\n\n\n\nproperty SphereEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the sphere at this evaluation.\n\n\n\nproperty SphereEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nThe normal to the surface.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the sphere at this evaluation.\n\n\n\nproperty SphereEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the U parameter.\n\n\n\nproperty SphereEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the V parameter.\n\n\n\nproperty SphereEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U parameter.\n\n\n\nproperty SphereEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U and V parameters.\n\nReturns\n\nVector3D\n\nThe second derivative with respect to the U and V parameters.\n\n\n\nproperty SphereEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nThe second derivative with respect to the V parameter.\n\n\n\nproperty SphereEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nMinimum curvature of the sphere.\n\nReturns\n\nReal\n\nMinimum curvature of the sphere.\n\n\n\nproperty SphereEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMinimum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMinimum curvature direction.\n\n\n\nproperty SphereEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nMaximum curvature of the sphere.\n\nReturns\n\nReal\n\nMaximum curvature of the sphere.\n\n\n\nproperty SphereEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMaximum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMaximum curvature direction."},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#modeling-revolving-a-sketch","title":"Examples > Modeling: Revolving a sketch","text":"Modeling: Revolving a sketch\n\nThis example shows how to use the revolve_sketch() method to revolve a sketch around an axis to create a 3D body. You can also specify the angle of revolution to create a partial body.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#initialize-the-modeler","title":"Examples > Modeling: Revolving a sketch > Initialize the modeler","text":"Initialize the modeler\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#example-creating-a-quarter-of-a-donut","title":"Examples > Modeling: Revolving a sketch > Example: Creating a quarter of a donut","text":"Example: Creating a quarter of a donut\n\nThe following code snippets show how to use the revolve_sketch() function to create a quarter of a 3D donut. The process involves defining a quarter of a circle as a profile and then revolving it around the Z-axis to create a 3D body."},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#initialize-the-sketch-design","title":"Examples > Modeling: Revolving a sketch > Initialize the sketch design","text":"Initialize the sketch design\n\nCreate a design sketch named quarter-donut.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#define-circle-parameters","title":"Examples > Modeling: Revolving a sketch > Define circle parameters","text":"Define circle parameters\n\nSet path_radius, which represents the radius of the circular path that the profile circle sweeps along, to 5 units. Set profile_radius, which represents the radius of the profile circle that sweeps along the path to create the donut body, to 2 units.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#create-the-profile-circle","title":"Examples > Modeling: Revolving a sketch > Create the profile circle","text":"Create the profile circle\n\nCreate a circle on the XZ plane centered at the coordinates (5, 0, 0) and useprofile_radius to define the radius. This circle serves as the profile or cross-sectional shape of the donut.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#perform-the-revolve-operation","title":"Examples > Modeling: Revolving a sketch > Perform the revolve operation","text":"Perform the revolve operation\n\nRevolve the profile circle around the Z axis to create a quarter of a donut body. Set the angle of revolution to 90 degrees in the default direction, which is counterclockwise.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#perform-a-revolve-operation-with-a-negative-angle-of-revolution","title":"Examples > Modeling: Revolving a sketch > Perform a revolve operation with a negative angle of revolution","text":"Perform a revolve operation with a negative angle of revolution\n\nYou can use a negative angle of revolution to create a quarter of a donut in the opposite direction. The following code snippet shows how to create a quarter of a donut in the clockwise direction. The same profile circle is used, but the angle of revolution is set to -90 degrees.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/revolving.html#close-the-modeler","title":"Examples > Modeling: Revolving a sketch > Close the modeler","text":"Close the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/CircleEvaluation.html#circleevaluation","title":"CircleEvaluation","text":"CircleEvaluation\n\n\n\nclass ansys.geometry.core.shapes.curves.circle.CircleEvaluation(circle: Circle, parameter: ansys.geometry.core.typing.Real)\n\nBases: ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nProvides evaluation of a circle at a given parameter.\n\nParameters\n\ncircle: ~ansys.geometry.core.shapes.curves.circle.Circle\n\nCircle to evaluate.\n\nparameter: Real\n\nParameter to evaluate the circle at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/CircleEvaluation.html#overview","title":"CircleEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncircle\n\nCircle being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\ntangent\n\nTangent of the evaluation.\n\nnormal\n\nNormal to the circle.\n\nfirst_derivative\n\nFirst derivative of the evaluation.\n\nsecond_derivative\n\nSecond derivative of the evaluation.\n\ncurvature\n\nCurvature of the circle."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/CircleEvaluation.html#import-detail","title":"CircleEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/CircleEvaluation.html#property-detail","title":"CircleEvaluation > Property detail","text":"Property detail\n\n\n\nproperty CircleEvaluation.circle: Circle\n\nCircle being evaluated.\n\n\n\nproperty CircleEvaluation.parameter: ansys.geometry.core.typing.Real\n\nParameter that the evaluation is based upon.\n\n\n\nproperty CircleEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the circle at this evaluation.\n\n\n\nproperty CircleEvaluation.tangent: ansys.geometry.core.math.vector.UnitVector3D\n\nTangent of the evaluation.\n\nReturns\n\nUnitVector3D\n\nTangent unit vector to the circle at this evaluation.\n\n\n\nproperty CircleEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the circle.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the circle at this evaluation.\n\n\n\nproperty CircleEvaluation.first_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative of the evaluation.\n\nThe first derivative is in the direction of the tangent and has a\nmagnitude equal to the velocity (rate of change of position) at that\npoint.\n\nReturns\n\nVector3D\n\nFirst derivative of the evaluation.\n\n\n\nproperty CircleEvaluation.second_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative of the evaluation.\n\nReturns\n\nVector3D\n\nSecond derivative of the evaluation.\n\n\n\nproperty CircleEvaluation.curvature: ansys.geometry.core.typing.Real\n\nCurvature of the circle.\n\nReturns\n\nReal\n\nCurvature of the circle."},{"objectID":"Home","href":"getting_started/docker/index.html#docker-containers","title":"Docker containers","text":"Docker containers"},{"objectID":"Home","href":"getting_started/docker/index.html#what-is-docker","title":"Docker containers > What is Docker?","text":"What is Docker?\n\nDocker is an open platform for developing, shipping, and running apps in a\ncontainerized way.\n\nContainers are standard units of software that package the code and all its dependencies\nso that the app runs quickly and reliably from one computing environment to another.\n\nEnsure that the machine where the Geometry service is to run has Docker installed. Otherwise,\nsee Install Docker Engine in the Docker documentation."},{"objectID":"Home","href":"getting_started/docker/index.html#select-your-docker-container","title":"Docker containers > Select your Docker container","text":"Select your Docker container\n\nCurrently, the Geometry service backend is mainly delivered as a Windows Docker container.\nHowever, these containers require a Windows machine to run them.\n\nSelect the kind of Docker container you want to build:\n\nWindows Docker container\n\nBuild a Windows Docker container for the Geometry service\nand use it from PyAnsys Geometry. Explore the full potential\nof the Geometry service.\n\nwindows_container\n\nGo to Getting started\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/index.html#the-math-package","title":"The math package","text":"The math package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/index.html#summary","title":"The math package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nbbox\n\nProvides for managing a bounding box.\n\nconstants\n\nProvides mathematical constants.\n\nframe\n\nProvides for managing a frame.\n\nmatrix\n\nProvides matrix primitive representations.\n\nmisc\n\nProvides auxiliary math functions for PyAnsys Geometry.\n\nplane\n\nProvides primitive representation of a 2D plane in 3D space.\n\npoint\n\nProvides geometry primitive representation for 2D and 3D points.\n\nvector\n\nProvides for creating and managing 2D and 3D vectors.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/index.html#description","title":"The math package > Description","text":"Description\n\nPyAnsys Geometry math subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/index.html#the-toruspy-module","title":"The torus.py module","text":"The torus.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/index.html#summary","title":"The torus.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTorus\n\nProvides 3D torus representation.\n\nTorusEvaluation\n\nEvaluate the torus`` at given parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/torus/index.html#description","title":"The torus.py module > Description","text":"Description\n\nProvides for creating and managing a torus."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/GRPCPatternsServiceV0.html#grpcpatternsservicev0","title":"GRPCPatternsServiceV0","text":"GRPCPatternsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.patterns.GRPCPatternsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.patterns.GRPCPatternsService\n\nPatterns service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\npatterns service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/GRPCPatternsServiceV0.html#overview","title":"GRPCPatternsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_linear_pattern\n\nCreate a linear pattern of entities.\n\nmodify_linear_pattern\n\nModify a linear pattern of entities.\n\ncreate_circular_pattern\n\nCreate a circular pattern of entities.\n\nmodify_circular_pattern\n\nModify a circular pattern of entities.\n\ncreate_fill_pattern\n\nCreate a fill pattern of entities.\n\nupdate_fill_pattern\n\nUpdate a fill pattern of entities.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/GRPCPatternsServiceV0.html#import-detail","title":"GRPCPatternsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/GRPCPatternsServiceV0.html#attribute-detail","title":"GRPCPatternsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPatternsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/GRPCPatternsServiceV0.html#method-detail","title":"GRPCPatternsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCPatternsServiceV0.create_linear_pattern(**kwargs) -> dict\n\nCreate a linear pattern of entities.\n\n\n\nGRPCPatternsServiceV0.modify_linear_pattern(**kwargs) -> dict\n\nModify a linear pattern of entities.\n\n\n\nGRPCPatternsServiceV0.create_circular_pattern(**kwargs) -> dict\n\nCreate a circular pattern of entities.\n\n\n\nGRPCPatternsServiceV0.modify_circular_pattern(**kwargs) -> dict\n\nModify a circular pattern of entities.\n\n\n\nGRPCPatternsServiceV0.create_fill_pattern(**kwargs) -> dict\n\nCreate a fill pattern of entities.\n\n\n\nGRPCPatternsServiceV0.update_fill_pattern(**kwargs) -> dict\n\nUpdate a fill pattern of entities."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/GRPCModelToolsServiceV1.html#grpcmodeltoolsservicev1","title":"GRPCModelToolsServiceV1","text":"GRPCModelToolsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.model_tools.GRPCModelToolsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.model_tools.GRPCModelToolsService\n\nModel tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmodel tools service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/GRPCModelToolsServiceV1.html#overview","title":"GRPCModelToolsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nchamfer\n\nCreate a chamfer on the specified edges of a body.\n\nfillet\n\nCreate a fillet on the specified edges of a body.\n\nfull_fillet\n\nCreate a full fillet on the specified edges of a body.\n\nmove_rotate\n\nRotate the specified entities.\n\nmove_translate\n\nTranslate the specified entities.\n\ncreate_sketch_line\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/GRPCModelToolsServiceV1.html#import-detail","title":"GRPCModelToolsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/GRPCModelToolsServiceV1.html#method-detail","title":"GRPCModelToolsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCModelToolsServiceV1.chamfer(**kwargs) -> dict\n\nCreate a chamfer on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsServiceV1.fillet(**kwargs) -> dict\n\nCreate a fillet on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsServiceV1.full_fillet(**kwargs) -> dict\n\nCreate a full fillet on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsServiceV1.move_rotate(**kwargs) -> dict\n\nRotate the specified entities.\n\n\n\nabstractmethod GRPCModelToolsServiceV1.move_translate(**kwargs) -> dict\n\nTranslate the specified entities.\n\n\n\nabstractmethod GRPCModelToolsServiceV1.create_sketch_line(**kwargs) -> dict\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/Vertex.html#vertex","title":"Vertex","text":"Vertex\n\n\n\nclass ansys.geometry.core.designer.vertex.Vertex(id: str, position: numpy.ndarray | ansys.geometry.core.typing.RealSequence)\n\nBases: ansys.geometry.core.math.point.Point3D\n\nRepresents a single vertex of a body within the design assembly.\n\nThis class synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nThe unique identifier for the vertex.\n\nposition\n\nnp.ndarray or RealSequence\n\nThe position of the vertex in 3D space."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/Vertex.html#overview","title":"Vertex > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nGet the unique identifier of the vertex.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nReturn a string representation of the vertex."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/Vertex.html#import-detail","title":"Vertex > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/Vertex.html#property-detail","title":"Vertex > Property detail","text":"Property detail\n\n\n\nproperty Vertex.id: str\n\nGet the unique identifier of the vertex."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/vertex/Vertex.html#method-detail","title":"Vertex > Method detail","text":"Method detail\n\n\n\nVertex.__repr__() -> str\n\nReturn a string representation of the vertex."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/GRPCAdminService.html#grpcadminservice","title":"GRPCAdminService","text":"GRPCAdminService\n\n\n\nclass ansys.geometry.core._grpc._services.base.admin.GRPCAdminService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nAdmin service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/GRPCAdminService.html#overview","title":"GRPCAdminService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_backend\n\nGet server information.\n\nget_logs\n\nGet server logs.\n\nget_service_status\n\nGet server status (i.e. healthy or not)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/GRPCAdminService.html#import-detail","title":"GRPCAdminService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/GRPCAdminService.html#method-detail","title":"GRPCAdminService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCAdminService.get_backend(**kwargs) -> dict\n\nGet server information.\n\n\n\nabstractmethod GRPCAdminService.get_logs(**kwargs) -> dict\n\nGet server logs.\n\n\n\nabstractmethod GRPCAdminService.get_service_status(**kwargs) -> dict\n\nGet server status (i.e. healthy or not)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/index.html#the-facepy-module","title":"The face.py module","text":"The face.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/index.html#summary","title":"The face.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nFaceLoop\n\nProvides an internal class holding the face loops defined.\n\nFace\n\nRepresents a single face of a body within the design assembly.\n\nEnums\n\n\n\n\n\nSurfaceType\n\nProvides values for the surface types supported.\n\nFaceLoopType\n\nProvides values for the face loop types supported.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/index.html#description","title":"The face.py module > Description","text":"Description\n\nModule for managing a face."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/FillStyle.html#fillstyle","title":"FillStyle","text":"FillStyle\n\n\n\nclass ansys.geometry.core.designer.body.FillStyle(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for fill styles supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/FillStyle.html#overview","title":"FillStyle > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEFAULT\n\n\n\nOPAQUE\n\n\n\nTRANSPARENT\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/FillStyle.html#import-detail","title":"FillStyle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/FillStyle.html#attribute-detail","title":"FillStyle > Attribute detail","text":"Attribute detail\n\n\n\nFillStyle.DEFAULT = 0\n\n\n\n\n\nFillStyle.OPAQUE = 1\n\n\n\n\n\nFillStyle.TRANSPARENT = 2\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/index.html#the-backendpy-module","title":"The backend.py module","text":"The backend.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/index.html#summary","title":"The backend.py module > Summary","text":"Summary\n\nEnums\n\n\n\n\n\nBackendType\n\nProvides an enum holding the available backend types.\n\nApiVersions\n\nProvides an enum for all the compatibles API versions.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/index.html#description","title":"The backend.py module > Description","text":"Description\n\nModule providing definitions for the backend types."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/Surface.html#surface","title":"Surface","text":"Surface\n\n\n\nclass ansys.geometry.core.shapes.surfaces.surface.Surface\n\nBases: abc.ABC\n\nProvides the abstract base class for a 3D surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/Surface.html#overview","title":"Surface > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nparameterization\n\nParameterize the surface as a tuple (U and V respectively).\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\ntransformed_copy\n\nCreate a transformed copy of the surface.\n\n__eq__\n\nDetermine if two surfaces are equal.\n\nevaluate\n\nEvaluate the surface at the given parameter.\n\nproject_point\n\nProject a point to the surface.\n\nMethods\n\n\n\n\n\ntrim\n\nTrim this surface by bounding it with a BoxUV."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/Surface.html#import-detail","title":"Surface > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/Surface.html#method-detail","title":"Surface > Method detail","text":"Method detail\n\n\n\nabstractmethod Surface.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParameterize the surface as a tuple (U and V respectively).\n\n\n\nabstractmethod Surface.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod Surface.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary.\n\n\n\nabstractmethod Surface.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Surface\n\nCreate a transformed copy of the surface.\n\n\n\nabstractmethod Surface.__eq__(other: Surface) -> bool\n\nDetermine if two surfaces are equal.\n\n\n\nabstractmethod Surface.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the surface at the given parameter.\n\n\n\nabstractmethod Surface.project_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProject a point to the surface.\n\nThis method returns the evaluation at the closest point.\n\n\n\nSurface.trim(box_uv: ansys.geometry.core.shapes.box_uv.BoxUV) -> ansys.geometry.core.shapes.surfaces.trimmed_surface.TrimmedSurface\n\nTrim this surface by bounding it with a BoxUV.\n\nReturns\n\nTrimmedSurface\n\nThe resulting bounded surface."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/GRPCEdgesServiceV1.html#grpcedgesservicev1","title":"GRPCEdgesServiceV1","text":"GRPCEdgesServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.edges.GRPCEdgesServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.edges.GRPCEdgesService\n\nEdges service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nedges service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/GRPCEdgesServiceV1.html#overview","title":"GRPCEdgesServiceV1 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_edge\n\nGet edge.\n\nget_curve\n\nGet curve information for the edge.\n\nget_start_and_end_points\n\nGet start and end points for the edge.\n\nget_length\n\nGet the length of the edge.\n\nget_interval\n\nGet the interval of the edge.\n\nget_faces\n\nGet the faces that are connected to the edge.\n\nget_vertices\n\nGet the vertices that are connected to the edge.\n\nget_bounding_box\n\nGet the bounding box of the edge.\n\nextrude_edges\n\nExtrude edges.\n\nextrude_edges_up_to\n\nExtrude edges up to a face.\n\nmove_imprint_edges\n\nMove imprint edges.\n\noffset_edges\n\nOffset edges.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/GRPCEdgesServiceV1.html#import-detail","title":"GRPCEdgesServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/GRPCEdgesServiceV1.html#attribute-detail","title":"GRPCEdgesServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCEdgesServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/edges/GRPCEdgesServiceV1.html#method-detail","title":"GRPCEdgesServiceV1 > Method detail","text":"Method detail\n\n\n\nGRPCEdgesServiceV1.get_edge(**kwargs) -> dict\n\nGet edge.\n\n\n\nGRPCEdgesServiceV1.get_curve(**kwargs) -> dict\n\nGet curve information for the edge.\n\n\n\nGRPCEdgesServiceV1.get_start_and_end_points(**kwargs) -> dict\n\nGet start and end points for the edge.\n\n\n\nGRPCEdgesServiceV1.get_length(**kwargs) -> dict\n\nGet the length of the edge.\n\n\n\nGRPCEdgesServiceV1.get_interval(**kwargs) -> dict\n\nGet the interval of the edge.\n\n\n\nGRPCEdgesServiceV1.get_faces(**kwargs) -> dict\n\nGet the faces that are connected to the edge.\n\n\n\nGRPCEdgesServiceV1.get_vertices(**kwargs) -> dict\n\nGet the vertices that are connected to the edge.\n\n\n\nGRPCEdgesServiceV1.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of the edge.\n\n\n\nGRPCEdgesServiceV1.extrude_edges(**kwargs) -> dict\n\nExtrude edges.\n\n\n\nGRPCEdgesServiceV1.extrude_edges_up_to(**kwargs) -> dict\n\nExtrude edges up to a face.\n\n\n\nGRPCEdgesServiceV1.move_imprint_edges(**kwargs) -> dict\n\nMove imprint edges.\n\n\n\nGRPCEdgesServiceV1.offset_edges(**kwargs) -> dict\n\nOffset edges."},{"objectID":"Examples","href":"examples/03_modeling/surface_bodies.html#modeling-surface-bodies-and-trimmed-surfaces","title":"Examples > Modeling: Surface bodies and trimmed surfaces","text":"Modeling: Surface bodies and trimmed surfaces\n\nThis example shows how to trim different surfaces, and how to use those surfaces to create surface bodies."},{"objectID":"Examples","href":"examples/03_modeling/surface_bodies.html#create-a-surface","title":"Examples > Modeling: Surface bodies and trimmed surfaces > Create a surface","text":"Create a surface\n\nCreate a sphere surface. This can be done without launching the modeler.\n\n\n\n\n\nNow get information on how the surface is defined and parameterized.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/surface_bodies.html#trim-the-surface","title":"Examples > Modeling: Surface bodies and trimmed surfaces > Trim the surface","text":"Trim the surface\n\nFor a sphere, its parametization is (u: [0, 2*pi], v:[-pi/2, pi/2]), where u corresponds to longitude and v corresponds to latitude. You can trim a surface by providing new parameters.\n\n\n\n\n\nFrom a TrimmedSurface, you can always refer back to the underlying Surface if needed.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/surface_bodies.html#create-a-surface-body","title":"Examples > Modeling: Surface bodies and trimmed surfaces > Create a surface body","text":"Create a surface body\n\nNow create a surface body by launching the modeler session and providing the trimmed surface. Then plot the body to see how you created a quarter of a sphere as a surface body.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf the sphere was left untrimmed, it would create a solid body since the surface is fully closed. In this case, since the surface was open, it created a surface body.\n\nThis same process can be used with other surfaces including:\n\nCone\n\nCylinder\n\nPlane\n\nTorus\n\nEach surface has its own unique parameterization, which must be understood before trying to trim it."},{"objectID":"Examples","href":"examples/03_modeling/surface_bodies.html#close-session","title":"Examples > Modeling: Surface bodies and trimmed surfaces > Close session","text":"Close session\n\nWhen you finish interacting with your modeling service, you should close the active server session. This frees resources wherever the service is running.\n\nClose the server session.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/SketchEdge.html#sketchedge","title":"SketchEdge","text":"SketchEdge\n\n\n\nclass ansys.geometry.core.sketch.edge.SketchEdge\n\nProvides for modeling edges forming sketched shapes."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/SketchEdge.html#overview","title":"SketchEdge > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_point\n\nCheck if the edge contains the given point within a tolerance.\n\nMethods\n\n\n\n\n\nplane_change\n\nRedefine the plane containing SketchEdge objects.\n\nProperties\n\n\n\n\n\nstart\n\nStarting point of the edge.\n\nend\n\nEnding point of the edge.\n\nlength\n\nLength of the edge.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/SketchEdge.html#import-detail","title":"SketchEdge > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/SketchEdge.html#property-detail","title":"SketchEdge > Property detail","text":"Property detail\n\n\n\nproperty SketchEdge.start: ansys.geometry.core.math.point.Point2D\n\nAbstractmethod\n\n\n\nStarting point of the edge.\n\n\n\nproperty SketchEdge.end: ansys.geometry.core.math.point.Point2D\n\nAbstractmethod\n\n\n\nEnding point of the edge.\n\n\n\nproperty SketchEdge.length: pint.Quantity\n\nAbstractmethod\n\n\n\nLength of the edge.\n\n\n\nproperty SketchEdge.visualization_polydata: pyvista.PolyData\n\nAbstractmethod\n\n\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/SketchEdge.html#method-detail","title":"SketchEdge > Method detail","text":"Method detail\n\n\n\nabstractmethod SketchEdge.contains_point(point: ansys.geometry.core.math.point.Point2D, tol: float = 1e-06) -> bool\n\nCheck if the edge contains the given point within a tolerance.\n\n\n\nSketchEdge.plane_change(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nRedefine the plane containing SketchEdge objects.\n\nParameters\n\nplane\n\nPlane\n\nDesired new plane that is to contain the sketched edge.\n\nNotes\n\nThis implies that their 3D definition might suffer changes. By default, this\nmethod does nothing. It is required to be implemented in child SketchEdge\nclasses."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/GRPCCommandsServiceV0.html#grpccommandsservicev0","title":"GRPCCommandsServiceV0","text":"GRPCCommandsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.commands.GRPCCommandsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.commands.GRPCCommandsService\n\nCommands service for gRPC communication with the Geometry server.\n\nThis class provides methods to call commands in the\nGeometry server using gRPC. It is specifically designed for the v0\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/GRPCCommandsServiceV0.html#overview","title":"GRPCCommandsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_name\n\nSet the name of an object.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/GRPCCommandsServiceV0.html#import-detail","title":"GRPCCommandsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/GRPCCommandsServiceV0.html#attribute-detail","title":"GRPCCommandsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCommandsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/commands/GRPCCommandsServiceV0.html#method-detail","title":"GRPCCommandsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCCommandsServiceV0.set_name(**kwargs) -> dict\n\nSet the name of an object."},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#pyansys-geometry-101-plotter","title":"Examples > PyAnsys Geometry 101: Plotter","text":"PyAnsys Geometry 101: Plotter\n\nThis example provides an overview of PyAnsys Geometry’s plotting capabilities, focusing on its plotter features. After reviewing the fundamental concepts of sketching and modeling in PyAnsys Geometry, it shows how to leverage these key plotting capabilities:\n\nMulti-object plotting: You can conveniently plot a list of elements, including objects created in both PyAnsys Geometry and PyVista libraries.\n\nInteractive object selection: You can interactively select PyAnsys Geometry objects within the scene. This enables efficient manipulation of these objects in subsequent scripting."},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#perform-required-imports","title":"Examples > PyAnsys Geometry 101: Plotter > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#launch-modeling-service","title":"Examples > PyAnsys Geometry 101: Plotter > Launch modeling service","text":"Launch modeling service\n\nLaunch a modeling service session.\n\n\n\n\n\n\n\n\n\nYou can also launch your own services and connect to them. For information on connecting to an existing service, see the Modeler API documentation."},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#instantiate-design-and-initialize-object-list","title":"Examples > PyAnsys Geometry 101: Plotter > Instantiate design and initialize object list","text":"Instantiate design and initialize object list\n\nInstantiate a new design to work on and initialize a list of objects for plotting.\n\n\n\n\n\nYou are now ready to create some objects and use the plotter capabilities."},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#create-a-pyansys-geometry-body-cylinder","title":"Examples > PyAnsys Geometry 101: Plotter > Create a PyAnsys Geometry body cylinder","text":"Create a PyAnsys Geometry body cylinder\n\nUse PyAnsys Geometry to create a body cylinder.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#create-a-pyansys-geometry-arc-sketch","title":"Examples > PyAnsys Geometry 101: Plotter > Create a PyAnsys Geometry arc sketch","text":"Create a PyAnsys Geometry arc sketch\n\nUse PyAnsys Geometry to create an arc sketch.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#create-a-pyvista-cylinder","title":"Examples > PyAnsys Geometry 101: Plotter > Create a PyVista cylinder","text":"Create a PyVista cylinder\n\nUse PyVista to create a cylinder.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#create-a-pyvista-multiblock","title":"Examples > PyAnsys Geometry 101: Plotter > Create a PyVista multiblock","text":"Create a PyVista multiblock\n\nUse PyVista to create a multiblock with a sphere and a cube.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#create-a-pyansys-geometry-body-box","title":"Examples > PyAnsys Geometry 101: Plotter > Create a PyAnsys Geometry body box","text":"Create a PyAnsys Geometry body box\n\nUse PyAnsys Geometry to create a body box that is a cube.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#plot-objects","title":"Examples > PyAnsys Geometry 101: Plotter > Plot objects","text":"Plot objects\n\nWhen plotting the created objects, you have several options.\n\nYou can simply plot one of the created objects.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can plot the whole list of objects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Python visualizer is used by default. However, you can also use trame for visualization."},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#clip-objects","title":"Examples > PyAnsys Geometry 101: Plotter > Clip objects","text":"Clip objects\n\nYou can clip any object represented in the plotter by defining a Plane object that intersects the target object.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#select-objects-interactively","title":"Examples > PyAnsys Geometry 101: Plotter > Select objects interactively","text":"Select objects interactively\n\nPyAnsys Geometry’s plotter supports interactive object selection within the scene. This enables you to pick objects for subsequent script manipulation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt is also possible to enable picking directly for a specific design or component object alone. In the following cell, picking is enabled for the design object.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#render-in-different-colors","title":"Examples > PyAnsys Geometry 101: Plotter > Render in different colors","text":"Render in different colors\n\nYou can render the objects in different colors automatically using PyVista’s default color cycler. In order to do this, activate the multi_colors=True option when calling the plot() method.\n\nIn the following cell you can create a new design and plot a prism and a cylinder in different colors.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/05_plotter_picker.html#close-session","title":"Examples > PyAnsys Geometry 101: Plotter > Close session","text":"Close session\n\nWhen you finish interacting with your modeling service, you should close the active server session. This frees resources wherever the service is running.\n\nClose the server session.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/NamedSelection.html#namedselection","title":"NamedSelection","text":"NamedSelection\n\n\n\nclass ansys.geometry.core.designer.selection.NamedSelection(name: str, design: ansys.geometry.core.designer.design.Design, grpc_client: ansys.geometry.core.connection.client.GrpcClient, bodies: list[ansys.geometry.core.designer.body.Body] | None = None, faces: list[ansys.geometry.core.designer.face.Face] | None = None, edges: list[ansys.geometry.core.designer.edge.Edge] | None = None, beams: list[ansys.geometry.core.designer.beam.Beam] | None = None, design_points: list[ansys.geometry.core.designer.designpoint.DesignPoint] | None = None, components: list[ansys.geometry.core.designer.component.Component] | None = None, vertices: list[ansys.geometry.core.designer.vertex.Vertex] | None = None, preexisting_id: str | None = None)\n\nRepresents a single named selection within the design assembly.\n\nThis class synchronizes to a design within a supporting Geometry service instance.\n\nA named selection organizes one or more design entities together for common actions\nagainst the entire group.\n\nParameters\n\nname\n\npython:str\n\nUser-defined name for the named selection.\n\ndesign\n\nDesign\n\nDesign instance to which the named selection belongs.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling.\n\nbodies\n\npython:list[Body], default: python:None\n\nAll bodies to include in the named selection.\n\nfaces\n\npython:list[Face], default: python:None\n\nAll faces to include in the named selection.\n\nedges\n\npython:list[Edge], default: python:None\n\nAll edges to include in the named selection.\n\nbeams\n\npython:list[Beam], default: python:None\n\nAll beams to include in the named selection.\n\ndesign_points\n\npython:list[DesignPoints], default: python:None\n\nAll design points to include in the named selection.\n\ncomponents: list[Component], default: None\n\nAll components to include in the named selection."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/NamedSelection.html#overview","title":"NamedSelection > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the named selection.\n\nname\n\nName of the named selection.\n\nbodies\n\nAll bodies in the named selection.\n\nfaces\n\nAll faces in the named selection.\n\nedges\n\nAll edges in the named selection.\n\nbeams\n\nAll beams in the named selection.\n\ndesign_points\n\nAll design points in the named selection.\n\ncomponents\n\nAll components in the named selection.\n\nvertices\n\nAll vertices in the named selection.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the NamedSelection as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/NamedSelection.html#import-detail","title":"NamedSelection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/NamedSelection.html#property-detail","title":"NamedSelection > Property detail","text":"Property detail\n\n\n\nproperty NamedSelection.id: str\n\nID of the named selection.\n\n\n\nproperty NamedSelection.name: str\n\nName of the named selection.\n\n\n\nproperty NamedSelection.bodies: list[ansys.geometry.core.designer.body.Body]\n\nAll bodies in the named selection.\n\n\n\nproperty NamedSelection.faces: list[ansys.geometry.core.designer.face.Face]\n\nAll faces in the named selection.\n\n\n\nproperty NamedSelection.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nAll edges in the named selection.\n\n\n\nproperty NamedSelection.beams: list[ansys.geometry.core.designer.beam.Beam]\n\nAll beams in the named selection.\n\n\n\nproperty NamedSelection.design_points: list[ansys.geometry.core.designer.designpoint.DesignPoint]\n\nAll design points in the named selection.\n\n\n\nproperty NamedSelection.components: list[ansys.geometry.core.designer.component.Component]\n\nAll components in the named selection.\n\n\n\nproperty NamedSelection.vertices: list[ansys.geometry.core.designer.vertex.Vertex]\n\nAll vertices in the named selection."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/selection/NamedSelection.html#method-detail","title":"NamedSelection > Method detail","text":"Method detail\n\n\n\nNamedSelection.__repr__() -> str\n\nRepresent the NamedSelection as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneEvaluation.html#planeevaluation","title":"PlaneEvaluation","text":"PlaneEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.plane.PlaneEvaluation(plane: PlaneSurface, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProvides evaluation of a plane at given parameters.\n\nParameters\n\nplane: ~ansys.geometry.core.shapes.surfaces.plane.PlaneSurface\n\nPlane to evaluate.\n\nparameter: ParamUV\n\nParameters (u, v) to evaluate the plane at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneEvaluation.html#overview","title":"PlaneEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nplane\n\nPlane being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPoint on the surface, based on the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to u.\n\nv_derivative\n\nFirst derivative with respect to v.\n\nuu_derivative\n\nSecond derivative with respect to u.\n\nuv_derivative\n\nSecond derivative with respect to u and v.\n\nvv_derivative\n\nSecond derivative with respect to v.\n\nmin_curvature\n\nMinimum curvature.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneEvaluation.html#import-detail","title":"PlaneEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneEvaluation.html#property-detail","title":"PlaneEvaluation > Property detail","text":"Property detail\n\n\n\nproperty PlaneEvaluation.plane: PlaneSurface\n\nPlane being evaluated.\n\n\n\nproperty PlaneEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter that the evaluation is based upon.\n\n\n\nproperty PlaneEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPoint on the surface, based on the evaluation.\n\n\n\nproperty PlaneEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the surface.\n\n\n\nproperty PlaneEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to u.\n\n\n\nproperty PlaneEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to v.\n\n\n\nproperty PlaneEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to u.\n\n\n\nproperty PlaneEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to u and v.\n\n\n\nproperty PlaneEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to v.\n\n\n\nproperty PlaneEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nMinimum curvature.\n\n\n\nproperty PlaneEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMinimum curvature direction.\n\n\n\nproperty PlaneEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nMaximum curvature.\n\n\n\nproperty PlaneEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/index.html#the-designer-package","title":"The designer package","text":"The designer package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/index.html#summary","title":"The designer package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nbeam\n\nProvides for creating and managing a beam.\n\nbody\n\nProvides for managing a body.\n\ncomponent\n\nProvides for managing components.\n\ncoordinate_system\n\nProvides for managing a user-defined coordinate system.\n\ndesign\n\nProvides for managing designs.\n\ndesignpoint\n\nModule for creating and managing design points.\n\nedge\n\nModule for managing an edge.\n\nface\n\nModule for managing a face.\n\ngeometry_commands\n\nProvides tools for pulling geometry.\n\nmating_conditions\n\nProvides dataclasses for mating conditions.\n\npart\n\nModule providing fundamental data of an assembly.\n\nselection\n\nModule for creating a named selection.\n\nvertex\n\nModule for managing a vertex.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/index.html#description","title":"The designer package > Description","text":"Description\n\nPyAnsys Geometry designer subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/index.html#the-plotting-package","title":"The plotting package","text":"The plotting package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/index.html#summary","title":"The plotting package > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\nwidgets\n\nSubmodule providing widgets for the PyAnsys Geometry plotter.\n\nSubmodules\n\n\n\n\n\nplotter\n\nProvides plotting for various PyAnsys Geometry objects.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/index.html#description","title":"The plotting package > Description","text":"Description\n\nProvides the PyAnsys Geometry plotting subpackage."},{"objectID":"Home","href":"getting_started/local/index.html#launch-a-local-session","title":"Launch a local session","text":"Launch a local session\n\nIf Ansys 2024 R1 or later and PyAnsys Geometry are installed, you can create a local backend session using\nDiscovery, SpaceClaim, or the Geometry service. Once the backend is running, PyAnsys Geometry can manage the connection.\n\nTo launch and establish a connection to the service, open Python and use the following commands for\neither Discovery, SpaceClaim, or the Geometry service.\n\nDiscovery\n\n\n\nSpaceClaim\n\n\n\nGeometry service\n\n\n\nWhen launching via Geometry Service, if you have a custom local install, you can define the path of this install\nin the ANSYS_GEOMETRY_SERVICE_ROOT environment variable. In that case, the launcher uses this location by default.\n\nPowershell\n\n\n\nWindows CMD\n\n\n\nLinux\n\n\n\nFor more information on the arguments accepted by the launcher methods, see\ntheir API documentation:\n\nlaunch_modeler_with_discovery\n\nlaunch_modeler_with_spaceclaim\n\nlaunch_modeler_with_geometry_service\n\nBecause this is the first release of the Geometry service, you cannot yet define a product version\nor API version.\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/TrimmedSurface.html#trimmedsurface","title":"TrimmedSurface","text":"TrimmedSurface\n\n\n\nclass ansys.geometry.core.shapes.surfaces.trimmed_surface.TrimmedSurface(geometry: ansys.geometry.core.shapes.surfaces.surface.Surface, box_uv: ansys.geometry.core.shapes.box_uv.BoxUV)\n\nRepresents a trimmed surface.\n\nA trimmed surface is a surface that has a boundary. This boundary comes in the form of a\nbounding BoxUV.\n\nParameters\n\nface\n\nFace\n\nFace that the trimmed surface belongs to.\n\ngeometry\n\nSurface\n\nUnderlying mathematical representation of the surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/TrimmedSurface.html#overview","title":"TrimmedSurface > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_proportional_parameters\n\nConvert non-proportional parameters into proportional parameters.\n\nnormal\n\nProvide the normal to the surface.\n\nproject_point\n\nProject a point onto the surface and evaluate it at that location.\n\nevaluate_proportion\n\nEvaluate the surface at proportional u and v parameters.\n\nProperties\n\n\n\n\n\ngeometry\n\nUnderlying mathematical surface.\n\nbox_uv\n\nBounding BoxUV of the surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/TrimmedSurface.html#import-detail","title":"TrimmedSurface > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/TrimmedSurface.html#property-detail","title":"TrimmedSurface > Property detail","text":"Property detail\n\n\n\nproperty TrimmedSurface.geometry: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nUnderlying mathematical surface.\n\n\n\nproperty TrimmedSurface.box_uv: ansys.geometry.core.shapes.box_uv.BoxUV\n\nBounding BoxUV of the surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/TrimmedSurface.html#method-detail","title":"TrimmedSurface > Method detail","text":"Method detail\n\n\n\nTrimmedSurface.get_proportional_parameters(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> ansys.geometry.core.shapes.parameterization.ParamUV\n\nConvert non-proportional parameters into proportional parameters.\n\nParameters\n\nparam_uv\n\nParamUV\n\nNon-proportional UV parameters.\n\nReturns\n\nParamUV\n\nProportional (from 0-1) UV parameters.\n\n\n\nTrimmedSurface.normal(u: ansys.geometry.core.typing.Real, v: ansys.geometry.core.typing.Real) -> ansys.geometry.core.math.vector.UnitVector3D\n\nProvide the normal to the surface.\n\nParameters\n\nu\n\nReal\n\nFirst coordinate of the 2D representation of a surface in UV space.\n\nv\n\nReal\n\nSecond coordinate of the 2D representation of a surface in UV space.\n\nReturns\n\nUnitVector3D\n\nUnit vector is normal to the surface at the given UV coordinates.\n\n\n\nTrimmedSurface.project_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProject a point onto the surface and evaluate it at that location.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the surface.\n\nReturns\n\nSurfaceEvaluation\n\nResulting evaluation.\n\n\n\nTrimmedSurface.evaluate_proportion(u: ansys.geometry.core.typing.Real, v: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the surface at proportional u and v parameters.\n\nParameters\n\nu\n\nReal\n\nU parameter in the proportional range [0,1].\n\nv\n\nReal\n\nV parameter in the proportional range [0,1].\n\nReturns\n\nSurfaceEvaluation\n\nResulting surface evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/index.html#the-slotpy-module","title":"The slot.py module","text":"The slot.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/index.html#summary","title":"The slot.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSlot\n\nProvides for modeling a 2D slot.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/index.html#description","title":"The slot.py module > Description","text":"Description\n\nProvides for creating and managing a slot."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/index.html#the-bboxpy-module","title":"The bbox.py module","text":"The bbox.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/index.html#summary","title":"The bbox.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBoundingBox2D\n\nMaintains the X and Y dimensions.\n\nBoundingBox\n\nMaintains the box structure for Bounding Boxes.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/index.html#description","title":"The bbox.py module > Description","text":"Description\n\nProvides for managing a bounding box."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/index.html#the-circlepy-module","title":"The circle.py module","text":"The circle.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/index.html#summary","title":"The circle.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCircle\n\nProvides 3D circle representation.\n\nCircleEvaluation\n\nProvides evaluation of a circle at a given parameter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/circle/index.html#description","title":"The circle.py module > Description","text":"Description\n\nProvides for creating and managing a circle."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/index.html#the-edgepy-module","title":"The edge.py module","text":"The edge.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/index.html#summary","title":"The edge.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchEdge\n\nProvides for modeling edges forming sketched shapes.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/edge/index.html#description","title":"The edge.py module > Description","text":"Description\n\nProvides for creating and managing an edge."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/BackendType.html#backendtype","title":"BackendType","text":"BackendType\n\n\n\nclass ansys.geometry.core.connection.backend.BackendType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides an enum holding the available backend types."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/BackendType.html#overview","title":"BackendType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDISCOVERY\n\n\n\nSPACECLAIM\n\n\n\nWINDOWS_SERVICE\n\n\n\nLINUX_SERVICE\n\n\n\nCORE_WINDOWS\n\n\n\nCORE_LINUX\n\n\n\nDISCOVERY_HEADLESS\n\n\n\nStatic methods\n\n\n\n\n\nis_core_service\n\nDetermine whether the backend is CoreService based or not.\n\nis_headless_service\n\nDetermine whether the backend is a headless service or not.\n\nis_linux_service\n\nDetermine whether the backend is a Linux service or not."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/BackendType.html#import-detail","title":"BackendType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/BackendType.html#attribute-detail","title":"BackendType > Attribute detail","text":"Attribute detail\n\n\n\nBackendType.DISCOVERY = 0\n\n\n\n\n\nBackendType.SPACECLAIM = 1\n\n\n\n\n\nBackendType.WINDOWS_SERVICE = 2\n\n\n\n\n\nBackendType.LINUX_SERVICE = 3\n\n\n\n\n\nBackendType.CORE_WINDOWS = 4\n\n\n\n\n\nBackendType.CORE_LINUX = 5\n\n\n\n\n\nBackendType.DISCOVERY_HEADLESS = 6\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/BackendType.html#method-detail","title":"BackendType > Method detail","text":"Method detail\n\n\n\nstatic BackendType.is_core_service(backend_type: BackendType) -> bool\n\nDetermine whether the backend is CoreService based or not.\n\nParameters\n\nbackend_type\n\nBackendType\n\nThe backend type to check whether or not it’s a CoreService type.\n\nReturns\n\nbool\n\nTrue if the backend is CoreService based, False otherwise.\n\n\n\nstatic BackendType.is_headless_service(backend_type: BackendType) -> bool\n\nDetermine whether the backend is a headless service or not.\n\nParameters\n\nbackend_type\n\nBackendType\n\nThe backend type to check whether or not it’s a headless service.\n\nReturns\n\nbool\n\nTrue if the backend is a headless service, False otherwise.\n\n\n\nstatic BackendType.is_linux_service(backend_type: BackendType) -> bool\n\nDetermine whether the backend is a Linux service or not.\n\nParameters\n\nbackend_type\n\nBackendType\n\nThe backend type to check whether or not it’s running on Linux.\n\nReturns\n\nbool\n\nTrue if the backend is running on Linux, False otherwise."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MasterBody.html#masterbody","title":"MasterBody","text":"MasterBody\n\n\n\nclass ansys.geometry.core.designer.body.MasterBody(id: str, name: str, grpc_client: ansys.geometry.core.connection.client.GrpcClient, is_surface: bool = False)\n\nBases: IBody\n\nRepresents solids and surfaces organized within the design assembly.\n\nSolids and surfaces synchronize to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the body.\n\nname\n\npython:str\n\nUser-defined label for the body.\n\nparent_component\n\nComponent\n\nParent component to place the new component under within the design assembly.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nis_surface\n\nbool, default: python:False\n\nWhether the master body is a surface or an 3D object (with volume). The default\nis False, in which case the master body is a surface. When True, the\nmaster body is a 3D object (with volume)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MasterBody.html#overview","title":"MasterBody > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nimprint_curves\n\nImprint all specified geometries onto specified faces of the body.\n\nproject_curves\n\nProject all specified geometries onto the body.\n\nimprint_projected_curves\n\nProject and imprint specified geometries onto the body.\n\ncopy\n\nCreate a copy of the body under the specified parent.\n\nplot\n\nPlot the body.\n\nintersect\n\nIntersect two (or more) bodies.\n\nsubtract\n\nSubtract two (or more) bodies.\n\nunite\n\nUnite two (or more) bodies.\n\nMethods\n\n\n\n\n\nreset_tessellation_cache\n\nDecorate MasterBody methods that need tessellation cache update.\n\nassign_material\n\nAssign a material against the active design.\n\nget_assigned_material\n\nGet the assigned material of the body.\n\nremove_assigned_material\n\nRemove the material assigned to the body.\n\nadd_midsurface_thickness\n\nAdd a mid-surface thickness to a surface body.\n\nadd_midsurface_offset\n\nAdd a mid-surface offset to a surface body.\n\ntranslate\n\nTranslate the body in a specified direction and distance.\n\nset_name\n\nSet the name of the body.\n\nset_fill_style\n\nSet the fill style of the body.\n\nset_suppressed\n\nSet the body suppression state.\n\nset_color\n\nSet the color of the body.\n\nset_opacity\n\nSet the opacity of the body.\n\nrotate\n\nRotate the geometry body around the specified axis by a given angle.\n\nscale\n\nScale the geometry body by the given value.\n\nmap\n\nMap the geometry body to the new specified frame.\n\nmirror\n\nMirror the geometry body across the specified plane.\n\nget_collision\n\nGet the collision state between bodies.\n\nget_raw_tessellation\n\nTessellate the body and return the raw tessellation data.\n\ntessellate\n\nTessellate the body and return the geometry as triangles.\n\nshell_body\n\nShell the body to the thickness specified.\n\nremove_faces\n\nShell by removing a given set of faces.\n\ncombine_merge\n\nCombine this body with another body or bodies, merging them into a single body.\n\nProperties\n\n\n\n\n\nid\n\nGet the ID of the body as a string.\n\nname\n\nGet the name of the body.\n\nfill_style\n\nGet the fill style of the body.\n\nis_suppressed\n\nGet the body suppression state.\n\ncolor\n\nGet the current color of the body.\n\nopacity\n\nGet the float value of the opacity for the body.\n\nis_surface\n\nCheck if the body is a planar body.\n\nsurface_thickness\n\nGet the surface thickness of a surface body.\n\nsurface_offset\n\nGet the surface offset type of a surface body.\n\nfaces\n\nGet a list of all faces within the body.\n\nedges\n\nGet a list of all edges within the body.\n\nvertices\n\nGet a list of all vertices within the body.\n\nis_alive\n\nCheck if the body is still alive and has not been deleted.\n\nvolume\n\nCalculate the volume of the body.\n\nmaterial\n\nGet the assigned material of the body.\n\nbounding_box\n\nGet the bounding box of the body.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the master body as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MasterBody.html#import-detail","title":"MasterBody > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MasterBody.html#property-detail","title":"MasterBody > Property detail","text":"Property detail\n\n\n\nproperty MasterBody.id: str\n\nGet the ID of the body as a string.\n\n\n\nproperty MasterBody.name: str\n\nGet the name of the body.\n\n\n\nproperty MasterBody.fill_style: str\n\nGet the fill style of the body.\n\n\n\nproperty MasterBody.is_suppressed: bool\n\nGet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nproperty MasterBody.color: str\n\nGet the current color of the body.\n\n\n\nproperty MasterBody.opacity: float\n\nGet the float value of the opacity for the body.\n\n\n\nproperty MasterBody.is_surface: bool\n\nCheck if the body is a planar body.\n\n\n\nproperty MasterBody.surface_thickness: pint.Quantity | None\n\nGet the surface thickness of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface thickness.\n\n\n\nproperty MasterBody.surface_offset: MidSurfaceOffsetType | None\n\nGet the surface offset type of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface offset.\n\n\n\nproperty MasterBody.faces: list[ansys.geometry.core.designer.face.Face]\n\nGet a list of all faces within the body.\n\nReturns\n\npython:list[Face]\n\n\n\n\n\nproperty MasterBody.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nGet a list of all edges within the body.\n\nReturns\n\npython:list[Edge]\n\n\n\n\n\nproperty MasterBody.vertices: list[ansys.geometry.core.designer.vertex.Vertex]\n\nGet a list of all vertices within the body.\n\nReturns\n\npython:list[Vertex]\n\n\n\n\n\nproperty MasterBody.is_alive: bool\n\nCheck if the body is still alive and has not been deleted.\n\n\n\nproperty MasterBody.volume: pint.Quantity\n\nCalculate the volume of the body.\n\nNotes\n\nWhen dealing with a planar surface, a value of 0 is returned as a volume.\n\n\n\nproperty MasterBody.material: ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nproperty MasterBody.bounding_box: ansys.geometry.core.math.bbox.BoundingBox\n\nGet the bounding box of the body.\n\nReturns\n\nBoundingBox\n\nBounding box of the body.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MasterBody.html#method-detail","title":"MasterBody > Method detail","text":"Method detail\n\n\n\nMasterBody.reset_tessellation_cache()\n\nDecorate MasterBody methods that need tessellation cache update.\n\nParameters\n\nfunc\n\nmethod\n\nMethod to call.\n\nReturns\n\nAny\n\nOutput of the method, if any.\n\n\n\nMasterBody.assign_material(material: ansys.geometry.core.materials.material.Material) -> None\n\nAssign a material against the active design.\n\nParameters\n\nmaterial\n\nMaterial\n\nSource material data.\n\n\n\nMasterBody.get_assigned_material() -> ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nMasterBody.remove_assigned_material() -> None\n\nRemove the material assigned to the body.\n\n\n\nMasterBody.add_midsurface_thickness(thickness: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> None\n\nAdd a mid-surface thickness to a surface body.\n\nParameters\n\nthickness\n\nDistance | Quantity | Real\n\nThickness to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface thickness assignment.\n\n\n\nMasterBody.add_midsurface_offset(offset: MidSurfaceOffsetType) -> None\n\nAdd a mid-surface offset to a surface body.\n\nParameters\n\noffset_type\n\nMidSurfaceOffsetType\n\nSurface offset to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface offset assignment.\n\n\n\nabstractmethod MasterBody.imprint_curves(faces: list[ansys.geometry.core.designer.face.Face], sketch: ansys.geometry.core.sketch.sketch.Sketch) -> tuple[list[ansys.geometry.core.designer.edge.Edge], list[ansys.geometry.core.designer.face.Face]]\n\nImprint all specified geometries onto specified faces of the body.\n\nParameters\n\nfaces: list[Face]\n\nlist of faces to imprint the curves of the sketch onto.\n\nsketch: Sketch\n\nAll curves to imprint on the faces.\n\nReturns\n\npython:tuple[python:list[Edge], python:list[Face]]\n\nAll impacted edges and faces from the imprint operation.\n\n\n\nabstractmethod MasterBody.project_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject all specified geometries onto the body.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll faces from the project curves operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nabstractmethod MasterBody.imprint_projected_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject and imprint specified geometries onto the body.\n\nThis method combines the project_curves() and imprint_curves() method into\none method. It has higher performance than calling them back-to-back when dealing\nwith many curves. Because it is a specialized function, this method only returns\nthe faces (and not the edges) from the imprint operation.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll imprinted faces from the operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nMasterBody.translate(direction: ansys.geometry.core.math.vector.UnitVector3D, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> None\n\nTranslate the body in a specified direction and distance.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the translation.\n\ndistance: ~pint.Quantity | Distance | Real\n\nDistance (magnitude) of the translation.\n\n\n\nMasterBody.set_name(name: str) -> None\n\nSet the name of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nMasterBody.set_fill_style(fill_style: FillStyle) -> None\n\nSet the fill style of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nMasterBody.set_suppressed(suppressed: bool) -> None\n\nSet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nMasterBody.set_color(color: str | tuple[float, float, float] | tuple[float, float, float, float]) -> None\n\nSet the color of the body.\n\nParameters\n\ncolor\n\npython:str | python:tuple[python:float, python:float, python:float] | python:tuple[python:float, python:float, python:float, python:float]\n\nColor to set the body to. This can be a string representing a color name\nor a tuple of RGB values in the range [0, 1] (RGBA) or [0, 255] (pure RGB).\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nMasterBody.set_opacity(opacity: float) -> None\n\nSet the opacity of the body.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nMasterBody.rotate(axis_origin: ansys.geometry.core.math.point.Point3D, axis_direction: ansys.geometry.core.math.vector.UnitVector3D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real) -> None\n\nRotate the geometry body around the specified axis by a given angle.\n\nParameters\n\naxis_origin: Point3D\n\nOrigin of the rotational axis.\n\naxis_direction: UnitVector3D\n\nThe axis of rotation.\n\nangle: ~pint.Quantity | Angle | Real\n\nAngle (magnitude) of the rotation.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nMasterBody.scale(value: ansys.geometry.core.typing.Real) -> None\n\nScale the geometry body by the given value.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nvalue: Real\n\nValue to scale the body by.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nMasterBody.map(frame: ansys.geometry.core.math.frame.Frame) -> None\n\nMap the geometry body to the new specified frame.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nframe: Frame\n\nStructure defining the orientation of the body.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nMasterBody.mirror(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nMirror the geometry body across the specified plane.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nplane: Plane\n\nRepresents the mirror.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nMasterBody.get_collision(body: Body) -> CollisionType\n\nGet the collision state between bodies.\n\nParameters\n\nbody: Body\n\nObject that the collision state is checked with.\n\nReturns\n\nCollisionType\n\nEnum that defines the collision state between bodies.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod MasterBody.copy(parent: ansys.geometry.core.designer.component.Component, name: str = None) -> Body\n\nCreate a copy of the body under the specified parent.\n\nParameters\n\nparent: Component\n\nParent component to place the new body under within the design assembly.\n\nname: str\n\nName to give the new body.\n\nReturns\n\nBody\n\nCopy of the body.\n\n\n\nMasterBody.get_raw_tessellation(tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> dict\n\nTessellate the body and return the raw tessellation data.\n\nParameters\n\ntransform\n\nMatrix44, default: IDENTITY_MATRIX44\n\nA transformation matrix to apply to the tessellation.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\npython:dict\n\nDictionary with face and edge IDs as keys and face and edge tessellation data as values.\n\n\n\nMasterBody.tessellate(merge: bool = False, transform: ansys.geometry.core.math.matrix.Matrix44 = IDENTITY_MATRIX44, tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> pyvista.PolyData | pyvista.MultiBlock\n\nTessellate the body and return the geometry as triangles.\n\nParameters\n\nmerge\n\nbool, default: python:False\n\nWhether to merge the body into a single mesh. When False (default), the\nnumber of triangles are preserved and only the topology is merged.\nWhen True, the individual faces of the tessellation are merged.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\nPolyData, MultiBlock\n\nMerged pyvista.PolyData if merge=True or a composite dataset.\n\nExamples\n\nExtrude a box centered at the origin to create a rectangular body and\ntessellate it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> my_comp = design.add_component(\"my-comp\")\n>>> body = my_comp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> blocks = body.tessellate()\n>>> blocks\n>>> MultiBlock(0x7F94EC757460)\n     N Blocks:  6\n     X Bounds:  0.000, 4.000\n     Y Bounds:  -1.000, 0.000\n     Z Bounds:  -0.500, 4.500\n\nMerge the body:\n\n>>> mesh = body.tessellate(merge=True)\n>>> mesh\nPolyData (0x7f94ec75f3a0)\n  N Cells:      12\n  N Points:     24\n  X Bounds:     0.000e+00, 4.000e+00\n  Y Bounds:     -1.000e+00, 0.000e+00\n  Z Bounds:     -5.000e-01, 4.500e+00\n  N Arrays:     0\n\n\n\nMasterBody.shell_body(offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nShell the body to the thickness specified.\n\nParameters\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nMasterBody.remove_faces(selection: ansys.geometry.core.designer.face.Face | collections.abc.Iterable[ansys.geometry.core.designer.face.Face], offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nShell by removing a given set of faces.\n\nParameters\n\nselection\n\nFace | Iterable[Face]\n\nFace or faces to be removed.\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nMasterBody.combine_merge(other: Body | list[Body]) -> None\n\nCombine this body with another body or bodies, merging them into a single body.\n\nParameters\n\nother\n\nUnion[Body, python:list[Body]]\n\nThe body or list of bodies to combine with this body.\n\nNotes\n\nThe self parameter is directly modified, and the other bodies are consumed.\n\n\n\nabstractmethod MasterBody.plot(merge: bool = True, screenshot: str | None = None, use_trame: bool | None = None, use_service_colors: bool | None = None, **plotting_options: dict | None) -> None\n\nPlot the body.\n\nParameters\n\nmerge\n\nbool, default: python:True\n\nWhether to merge the body into a single mesh. Performance improved when True.\nWhen True (default), the individual faces of the tessellation are merged.\nWhen False, the number of triangles are preserved and only the topology\nis merged.\n\nscreenshot\n\npython:str, default: python:None\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enable the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\nuse_service_colors\n\nbool, default: python:None\n\nWhether to use the colors assigned to the body in the service. The default\nis None, in which case the ansys.geometry.core.USE_SERVICE_COLORS\nglobal setting is used.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for plotting. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\nExamples\n\nExtrude a box centered at the origin to create rectangular body and\nplot it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> mycomp = design.add_component(\"my-comp\")\n>>> body = mycomp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> body.plot()\n\nPlot the body and color each face individually:\n\n>>> body.plot(multi_colors=True)\n\n\n\nabstractmethod MasterBody.intersect(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nIntersect two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to intersect with.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the intersected body or not.\n\nRaises\n\nValueError\n\nIf the bodies do not intersect.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe intersected body is retained.\n\n\n\nabstractmethod MasterBody.subtract(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nSubtract two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to subtract from the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the subtracted body or not.\n\nRaises\n\nValueError\n\nIf the subtraction results in an empty (complete) subtraction.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe subtracted body is retained.\n\n\n\nabstractmethod MasterBody.unite(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nUnite two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to unite with the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the united body or not.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe united body is retained.\n\n\n\nMasterBody.__repr__() -> str\n\nRepresent the master body as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SharedTopologyType.html#sharedtopologytype","title":"SharedTopologyType","text":"SharedTopologyType\n\n\n\nclass ansys.geometry.core.designer.component.SharedTopologyType(*args, **kwds)\n\nBases: enum.Enum\n\nShared topologies available."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SharedTopologyType.html#overview","title":"SharedTopologyType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSHARETYPE_NONE\n\n\n\nSHARETYPE_SHARE\n\n\n\nSHARETYPE_MERGE\n\n\n\nSHARETYPE_GROUPS\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SharedTopologyType.html#import-detail","title":"SharedTopologyType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/SharedTopologyType.html#attribute-detail","title":"SharedTopologyType > Attribute detail","text":"Attribute detail\n\n\n\nSharedTopologyType.SHARETYPE_NONE = 0\n\n\n\n\n\nSharedTopologyType.SHARETYPE_SHARE = 1\n\n\n\n\n\nSharedTopologyType.SHARETYPE_MERGE = 2\n\n\n\n\n\nSharedTopologyType.SHARETYPE_GROUPS = 3\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/DummyGear.html#dummygear","title":"DummyGear","text":"DummyGear\n\n\n\nclass ansys.geometry.core.sketch.gears.DummyGear(origin: ansys.geometry.core.math.point.Point2D, outer_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, inner_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, n_teeth: int)\n\nBases: Gear\n\nProvides the dummy class for sketching gears.\n\nParameters\n\norigin\n\nPoint2D\n\nOrigin of the gear.\n\nouter_radius\n\nQuantity | Distance | Real\n\nOuter radius of the gear.\n\ninner_radius\n\nQuantity | Distance | Real\n\nInner radius of the gear.\n\nn_teeth\n\npython:int\n\nNumber of teeth of the gear."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/DummyGear.html#import-detail","title":"DummyGear > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/index.html#the-facepy-module","title":"The face.py module","text":"The face.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/index.html#summary","title":"The face.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSketchFace\n\nProvides for modeling a face.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/face/index.html#description","title":"The face.py module > Description","text":"Description\n\nProvides for creating and managing a face (closed 2D sketch)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/index.html#the-bodypy-module","title":"The body.py module","text":"The body.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/index.html#summary","title":"The body.py module > Summary","text":"Summary\n\nInterfaces\n\n\n\n\n\nIBody\n\nDefines the common methods for a body, providing the abstract body interface.\n\nClasses\n\n\n\n\n\nMasterBody\n\nRepresents solids and surfaces organized within the design assembly.\n\nBody\n\nRepresents solids and surfaces organized within the design assembly.\n\nEnums\n\n\n\n\n\nMidSurfaceOffsetType\n\nProvides values for mid-surface offsets supported.\n\nCollisionType\n\nProvides values for collision types between bodies.\n\nFillStyle\n\nProvides values for fill styles supported.\n\nConstants\n\n\n\n\n\n__TEMPORARY_BOOL_OPS_FIX__\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/index.html#description","title":"The body.py module > Description","text":"Description\n\nProvides for managing a body."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/index.html#module-detail","title":"The body.py module > Module detail","text":"Module detail\n\n\n\nbody.__TEMPORARY_BOOL_OPS_FIX__ = (99, 0, 0)\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/GRPCComponentsService.html#grpccomponentsservice","title":"GRPCComponentsService","text":"GRPCComponentsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.components.GRPCComponentsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nComponents service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/GRPCComponentsService.html#overview","title":"GRPCComponentsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate\n\nCreate a component.\n\nset_name\n\nSet the name of a component.\n\nset_placement\n\nSet the placement of a component.\n\nset_shared_topology\n\nSet the shared topology of a component.\n\ndelete\n\nDelete a component.\n\nimport_groups\n\nImport groups from a component.\n\nmake_independent\n\nMake a component independent."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/GRPCComponentsService.html#import-detail","title":"GRPCComponentsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/GRPCComponentsService.html#method-detail","title":"GRPCComponentsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCComponentsService.create(**kwargs) -> dict\n\nCreate a component.\n\n\n\nabstractmethod GRPCComponentsService.set_name(**kwargs) -> dict\n\nSet the name of a component.\n\n\n\nabstractmethod GRPCComponentsService.set_placement(**kwargs) -> dict\n\nSet the placement of a component.\n\n\n\nabstractmethod GRPCComponentsService.set_shared_topology(**kwargs) -> dict\n\nSet the shared topology of a component.\n\n\n\nabstractmethod GRPCComponentsService.delete(**kwargs) -> dict\n\nDelete a component.\n\n\n\nabstractmethod GRPCComponentsService.import_groups(**kwargs) -> dict\n\nImport groups from a component.\n\n\n\nabstractmethod GRPCComponentsService.make_independent(**kwargs) -> dict\n\nMake a component independent."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#modeling-scale-map-and-mirror-bodies","title":"Examples > Modeling: Scale, map and mirror bodies","text":"Modeling: Scale, map and mirror bodies\n\nThe purpose of this notebook is to demonstrate the map() and scale() functions and their usage for transforming bodies.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#initialize-the-modeler","title":"Examples > Modeling: Scale, map and mirror bodies > Initialize the modeler","text":"Initialize the modeler\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#scale-body","title":"Examples > Modeling: Scale, map and mirror bodies > Scale body","text":"Scale body\n\nThe scale() function is designed to modify the size of 3D bodies by a specified scale factor. This function is a important part of geometric transformations, allowing for the dynamic resizing of bodies."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#usage-of-scale","title":"Examples > Modeling: Scale, map and mirror bodies > Usage of scale()","text":"Usage of scale()\n\nTo use the scale() function, you call it on an instance of a geometry body, passing a single argument: the scale value. This value is a real number (Real) that determines the factor by which the body’s size is changed."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#example-making-a-cube","title":"Examples > Modeling: Scale, map and mirror bodies > Example: Making a cube","text":"Example: Making a cube\n\nThe following code snippets show how to change the size of a cube using the scale() function in Body objects. The process involves initializing a sketch design for the cube, defining the shape parameters, and then performing a rescaling operation to generate the new shape."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#initialize-the-cube-sketch-design","title":"Examples > Modeling: Scale, map and mirror bodies > Initialize the cube sketch design","text":"Initialize the cube sketch design\n\nA new design sketch named “cube” is created.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#define-cube-parameters","title":"Examples > Modeling: Scale, map and mirror bodies > Define cube parameters","text":"Define cube parameters\n\nside_length is set to 10 units, representing the side length of the cube.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-the-profile-cube","title":"Examples > Modeling: Scale, map and mirror bodies > Create the profile cube","text":"Create the profile cube\n\nA square box is created centered on the origin using side_length as the side length of the square.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-cube-body","title":"Examples > Modeling: Scale, map and mirror bodies > Create cube body","text":"Create cube body\n\nextrude_sketch on the box_sketch as the base sketch and create the 3D cube with distance being the side_length.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#making-the-cube-twice-as-large","title":"Examples > Modeling: Scale, map and mirror bodies > Making the cube twice as large","text":"Making the cube twice as large\n\nCopy the original cube. Using scale() with a value of 2, double the side lengths of the cube, thereby making the body twice as large, and then offset it to view the difference.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#halfing-the-size-of-the-original-cube","title":"Examples > Modeling: Scale, map and mirror bodies > Halfing the size of the original cube","text":"Halfing the size of the original cube\n\nCopy the original cube. Using scale() with a value of 0.5 effectively halves the side lengths of the cube. Then, offset the new cube to view the difference.\n\nNote: Because the size of the cube in the previous cell was doubled, using the 0.25 factor translates it to half the size of the original cube.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#map-body","title":"Examples > Modeling: Scale, map and mirror bodies > Map body","text":"Map body\n\nThe map() function enables the reorientation of 3D bodies by mapping them onto a new specified frame. This function is used for adjusting the orientation of geometric bodies within 3D space to match specific reference frames. With this function, you are able to effectively perform translation and rotation operations in a single method by specifying a new frame."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#usage-of-map","title":"Examples > Modeling: Scale, map and mirror bodies > Usage of map()","text":"Usage of map()\n\nTo use the map() function, invoke it on an instance of a geometry body with a single argument: the new frame to map the body to. The frame is a structure or object that defines the new orientation parameters for the body."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#example-creating-an-asymmetric-cube","title":"Examples > Modeling: Scale, map and mirror bodies > Example: Creating an asymmetric cube","text":"Example: Creating an asymmetric cube\n\nThe following code snippets show how to use the map() function to reframe a cube body in the Body object. The process involves initializing a sketch design for the custom body, extruding the profile by a distance, and then performing the mapping operation to rotate the shape."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#initialize-the-shape-sketch-design","title":"Examples > Modeling: Scale, map and mirror bodies > Initialize the shape sketch design","text":"Initialize the shape sketch design\n\nA new design sketch named “asymmetric_cube” is created.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-an-asymmetric-sketch-profile","title":"Examples > Modeling: Scale, map and mirror bodies > Create an asymmetric sketch profile","text":"Create an asymmetric sketch profile\n\nMake a sketch profile that is basically a cube centered on the origin with a side length of 2 with a cutout.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-the-asymmetric-body","title":"Examples > Modeling: Scale, map and mirror bodies > Create the asymmetric body","text":"Create the asymmetric body\n\nextrude_sketch on the asymmetric_profile as the base sketch, creating the 3D cube with a cutout, with the distance being 1.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#apply-map-reframing","title":"Examples > Modeling: Scale, map and mirror bodies > Apply map reframing","text":"Apply map reframing\n\nFirst make a copy of the shape and translate it in 3D space so that you can view them side by side. Then, apply the reframing to the copied shape.\n\nNote: The following map uses the default x direction, but the y direction is swapped with the z direction, effectively rotating the original shape so that it is standing vertically.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#mirror-body","title":"Examples > Modeling: Scale, map and mirror bodies > Mirror body","text":"Mirror body\n\nThe mirror() function is designed to mirror the geometry of a body across a specified plane. This function plays a role in geometric transformations, enabling the reflection of bodies to create symmetrical designs."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#usage-of-mirror","title":"Examples > Modeling: Scale, map and mirror bodies > Usage of mirror()","text":"Usage of mirror()\n\nTo use the mirror() function, you call it on an instance of a geometry body, passing a single argument: the plane across which to mirror the body. This plane is represented by a Plane object, defining the axis of symmetry for the mirroring operation."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#example-triangle-body","title":"Examples > Modeling: Scale, map and mirror bodies > Example: Triangle body","text":"Example: Triangle body\n\nThe following code snippets show how to use the mirror() function to reframe a cube body in the Body object. The process involves initializing a sketch design for the body profile, extruding the profile by a distance, and then performing the mirroring operation to reflect the shape over the specified axis."},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#initialize-the-shape-sketch-design","title":"Examples > Modeling: Scale, map and mirror bodies > Initialize the shape sketch design","text":"Initialize the shape sketch design\n\nA new design sketch named “triangle” is created.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#define-parameters","title":"Examples > Modeling: Scale, map and mirror bodies > Define parameters","text":"Define parameters\n\npoint1: First vertex of the triangle. point2: Second vertex of the triangle. point3: Third vertex of the triangle.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-triangle-sketch-profile","title":"Examples > Modeling: Scale, map and mirror bodies > Create triangle sketch profile","text":"Create triangle sketch profile\n\nUsing point1, point2, and point3, define the vertices of the triangle profile using those three points and then create line segments connecting them.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#create-triangular-body","title":"Examples > Modeling: Scale, map and mirror bodies > Create triangular body","text":"Create triangular body\n\nUsing the sketch profile created in the previous step, use the extrude_sketch method to create a solid body with a depth of 1.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#mirror-the-triangular-body","title":"Examples > Modeling: Scale, map and mirror bodies > Mirror the triangular body","text":"Mirror the triangular body\n\nFirst, make a copy of the triangular body. Then, using mirror(), you can mirror the copied body over the ZY plane.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/scale_map_mirror_bodies.html#closing-the-modeler","title":"Examples > Modeling: Scale, map and mirror bodies > Closing the modeler","text":"Closing the modeler\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector3D.html#vector3d","title":"Vector3D","text":"Vector3D\n\n\n\nclass ansys.geometry.core.math.vector.Vector3D(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: numpy.ndarray\n\nProvides for managing and creating a 3D vector.\n\nParameters\n\ninput\n\nndarray | RealSequence\n\n3D numpy.ndarray class with shape(X,)."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector3D.html#overview","title":"Vector3D > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_points\n\nCreate a 3D vector from two distinct 3D points.\n\nMethods\n\n\n\n\n\nis_perpendicular_to\n\nCheck if this vector and another vector are perpendicular.\n\nis_parallel_to\n\nCheck if this vector and another vector are parallel.\n\nis_opposite\n\nCheck if this vector and another vector are opposite.\n\nnormalize\n\nReturn a normalized version of the 3D vector.\n\ntransform\n\nTransform the 3D vector3D with a transformation matrix.\n\nrotate_vector\n\nRotate a vector around a given axis by a specified angle.\n\nget_angle_between\n\nGet the angle between this 3D vector and another 3D vector.\n\ncross\n\nReturn the cross product of Vector3D objects.\n\nProperties\n\n\n\n\n\nx\n\nX coordinate of the Vector3D class.\n\ny\n\nY coordinate of the Vector3D class.\n\nz\n\nZ coordinate of the Vector3D class.\n\nnorm\n\nNorm of the vector.\n\nmagnitude\n\nNorm of the vector.\n\nis_zero\n\nCheck if all components of the 3D vector are zero.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Vector3D class.\n\n__ne__\n\nNot equals operator for the Vector3D class.\n\n__mul__\n\nOverload * operator with dot product.\n\n__mod__\n\nOverload % operator with cross product.\n\n__add__\n\nAddition operation overload for 3D vectors.\n\n__sub__\n\nSubtraction operation overload for 3D vectors."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector3D.html#import-detail","title":"Vector3D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector3D.html#property-detail","title":"Vector3D > Property detail","text":"Property detail\n\n\n\nproperty Vector3D.x: ansys.geometry.core.typing.Real\n\nX coordinate of the Vector3D class.\n\n\n\nproperty Vector3D.y: ansys.geometry.core.typing.Real\n\nY coordinate of the Vector3D class.\n\n\n\nproperty Vector3D.z: ansys.geometry.core.typing.Real\n\nZ coordinate of the Vector3D class.\n\n\n\nproperty Vector3D.norm: float\n\nNorm of the vector.\n\n\n\nproperty Vector3D.magnitude: float\n\nNorm of the vector.\n\n\n\nproperty Vector3D.is_zero: bool\n\nCheck if all components of the 3D vector are zero."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector3D.html#method-detail","title":"Vector3D > Method detail","text":"Method detail\n\n\n\nVector3D.is_perpendicular_to(other_vector: Vector3D) -> bool\n\nCheck if this vector and another vector are perpendicular.\n\n\n\nVector3D.is_parallel_to(other_vector: Vector3D) -> bool\n\nCheck if this vector and another vector are parallel.\n\n\n\nVector3D.is_opposite(other_vector: Vector3D) -> bool\n\nCheck if this vector and another vector are opposite.\n\n\n\nVector3D.normalize() -> Vector3D\n\nReturn a normalized version of the 3D vector.\n\n\n\nVector3D.transform(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Vector3D\n\nTransform the 3D vector3D with a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the vector.\n\nReturns\n\nVector3D\n\nA new 3D vector that is the transformed copy of the original 3D vector after applying\nthe transformation matrix.\n\nNotes\n\nTransform the Vector3D object by applying the specified 4x4\ntransformation matrix and return a new Vector3D object representing the\ntransformed vector.\n\n\n\nVector3D.rotate_vector(vector: Vector3D, angle: ansys.geometry.core.typing.Real | pint.Quantity | ansys.geometry.core.misc.measurements.Angle) -> Vector3D\n\nRotate a vector around a given axis by a specified angle.\n\n\n\nVector3D.get_angle_between(v: Vector3D) -> pint.Quantity\n\nGet the angle between this 3D vector and another 3D vector.\n\nParameters\n\nv\n\nVector3D\n\nOther 3D vector for computing the angle.\n\nReturns\n\nQuantity\n\nAngle between these two 3D vectors.\n\n\n\nVector3D.cross(v: Vector3D) -> Vector3D\n\nReturn the cross product of Vector3D objects.\n\n\n\nVector3D.__eq__(other: Vector3D) -> bool\n\nEquals operator for the Vector3D class.\n\n\n\nVector3D.__ne__(other: Vector3D) -> bool\n\nNot equals operator for the Vector3D class.\n\n\n\nVector3D.__mul__(other: Vector3D | ansys.geometry.core.typing.Real) -> Vector3D | ansys.geometry.core.typing.Real\n\nOverload * operator with dot product.\n\nNotes\n\nThis method also admits scalar multiplication.\n\n\n\nVector3D.__mod__(other: Vector3D) -> Vector3D\n\nOverload % operator with cross product.\n\n\n\nVector3D.__add__(other: Vector3D | ansys.geometry.core.math.point.Point3D) -> Vector3D | ansys.geometry.core.math.point.Point3D\n\nAddition operation overload for 3D vectors.\n\n\n\nVector3D.__sub__(other: Vector3D) -> Vector3D\n\nSubtraction operation overload for 3D vectors.\n\n\n\nclassmethod Vector3D.from_points(point_a: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, point_b: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D)\n\nCreate a 3D vector from two distinct 3D points.\n\nParameters\n\npoint_a\n\nndarray | RealSequence | Point3D\n\nPoint3D\nclass representing the first point.\n\npoint_b\n\nndarray | RealSequence | Point3D\n\nPoint3D\nclass representing the second point.\n\nReturns\n\nVector3D\n\n3D vector from point_a to point_b.\n\nNotes\n\nThe resulting 3D vector is always expressed in Point3D\nbase units."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/index.html#the-bodiespy-module","title":"The bodies.py module","text":"The bodies.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/index.html#summary","title":"The bodies.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBodyServiceV0\n\nBody service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/bodies/index.html#description","title":"The bodies.py module > Description","text":"Description\n\nModule containing the bodies service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox2D.html#boundingbox2d","title":"BoundingBox2D","text":"BoundingBox2D\n\n\n\nclass ansys.geometry.core.math.bbox.BoundingBox2D(x_min: ansys.geometry.core.typing.Real = sys.float_info.max, x_max: ansys.geometry.core.typing.Real = sys.float_info.min, y_min: ansys.geometry.core.typing.Real = sys.float_info.max, y_max: ansys.geometry.core.typing.Real = sys.float_info.min)\n\nMaintains the X and Y dimensions.\n\nParameters\n\nx_min\n\nReal\n\nMinimum value for the x-dimensional bounds.\n\nx_max\n\nReal\n\nMaximum value for the x-dimensional bounds.\n\ny_min\n\nReal\n\nMinimum value for the y-dimensional bounds.\n\ny_max\n\nReal\n\nMaximum value for the y-dimensional bounds."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox2D.html#overview","title":"BoundingBox2D > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_point\n\nExtend the ranges of the bounding box to include a point.\n\nadd_point_components\n\nExtend the ranges of the bounding box to include the X and Y values.\n\nadd_points\n\nExtend the ranges of the bounding box to include given points.\n\ncontains_point\n\nEvaluate whether a point lies within the X and Y range bounds.\n\ncontains_point_components\n\nCheck if point components are within the X and Y range bounds.\n\nProperties\n\n\n\n\n\nx_min\n\nMinimum value of X-dimensional bounds.\n\nx_max\n\nMaximum value of the X-dimensional bounds.\n\ny_min\n\nMinimum value of Y-dimensional bounds.\n\ny_max\n\nMaximum value of Y-dimensional bounds.\n\nStatic methods\n\n\n\n\n\nintersect_bboxes\n\nFind the intersection of 2 BoundingBox2D objects.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the BoundingBox2D class.\n\n__ne__\n\nNot equals operator for the BoundingBox2D class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox2D.html#import-detail","title":"BoundingBox2D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox2D.html#property-detail","title":"BoundingBox2D > Property detail","text":"Property detail\n\n\n\nproperty BoundingBox2D.x_min: ansys.geometry.core.typing.Real\n\nMinimum value of X-dimensional bounds.\n\nReturns\n\nReal\n\nMinimum value of the X-dimensional bounds.\n\n\n\nproperty BoundingBox2D.x_max: ansys.geometry.core.typing.Real\n\nMaximum value of the X-dimensional bounds.\n\nReturns\n\nReal\n\nMaximum value of the X-dimensional bounds.\n\n\n\nproperty BoundingBox2D.y_min: ansys.geometry.core.typing.Real\n\nMinimum value of Y-dimensional bounds.\n\nReturns\n\nReal\n\nMinimum value of Y-dimensional bounds.\n\n\n\nproperty BoundingBox2D.y_max: ansys.geometry.core.typing.Real\n\nMaximum value of Y-dimensional bounds.\n\nReturns\n\nReal\n\nMaximum value of Y-dimensional bounds."},{"objectID":"Home","href":"api/ansys/geometry/core/math/bbox/BoundingBox2D.html#method-detail","title":"BoundingBox2D > Method detail","text":"Method detail\n\n\n\nBoundingBox2D.add_point(point: ansys.geometry.core.math.point.Point2D) -> None\n\nExtend the ranges of the bounding box to include a point.\n\nParameters\n\npoint\n\nPoint2D\n\nPoint to include within the bounds.\n\nNotes\n\nThis method is only applicable if the point components are outside\nthe current bounds.\n\n\n\nBoundingBox2D.add_point_components(x: ansys.geometry.core.typing.Real, y: ansys.geometry.core.typing.Real) -> None\n\nExtend the ranges of the bounding box to include the X and Y values.\n\nParameters\n\nx\n\nReal\n\nPoint X component to include within the bounds.\n\ny\n\nReal\n\nPoint Y component to include within the bounds.\n\nNotes\n\nThis method is only applicable if the point components are outside\nthe current bounds.\n\n\n\nBoundingBox2D.add_points(points: list[ansys.geometry.core.math.point.Point2D]) -> None\n\nExtend the ranges of the bounding box to include given points.\n\nParameters\n\npoints\n\npython:list[Point2D]\n\nList of points to include within the bounds.\n\n\n\nBoundingBox2D.contains_point(point: ansys.geometry.core.math.point.Point2D) -> bool\n\nEvaluate whether a point lies within the X and Y range bounds.\n\nParameters\n\npoint\n\nPoint2D\n\nPoint to compare against the bounds.\n\nReturns\n\nbool\n\nTrue if the point is contained in the bounding box. Otherwise, False.\n\n\n\nBoundingBox2D.contains_point_components(x: ansys.geometry.core.typing.Real, y: ansys.geometry.core.typing.Real) -> bool\n\nCheck if point components are within the X and Y range bounds.\n\nParameters\n\nx\n\nReal\n\nPoint X component to compare against the bounds.\n\ny\n\nReal\n\nPoint Y component to compare against the bounds.\n\nReturns\n\nbool\n\nTrue if the components are contained in the bounding box. Otherwise, False.\n\n\n\nBoundingBox2D.__eq__(other: BoundingBox2D) -> bool\n\nEquals operator for the BoundingBox2D class.\n\n\n\nBoundingBox2D.__ne__(other: BoundingBox2D) -> bool\n\nNot equals operator for the BoundingBox2D class.\n\n\n\nstatic BoundingBox2D.intersect_bboxes(box_1: BoundingBox2D, box_2: BoundingBox2D) -> None | BoundingBox2D\n\nFind the intersection of 2 BoundingBox2D objects.\n\nParameters\n\nbox_1: BoundingBox2D\n\nThe box to consider the intersection of with respect to box_2.\n\nbox_2: BoundingBox2D\n\nThe box to consider the intersection of with respect to box_1.\n\nReturns\n\nBoundingBox2D:\n\nThe box representing the intersection of the two passed in boxes."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/StitchFaceProblemAreas.html#stitchfaceproblemareas","title":"StitchFaceProblemAreas","text":"StitchFaceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.StitchFaceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, bodies: list[ansys.geometry.core.designer.body.Body])\n\nBases: ProblemArea\n\nRepresents a stitch face problem area with unique identifier and associated faces.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nbodies\n\npython:list[Body]\n\nList of bodies associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/StitchFaceProblemAreas.html#overview","title":"StitchFaceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nbodies\n\nThe list of bodies connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/StitchFaceProblemAreas.html#import-detail","title":"StitchFaceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/StitchFaceProblemAreas.html#property-detail","title":"StitchFaceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty StitchFaceProblemAreas.bodies: list[ansys.geometry.core.designer.body.Body]\n\nThe list of bodies connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/StitchFaceProblemAreas.html#method-detail","title":"StitchFaceProblemAreas > Method detail","text":"Method detail\n\n\n\nStitchFaceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/GRPCPointsServiceV1.html#grpcpointsservicev1","title":"GRPCPointsServiceV1","text":"GRPCPointsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.points.GRPCPointsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.points.GRPCPointsService\n\nPoints service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\npoints service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/GRPCPointsServiceV1.html#overview","title":"GRPCPointsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_design_points\n\nCreate design points.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/GRPCPointsServiceV1.html#import-detail","title":"GRPCPointsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/GRPCPointsServiceV1.html#attribute-detail","title":"GRPCPointsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPointsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/points/GRPCPointsServiceV1.html#method-detail","title":"GRPCPointsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPointsServiceV1.create_design_points(**kwargs) -> dict\n\nCreate design points."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/index.html#the-nurbspy-module","title":"The nurbs.py module","text":"The nurbs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/index.html#summary","title":"The nurbs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nNURBSSurface\n\nRepresents a NURBS surface.\n\nNURBSSurfaceEvaluation\n\nProvides evaluation of a NURBS surface at a given parameter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/index.html#description","title":"The nurbs.py module > Description","text":"Description\n\nProvides for creating and managing a NURBS surface."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/index.html#the-beamspy-module","title":"The beams.py module","text":"The beams.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/index.html#summary","title":"The beams.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCBeamsServiceV1\n\nBeams service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/beams/index.html#description","title":"The beams.py module > Description","text":"Description\n\nModule containing the beams service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/index.html#the-designspy-module","title":"The designs.py module","text":"The designs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/index.html#summary","title":"The designs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDesignsServiceV1\n\nDesigns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/index.html#description","title":"The designs.py module > Description","text":"Description\n\nModule containing the designs service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/GRPCComponentsServiceV1.html#grpccomponentsservicev1","title":"GRPCComponentsServiceV1","text":"GRPCComponentsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.components.GRPCComponentsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.components.GRPCComponentsService\n\nComponents service for gRPC communication with the Geometry server.\n\nThis class provides methods to call components in the\nGeometry server using gRPC. It is specifically designed for the v1\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/GRPCComponentsServiceV1.html#overview","title":"GRPCComponentsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate\n\nCreate a component.\n\nset_name\n\nSet the name of a component.\n\nset_placement\n\nSet the placement of a component.\n\nset_shared_topology\n\nSet the shared topology of a component.\n\ndelete\n\nDelete a component.\n\nimport_groups\n\nImport groups from a component.\n\nmake_independent\n\nMake a component independent.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/GRPCComponentsServiceV1.html#import-detail","title":"GRPCComponentsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/GRPCComponentsServiceV1.html#attribute-detail","title":"GRPCComponentsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCComponentsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/components/GRPCComponentsServiceV1.html#method-detail","title":"GRPCComponentsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCComponentsServiceV1.create(**kwargs) -> dict\n\nCreate a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.set_name(**kwargs) -> dict\n\nSet the name of a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.set_placement(**kwargs) -> dict\n\nSet the placement of a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.set_shared_topology(**kwargs) -> dict\n\nSet the shared topology of a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.delete(**kwargs) -> dict\n\nDelete a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.import_groups(**kwargs) -> dict\n\nImport groups from a component.\n\n\n\nabstractmethod GRPCComponentsServiceV1.make_independent(**kwargs) -> dict\n\nMake a component independent."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/MatingCondition.html#matingcondition","title":"MatingCondition","text":"MatingCondition\n\n\n\nclass ansys.geometry.core.designer.mating_conditions.MatingCondition\n\nMatingCondition dataclass."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/MatingCondition.html#overview","title":"MatingCondition > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nid\n\n\n\nis_deleted\n\n\n\nis_enabled\n\n\n\nis_satisfied\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/MatingCondition.html#import-detail","title":"MatingCondition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/MatingCondition.html#attribute-detail","title":"MatingCondition > Attribute detail","text":"Attribute detail\n\n\n\nMatingCondition.id: str\n\n\n\n\n\nMatingCondition.is_deleted: bool\n\n\n\n\n\nMatingCondition.is_enabled: bool\n\n\n\n\n\nMatingCondition.is_satisfied: bool\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/index.html#the-shapes-package","title":"The shapes package","text":"The shapes package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/index.html#summary","title":"The shapes package > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\ncurves\n\nProvides the PyAnsys Geometry curves subpackage.\n\nsurfaces\n\nProvides the PyAnsys Geometry surface subpackage.\n\nSubmodules\n\n\n\n\n\nbox_uv\n\nProvides the BoxUV class.\n\nparameterization\n\nProvides the parametrization-related classes.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/index.html#description","title":"The shapes package > Description","text":"Description\n\nProvides the PyAnsys Geometry geometry subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/index.html#the-misc-package","title":"The misc package","text":"The misc package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/index.html#summary","title":"The misc package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\naccuracy\n\nProvides for evaluating decimal precision.\n\nauxiliary\n\nAuxiliary functions for the PyAnsys Geometry library.\n\nchecks\n\nProvides functions for performing common checks.\n\nmeasurements\n\nProvides various measurement-related classes.\n\noptions\n\nProvides various option classes.\n\nunits\n\nProvides for handling units homogeneously throughout PyAnsys Geometry.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/misc/index.html#description","title":"The misc package > Description","text":"Description\n\nProvides the PyAnsys Geometry miscellaneous subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/GRPCBeamsServiceV0.html#grpcbeamsservicev0","title":"GRPCBeamsServiceV0","text":"GRPCBeamsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.beams.GRPCBeamsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.beams.GRPCBeamsService\n\nBeams service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nbeams service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/GRPCBeamsServiceV0.html#overview","title":"GRPCBeamsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_beam_segments\n\nCreate beam segments.\n\ncreate_descriptive_beam_segments\n\nCreate descriptive beam segments.\n\ndelete_beam\n\nDelete a beam.\n\ndelete_beam_profile\n\nRemove a beam profile on the active geometry server instance.\n\ncreate_beam_circular_profile\n\nAdd a new beam circular profile under the design for creating beams.\n\nAttributes\n\n\n\n\n\ncommands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/GRPCBeamsServiceV0.html#import-detail","title":"GRPCBeamsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/GRPCBeamsServiceV0.html#attribute-detail","title":"GRPCBeamsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCBeamsServiceV0.commands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/beams/GRPCBeamsServiceV0.html#method-detail","title":"GRPCBeamsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCBeamsServiceV0.create_beam_segments(**kwargs) -> dict\n\nCreate beam segments.\n\n\n\nGRPCBeamsServiceV0.create_descriptive_beam_segments(**kwargs) -> dict\n\nCreate descriptive beam segments.\n\n\n\nGRPCBeamsServiceV0.delete_beam(**kwargs) -> dict\n\nDelete a beam.\n\n\n\nGRPCBeamsServiceV0.delete_beam_profile(**kwargs) -> dict\n\nRemove a beam profile on the active geometry server instance.\n\n\n\nGRPCBeamsServiceV0.create_beam_circular_profile(**kwargs) -> dict\n\nAdd a new beam circular profile under the design for creating beams."},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/Frame.html#frame","title":"Frame","text":"Frame\n\n\n\nclass ansys.geometry.core.math.frame.Frame(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D = ZERO_POINT3D, direction_x: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, direction_y: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Y)\n\nRepresentation of a frame.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D, default: ZERO_POINT3D\n\nCentered origin of the`frame. The default is ZERO_POINT3D, which is the\nCartesian origin.\n\ndirection_x\n\nndarray | RealSequence | UnitVector3D | Vector3D, default: UNITVECTOR3D_X\n\nX-axis direction.\n\ndirection_y\n\nndarray | RealSequence | UnitVector3D | Vector3D, default: UNITVECTOR3D_Y\n\nY-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/Frame.html#overview","title":"Frame > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ntransform_point2d_local_to_global\n\nTransform a 2D point to a global 3D point.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the frame.\n\ndirection_x\n\nX-axis direction of the frame.\n\ndirection_y\n\nY-axis direction of the frame.\n\ndirection_z\n\nZ-axis direction of the frame.\n\nglobal_to_local_rotation\n\nGlobal to local space transformation matrix.\n\nlocal_to_global_rotation\n\nLocal to global space transformation matrix.\n\ntransformation_matrix\n\nFull 4x4 transformation matrix.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Frame class.\n\n__ne__\n\nNot equals operator for the Frame class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/Frame.html#import-detail","title":"Frame > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/Frame.html#property-detail","title":"Frame > Property detail","text":"Property detail\n\n\n\nproperty Frame.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the frame.\n\n\n\nproperty Frame.direction_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-axis direction of the frame.\n\n\n\nproperty Frame.direction_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-axis direction of the frame.\n\n\n\nproperty Frame.direction_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-axis direction of the frame.\n\n\n\nproperty Frame.global_to_local_rotation: ansys.geometry.core.math.matrix.Matrix33\n\nGlobal to local space transformation matrix.\n\nReturns\n\nMatrix33\n\n3x3 matrix representing the transformation from global to local\ncoordinate space, excluding origin translation.\n\n\n\nproperty Frame.local_to_global_rotation: ansys.geometry.core.math.matrix.Matrix33\n\nLocal to global space transformation matrix.\n\nReturns\n\nMatrix33\n\n3x3 matrix representing the transformation from local to global\ncoordinate space.\n\n\n\nproperty Frame.transformation_matrix: ansys.geometry.core.math.matrix.Matrix44\n\nFull 4x4 transformation matrix.\n\nReturns\n\nMatrix44\n\n4x4 matrix representing the transformation from global to local\ncoordinate space."},{"objectID":"Home","href":"api/ansys/geometry/core/math/frame/Frame.html#method-detail","title":"Frame > Method detail","text":"Method detail\n\n\n\nFrame.transform_point2d_local_to_global(point: ansys.geometry.core.math.point.Point2D) -> ansys.geometry.core.math.point.Point3D\n\nTransform a 2D point to a global 3D point.\n\nThis method transforms a local, plane-contained Point2D object in the global\ncoordinate system, thus representing it as a Point3D object.\n\nParameters\n\npoint\n\nPoint2D\n\nPoint2D local object to express in global coordinates.\n\nReturns\n\nPoint3D\n\nGlobal coordinates for the 3D point.\n\n\n\nFrame.__eq__(other: Frame) -> bool\n\nEquals operator for the Frame class.\n\n\n\nFrame.__ne__(other: Frame) -> bool\n\nNot equals operator for the Frame class."},{"objectID":"Home","href":"api/ansys/geometry/core/index.html#the-ansysgeometrycore-library","title":"The ansys.geometry.core library","text":"The ansys.geometry.core library\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/index.html#summary","title":"The ansys.geometry.core library > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\nconnection\n\nPyAnsys Geometry connection subpackage.\n\ndesigner\n\nPyAnsys Geometry designer subpackage.\n\nmaterials\n\nPyAnsys Geometry materials subpackage.\n\nmath\n\nPyAnsys Geometry math subpackage.\n\nmisc\n\nProvides the PyAnsys Geometry miscellaneous subpackage.\n\nparameters\n\nPyAnsys Geometry parameters subpackage.\n\nplotting\n\nProvides the PyAnsys Geometry plotting subpackage.\n\nshapes\n\nProvides the PyAnsys Geometry geometry subpackage.\n\nsketch\n\nPyAnsys Geometry sketch subpackage.\n\ntools\n\nPyAnsys Geometry tools subpackage.\n\nSubmodules\n\n\n\n\n\nerrors\n\nProvides PyAnsys Geometry-specific errors.\n\nlogger\n\nProvides a general framework for logging in PyAnsys Geometry.\n\nmodeler\n\nProvides for interacting with the Geometry service.\n\ntyping\n\nProvides typing of values for PyAnsys Geometry.\n\nAttributes\n\n\n\n\n\n__version__\n\nPyAnsys Geometry version.\n\nConstants\n\n\n\n\n\nUSE_SERVICE_COLORS\n\nGlobal constant for checking whether to use service colors for plotting\n\nDISABLE_MULTIPLE_DESIGN_CHECK\n\nDeprecated constant. Use DISABLE_ACTIVE_DESIGN_CHECK instead.\n\nDISABLE_ACTIVE_DESIGN_CHECK\n\nGlobal constant for disabling the ensure_design_is_active check.\n\nDOCUMENTATION_BUILD\n\nGlobal flag for the documentation to use the proper PyVista Jupyter backend.\n\nUSE_TRACKER_TO_UPDATE_DESIGN\n\nGlobal constant for checking whether to use the tracker to update designs.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/index.html#description","title":"The ansys.geometry.core library > Description","text":"Description\n\nPyAnsys Geometry is a Python wrapper for the Ansys Geometry service."},{"objectID":"Home","href":"api/ansys/geometry/core/index.html#module-detail","title":"The ansys.geometry.core library > Module detail","text":"Module detail\n\n\n\ncore.USE_SERVICE_COLORS: bool = False\n\nGlobal constant for checking whether to use service colors for plotting\npurposes. If set to False, the default colors will be used (speed gain).\n\n\n\ncore.DISABLE_MULTIPLE_DESIGN_CHECK: bool = True\n\nDeprecated constant. Use DISABLE_ACTIVE_DESIGN_CHECK instead.\n\n\n\ncore.DISABLE_ACTIVE_DESIGN_CHECK: bool = False\n\nGlobal constant for disabling the ensure_design_is_active check.\n\nOnly set this to false if you are sure you want to disable this check\nand your objects will always exist on the server side.\n\n\n\ncore.DOCUMENTATION_BUILD: bool\n\nGlobal flag for the documentation to use the proper PyVista Jupyter backend.\n\n\n\ncore.USE_TRACKER_TO_UPDATE_DESIGN: bool = False\n\nGlobal constant for checking whether to use the tracker to update designs.\n\n\n\ncore.__version__\n\nPyAnsys Geometry version."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/GRPCDbuApplicationServiceV1.html#grpcdbuapplicationservicev1","title":"GRPCDbuApplicationServiceV1","text":"GRPCDbuApplicationServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.dbuapplication.GRPCDbuApplicationServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.dbuapplication.GRPCDbuApplicationService\n\nDBU Application service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nDBU Application service. It is specifically designed for the v1 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/GRPCDbuApplicationServiceV1.html#overview","title":"GRPCDbuApplicationServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nrun_script\n\nRun a Scripting API script.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/GRPCDbuApplicationServiceV1.html#import-detail","title":"GRPCDbuApplicationServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/GRPCDbuApplicationServiceV1.html#attribute-detail","title":"GRPCDbuApplicationServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDbuApplicationServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/GRPCDbuApplicationServiceV1.html#method-detail","title":"GRPCDbuApplicationServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDbuApplicationServiceV1.run_script(**kwargs) -> dict\n\nRun a Scripting API script."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/LogoProblemArea.html#logoproblemarea","title":"LogoProblemArea","text":"LogoProblemArea\n\n\n\nclass ansys.geometry.core.tools.problem_areas.LogoProblemArea(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, face_ids: list[str])\n\nBases: ProblemArea\n\nRepresents a logo problem area defined by a list of faces.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nfaces\n\npython:list[python:str]\n\nList of faces defining the logo problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/LogoProblemArea.html#overview","title":"LogoProblemArea > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area by deleting the logos.\n\nProperties\n\n\n\n\n\nface_ids\n\nThe ids of the faces defining the logos."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/LogoProblemArea.html#import-detail","title":"LogoProblemArea > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/LogoProblemArea.html#property-detail","title":"LogoProblemArea > Property detail","text":"Property detail\n\n\n\nproperty LogoProblemArea.face_ids: list[str]\n\nThe ids of the faces defining the logos."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/LogoProblemArea.html#method-detail","title":"LogoProblemArea > Method detail","text":"Method detail\n\n\n\nLogoProblemArea.fix() -> bool\n\nFix the problem area by deleting the logos.\n\nReturns\n\nmessage: bool\n\nMessage that return whether the operation was successful."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryPercentStyle.html#pygeometrypercentstyle","title":"PyGeometryPercentStyle","text":"PyGeometryPercentStyle\n\n\n\nclass ansys.geometry.core.logger.PyGeometryPercentStyle(fmt, *, defaults=None)\n\nBases: logging.PercentStyle\n\nProvides a common messaging style."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/PyGeometryPercentStyle.html#import-detail","title":"PyGeometryPercentStyle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/Logger.html#logger","title":"Logger","text":"Logger\n\n\n\nclass ansys.geometry.core.logger.Logger(level=logging.DEBUG, to_file=False, to_stdout=True, filename=FILE_NAME)\n\nProvides the logger used for each PyAnsys Geometry session.\n\nThis class allows you to add handlers to the logger to output messages\nto a file or to the standard output (stdout).\n\nParameters\n\nlevel\n\npython:int, default: 10\n\nLogging level to filter the message severity allowed in the logger.\nThe default is 10, in which case the logging.DEBUG level\nis used.\n\nto_file\n\nbool, default: python:False\n\nWhether to write log messages to a file.\n\nto_stdout\n\nbool, default: python:True\n\nWhether to write log messages to the standard output.\n\nfilename\n\npython:str, default: “pyansys-geometry.log”\n\nName of the file to write log log messages to.\n\nExamples\n\nDemonstrate logger usage from the Modeler instance, which is automatically\ncreated when a Geometry service instance is created.\n\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler(loglevel=\"DEBUG\")\n>>> modeler._log.info(\"This is a useful message\")\nINFO -  -  <ipython-input-24-80df150fe31f> - <module> - This is LOG debug message.\n\nImport the global PyAnsys Geometry logger and add a file output handler.\n\n>>> import os\n>>> from ansys.geometry.core import LOG\n>>> file_path = os.path.join(os.getcwd(), \"pyansys-geometry.log\")\n>>> LOG.log_to_file(file_path)"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/Logger.html#overview","title":"Logger > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nlog_to_file\n\nAdd a file handler to the logger.\n\nlog_to_stdout\n\nAdd the standard output handler to the logger.\n\nsetLevel\n\nChange the log level of the object and the attached handlers.\n\nadd_child_logger\n\nAdd a child logger to the main logger.\n\nadd_instance_logger\n\nAdd a logger for a Geometry service instance.\n\nadd_handling_uncaught_expections\n\nRedirect the output of an exception to a logger.\n\nAttributes\n\n\n\n\n\nfile_handler\n\n\n\nstd_out_handler\n\n\n\nlogger\n\n\n\nlevel\n\n\n\ndebug\n\n\n\ninfo\n\n\n\nwarning\n\n\n\nerror\n\n\n\ncritical\n\n\n\nlog\n\n\n\nSpecial methods\n\n\n\n\n\n__getitem__\n\nOverload the access method by item for the Logger class."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/Logger.html#import-detail","title":"Logger > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/Logger.html#attribute-detail","title":"Logger > Attribute detail","text":"Attribute detail\n\n\n\nLogger.file_handler = None\n\n\n\n\n\nLogger.std_out_handler = None\n\n\n\n\n\nLogger.logger\n\n\n\n\n\nLogger.level = 0\n\n\n\n\n\nLogger.debug\n\n\n\n\n\nLogger.info\n\n\n\n\n\nLogger.warning\n\n\n\n\n\nLogger.error\n\n\n\n\n\nLogger.critical\n\n\n\n\n\nLogger.log\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/Logger.html#method-detail","title":"Logger > Method detail","text":"Method detail\n\n\n\nLogger.log_to_file(filename=FILE_NAME, level=LOG_LEVEL)\n\nAdd a file handler to the logger.\n\nParameters\n\nfilename\n\npython:str, default: “pyansys-geometry.log”\n\nName of the file to write log messages to.\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\nExamples\n\nWrite to the \"pyansys-geometry.log\" file in the current working directory:\n\n>>> from ansys.geometry.core import LOG\n>>> import os\n>>> file_path = os.path.join(os.getcwd(), \"pyansys-geometry.log\")\n>>> LOG.log_to_file(file_path)\n\n\n\nLogger.log_to_stdout(level=LOG_LEVEL)\n\nAdd the standard output handler to the logger.\n\nParameters\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\n\n\nLogger.setLevel(level='DEBUG')\n\nChange the log level of the object and the attached handlers.\n\n\n\nLogger.add_child_logger(suffix: str, level: str | None = None)\n\nAdd a child logger to the main logger.\n\nThis logger is more general than an instance logger, which is designed to\ntrack the state of Geometry service instances.\n\nIf the logging level is in the arguments, a new logger with a reference\nto the _global logger handlers is created instead of a child logger.\n\nParameters\n\nsuffix\n\npython:str\n\nName of the child logger.\n\nlevel\n\npython:str, default: python:None\n\nLevel of logging.\n\nReturns\n\nlogging.Logger\n\nLogger class.\n\n\n\nLogger.add_instance_logger(name: str, client_instance: ansys.geometry.core.connection.client.GrpcClient, level: int | None = None) -> PyGeometryCustomAdapter\n\nAdd a logger for a Geometry service instance.\n\nThe Geometry service instance logger is a logger with an adapter that adds\ncontextual information such as the Geometry service instance name. This logger is\nreturned, and you can use it to log events as a normal logger. It is\nstored in the _instances field.\n\nParameters\n\nname\n\npython:str\n\nName for the new instance logger.\n\nclient_instance\n\nGrpcClient\n\nGeometry service GrpcClient object, which should contain the get_name method.\n\nlevel\n\npython:int, default: python:None\n\nLevel of logging.\n\nReturns\n\nPyGeometryCustomAdapter\n\nLogger adapter customized to add Geometry service information to the\nlogs. You can use this class to log events in the same\nway you would with the Logger class.\n\n\n\nLogger.__getitem__(key)\n\nOverload the access method by item for the Logger class.\n\n\n\nLogger.add_handling_uncaught_expections(logger)\n\nRedirect the output of an exception to a logger.\n\nParameters\n\nlogger\n\npython:str\n\nName of the logger."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/index.html#the-arcpy-module","title":"The arc.py module","text":"The arc.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/index.html#summary","title":"The arc.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nArc\n\nProvides for modeling an arc.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/arc/index.html#description","title":"The arc.py module > Description","text":"Description\n\nProvides for creating and managing an arc."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/GRPCDesignsServiceV1.html#grpcdesignsservicev1","title":"GRPCDesignsServiceV1","text":"GRPCDesignsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.designs.GRPCDesignsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.designs.GRPCDesignsService\n\nDesigns service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ndesigns service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/GRPCDesignsServiceV1.html#overview","title":"GRPCDesignsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nopen\n\nOpen a design on the service.\n\nnew\n\nCreate a new design.\n\nget_assembly\n\nCreate a new design.\n\nclose\n\nClose the currently open design.\n\nput_active\n\nActivate an already opened design on the service.\n\nsave_as\n\nCreate a new design.\n\ndownload_export\n\nDownload and export a design into a certain format.\n\nstream_download_export\n\nDownload and export a design into a certain format.\n\ninsert\n\nInsert a part/component/design into an existing design.\n\nget_active\n\nGet the active design on the service.\n\nupload_file\n\nUpload a file to the server.\n\nupload_file_stream\n\nUpload a file to the server using streaming.\n\nstream_design_tessellation\n\nStream the tessellation of a design.\n\ndownload_file\n\nDownload the design from the server.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/GRPCDesignsServiceV1.html#import-detail","title":"GRPCDesignsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/GRPCDesignsServiceV1.html#attribute-detail","title":"GRPCDesignsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDesignsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/designs/GRPCDesignsServiceV1.html#method-detail","title":"GRPCDesignsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDesignsServiceV1.open(**kwargs) -> dict\n\nOpen a design on the service.\n\n\n\nabstractmethod GRPCDesignsServiceV1.new(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.get_assembly(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.close(**kwargs) -> dict\n\nClose the currently open design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.put_active(**kwargs) -> dict\n\nActivate an already opened design on the service.\n\n\n\nabstractmethod GRPCDesignsServiceV1.save_as(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nabstractmethod GRPCDesignsServiceV1.stream_download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nabstractmethod GRPCDesignsServiceV1.insert(**kwargs) -> dict\n\nInsert a part/component/design into an existing design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.get_active(**kwargs) -> dict\n\nGet the active design on the service.\n\n\n\nabstractmethod GRPCDesignsServiceV1.upload_file(**kwargs) -> dict\n\nUpload a file to the server.\n\n\n\nabstractmethod GRPCDesignsServiceV1.upload_file_stream(**kwargs) -> dict\n\nUpload a file to the server using streaming.\n\n\n\nabstractmethod GRPCDesignsServiceV1.stream_design_tessellation(**kwargs) -> dict\n\nStream the tessellation of a design.\n\n\n\nabstractmethod GRPCDesignsServiceV1.download_file(**kwargs) -> dict\n\nDownload the design from the server."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/MasterComponent.html#mastercomponent","title":"MasterComponent","text":"MasterComponent\n\n\n\nclass ansys.geometry.core.designer.part.MasterComponent(id: str, name: str, part: Part, transform: ansys.geometry.core.math.matrix.Matrix44 = IDENTITY_MATRIX44)\n\nRepresents a part occurrence.\n\nParameters\n\nid\n\npython:str\n\nUnique identifier for the transformed part.\n\nname\n\npython:str\n\nName of the transformed part.\n\npart\n\nPart\n\nReference to the transformed part’s master part.\n\ntransform\n\nMatrix44\n\n4x4 transformation matrix from the master part.\n\nNotes\n\nThis class should not be accessed by users. It holds the fundamental data of\nan assembly. Master components wrap parts by adding a transform matrix."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/MasterComponent.html#overview","title":"MasterComponent > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the transformed part.\n\nname\n\nName of the transformed part.\n\noccurrences\n\nList of all occurrences of the component.\n\npart\n\nMaster part of the transformed part.\n\ntransform\n\n4x4 transformation matrix from the master part.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the master component as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/MasterComponent.html#import-detail","title":"MasterComponent > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/MasterComponent.html#property-detail","title":"MasterComponent > Property detail","text":"Property detail\n\n\n\nproperty MasterComponent.id: str\n\nID of the transformed part.\n\n\n\nproperty MasterComponent.name: str\n\nName of the transformed part.\n\n\n\nproperty MasterComponent.occurrences: list[ansys.geometry.core.designer.component.Component]\n\nList of all occurrences of the component.\n\n\n\nproperty MasterComponent.part: Part\n\nMaster part of the transformed part.\n\n\n\nproperty MasterComponent.transform: ansys.geometry.core.math.matrix.Matrix44\n\n4x4 transformation matrix from the master part."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/MasterComponent.html#method-detail","title":"MasterComponent > Method detail","text":"Method detail\n\n\n\nMasterComponent.__repr__() -> str\n\nRepresent the master component as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/index.html#the-partspy-module","title":"The parts.py module","text":"The parts.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/index.html#summary","title":"The parts.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPartsServiceV0\n\nParts service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/index.html#description","title":"The parts.py module > Description","text":"Description\n\nModule containing the parts service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialProperty.html#materialproperty","title":"MaterialProperty","text":"MaterialProperty\n\n\n\nclass ansys.geometry.core.materials.property.MaterialProperty(type: MaterialPropertyType | str, name: str, quantity: pint.Quantity | ansys.geometry.core.typing.Real)\n\nProvides the data structure for a material property.\n\nParameters\n\ntype\n\nMaterialPropertyType | python:str\n\nType of the material property. If the type is a string, it must be a valid\nmaterial property type - though it might not be supported by the MaterialPropertyType\nenum.\n\nname: str\n\nMaterial property name.\n\nquantity: ~pint.Quantity | Real\n\nValue and unit in case of a supported Quantity. If the type is not supported, it\nmust be a Real value (float or integer)."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialProperty.html#overview","title":"MaterialProperty > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntype\n\nMaterial property ID.\n\nname\n\nMaterial property name.\n\nquantity\n\nMaterial property quantity and unit."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialProperty.html#import-detail","title":"MaterialProperty > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/MaterialProperty.html#property-detail","title":"MaterialProperty > Property detail","text":"Property detail\n\n\n\nproperty MaterialProperty.type: MaterialPropertyType | str\n\nMaterial property ID.\n\nIf the type is not supported, it will be a string.\n\n\n\nproperty MaterialProperty.name: str\n\nMaterial property name.\n\n\n\nproperty MaterialProperty.quantity: pint.Quantity | ansys.geometry.core.typing.Real\n\nMaterial property quantity and unit.\n\nIf the type is not supported, it will be a Real value (float or\ninteger)."},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/Plane.html#plane","title":"Plane","text":"Plane\n\n\n\nclass ansys.geometry.core.math.plane.Plane(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D = ZERO_POINT3D, direction_x: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, direction_y: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Y)\n\nBases: ansys.geometry.core.math.frame.Frame\n\nProvides primitive representation of a 2D plane in 3D space.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D, default: ZERO_POINT3D\n\nCentered origin of the frame. The default is ZERO_POINT3D, which is the\nCartesian origin.\n\ndirection_x\n\nndarray | RealSequence | UnitVector3D | Vector3D, default: UNITVECTOR3D_X\n\nX-axis direction.\n\ndirection_y\n\nndarray | RealSequence | UnitVector3D | Vector3D, default: UNITVECTOR3D_Y\n\nY-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/Plane.html#overview","title":"Plane > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nis_point_contained\n\nCheck if a 3D point is contained in the plane.\n\nProperties\n\n\n\n\n\nnormal\n\nCalculate the normal vector of the plane.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Plane class.\n\n__ne__\n\nNot equals operator for the Plane class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/Plane.html#import-detail","title":"Plane > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/Plane.html#property-detail","title":"Plane > Property detail","text":"Property detail\n\n\n\nproperty Plane.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nCalculate the normal vector of the plane.\n\nReturns\n\nUnitVector3D\n\nNormal vector of the plane."},{"objectID":"Home","href":"api/ansys/geometry/core/math/plane/Plane.html#method-detail","title":"Plane > Method detail","text":"Method detail\n\n\n\nPlane.is_point_contained(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck if a 3D point is contained in the plane.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint3D class to check.\n\nReturns\n\nbool\n\nTrue if the 3D point is contained in the plane, False otherwise.\n\n\n\nPlane.__eq__(other: Plane) -> bool\n\nEquals operator for the Plane class.\n\n\n\nPlane.__ne__(other: Plane) -> bool\n\nNot equals operator for the Plane class."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/index.html#the-pointspy-module","title":"The points.py module","text":"The points.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/index.html#summary","title":"The points.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPointsService\n\nPoints service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/index.html#description","title":"The points.py module > Description","text":"Description\n\nModule containing the points service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/GRPCNamedSelectionServiceV1.html#grpcnamedselectionservicev1","title":"GRPCNamedSelectionServiceV1","text":"GRPCNamedSelectionServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.named_selection.GRPCNamedSelectionServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.named_selection.GRPCNamedSelectionService\n\nNamed Selection service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nNamed Selection service. It is specifically designed for the v1 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/GRPCNamedSelectionServiceV1.html#overview","title":"GRPCNamedSelectionServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_named_selection\n\nGet the named selection by its id.\n\ncreate_named_selection\n\nCreate a named selection.\n\ndelete_named_selection\n\nDelete a named selection by id.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/GRPCNamedSelectionServiceV1.html#import-detail","title":"GRPCNamedSelectionServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/GRPCNamedSelectionServiceV1.html#attribute-detail","title":"GRPCNamedSelectionServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCNamedSelectionServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/named_selection/GRPCNamedSelectionServiceV1.html#method-detail","title":"GRPCNamedSelectionServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCNamedSelectionServiceV1.get_named_selection(**kwargs)\n\nGet the named selection by its id.\n\n\n\nabstractmethod GRPCNamedSelectionServiceV1.create_named_selection(**kwargs)\n\nCreate a named selection.\n\n\n\nabstractmethod GRPCNamedSelectionServiceV1.delete_named_selection(**kwargs)\n\nDelete a named selection by id."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/index.html#the-materials-package","title":"The materials package","text":"The materials package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/index.html#summary","title":"The materials package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nmaterial\n\nProvides the data structure for material and material properties.\n\nproperty\n\nProvides the MaterialProperty class.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/index.html#description","title":"The materials package > Description","text":"Description\n\nPyAnsys Geometry materials subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/GRPCFacesService.html#grpcfacesservice","title":"GRPCFacesService","text":"GRPCFacesService\n\n\n\nclass ansys.geometry.core._grpc._services.base.faces.GRPCFacesService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nFaces service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/GRPCFacesService.html#overview","title":"GRPCFacesService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_surface\n\nGet the surface of a face.\n\nget_box_uv\n\nGet the UV box of a face.\n\nget_area\n\nGet the area of a face.\n\nget_edges\n\nGet the edges of a face.\n\nget_vertices\n\nGet the vertices of a face.\n\nget_loops\n\nGet the loops of a face.\n\nget_color\n\nGet the color of a face.\n\nget_bounding_box\n\nGet the bounding box of a face.\n\nset_color\n\nSet the color of a face.\n\nget_normal\n\nGet the normal of a face.\n\nevaluate\n\nEvaluate a face at a given parameter.\n\ncreate_iso_parametric_curve\n\nCreate an iso-parametric curve on a face.\n\nextrude_faces\n\nExtrude a selection of faces.\n\nextrude_faces_up_to\n\nExtrude a selection of faces up to another object.\n\noffset_faces_set_radius\n\nOffset a selection of faces by a given radius.\n\nrevolve_faces\n\nRevolve a selection of faces around an axis.\n\nrevolve_faces_up_to\n\nRevolve a selection of faces around an axis up to another object.\n\nrevolve_faces_by_helix\n\nRevolve a selection of faces around an axis by a helix.\n\nreplace_faces\n\nReplace a selection of faces with new faces.\n\nthicken_faces\n\nThicken a selection of faces.\n\ndraft_faces\n\nDraft a selection of faces.\n\nget_round_info\n\nGet round information for a selection of faces.\n\noffset_faces\n\nOffset a selection of faces.\n\nsetup_offset_relationship\n\nSet up an offset relationship between two faces."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/GRPCFacesService.html#import-detail","title":"GRPCFacesService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/faces/GRPCFacesService.html#method-detail","title":"GRPCFacesService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCFacesService.get_surface(**kwargs) -> dict\n\nGet the surface of a face.\n\n\n\nabstractmethod GRPCFacesService.get_box_uv(**kwargs) -> dict\n\nGet the UV box of a face.\n\n\n\nabstractmethod GRPCFacesService.get_area(**kwargs) -> dict\n\nGet the area of a face.\n\n\n\nabstractmethod GRPCFacesService.get_edges(**kwargs) -> dict\n\nGet the edges of a face.\n\n\n\nabstractmethod GRPCFacesService.get_vertices(**kwargs) -> dict\n\nGet the vertices of a face.\n\n\n\nabstractmethod GRPCFacesService.get_loops(**kwargs) -> dict\n\nGet the loops of a face.\n\n\n\nabstractmethod GRPCFacesService.get_color(**kwargs) -> dict\n\nGet the color of a face.\n\n\n\nabstractmethod GRPCFacesService.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a face.\n\n\n\nabstractmethod GRPCFacesService.set_color(**kwargs) -> dict\n\nSet the color of a face.\n\n\n\nabstractmethod GRPCFacesService.get_normal(**kwargs) -> dict\n\nGet the normal of a face.\n\n\n\nabstractmethod GRPCFacesService.evaluate(**kwargs) -> dict\n\nEvaluate a face at a given parameter.\n\n\n\nabstractmethod GRPCFacesService.create_iso_parametric_curve(**kwargs) -> dict\n\nCreate an iso-parametric curve on a face.\n\n\n\nabstractmethod GRPCFacesService.extrude_faces(**kwargs) -> dict\n\nExtrude a selection of faces.\n\n\n\nabstractmethod GRPCFacesService.extrude_faces_up_to(**kwargs) -> dict\n\nExtrude a selection of faces up to another object.\n\n\n\nabstractmethod GRPCFacesService.offset_faces_set_radius(**kwargs) -> dict\n\nOffset a selection of faces by a given radius.\n\n\n\nabstractmethod GRPCFacesService.revolve_faces(**kwargs) -> dict\n\nRevolve a selection of faces around an axis.\n\n\n\nabstractmethod GRPCFacesService.revolve_faces_up_to(**kwargs) -> dict\n\nRevolve a selection of faces around an axis up to another object.\n\n\n\nabstractmethod GRPCFacesService.revolve_faces_by_helix(**kwargs) -> dict\n\nRevolve a selection of faces around an axis by a helix.\n\n\n\nabstractmethod GRPCFacesService.replace_faces(**kwargs) -> dict\n\nReplace a selection of faces with new faces.\n\n\n\nabstractmethod GRPCFacesService.thicken_faces(**kwargs) -> dict\n\nThicken a selection of faces.\n\n\n\nabstractmethod GRPCFacesService.draft_faces(**kwargs) -> dict\n\nDraft a selection of faces.\n\n\n\nabstractmethod GRPCFacesService.get_round_info(**kwargs) -> dict\n\nGet round information for a selection of faces.\n\n\n\nabstractmethod GRPCFacesService.offset_faces(**kwargs) -> dict\n\nOffset a selection of faces.\n\n\n\nabstractmethod GRPCFacesService.setup_offset_relationship(**kwargs) -> dict\n\nSet up an offset relationship between two faces."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/Sketch.html#sketch","title":"Sketch","text":"Sketch\n\n\n\nclass ansys.geometry.core.sketch.sketch.Sketch(plane: ansys.geometry.core.math.plane.Plane = Plane())\n\nProvides for building 2D sketch elements."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/Sketch.html#overview","title":"Sketch > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ntranslate_sketch_plane\n\nTranslate the origin location of the active sketch plane.\n\ntranslate_sketch_plane_by_offset\n\nTranslate the origin location of the active sketch plane by offsets.\n\ntranslate_sketch_plane_by_distance\n\nTranslate the origin location active sketch plane by distance.\n\nget\n\nGet a list of shapes with a given tag.\n\nface\n\nAdd a sketch face to the sketch.\n\nedge\n\nAdd a sketch edge to the sketch.\n\nselect\n\nAdd all objects that match provided tags to the current context.\n\nsegment\n\nAdd a segment sketch object to the sketch plane.\n\nsegment_to_point\n\nAdd a segment to the sketch plane starting from the previous end point.\n\nsegment_from_point_and_vector\n\nAdd a segment to the sketch starting from a given starting point.\n\nsegment_from_vector\n\nAdd a segment to the sketch starting from the previous end point.\n\narc\n\nAdd an arc to the sketch plane.\n\narc_to_point\n\nAdd an arc to the sketch starting from the previous end point.\n\narc_from_three_points\n\nAdd an arc to the sketch plane from three given points.\n\narc_from_start_end_and_radius\n\nAdd an arc from the start, end points and a radius.\n\narc_from_start_center_and_angle\n\nAdd an arc from the start, center point, and angle.\n\nnurbs_from_2d_points\n\nAdd a NURBS curve from a list of 2D points.\n\ntriangle\n\nAdd a triangle to the sketch using given vertex points.\n\ntrapezoid\n\nAdd a trapezoid to the sketch using given vertex points.\n\ncircle\n\nAdd a circle to the plane at a given center.\n\nbox\n\nCreate a box on the sketch.\n\nslot\n\nCreate a slot on the sketch.\n\nellipse\n\nCreate an ellipse on the sketch.\n\npolygon\n\nCreate a polygon on the sketch.\n\ndummy_gear\n\nCreate a dummy gear on the sketch.\n\nspur_gear\n\nCreate a spur gear on the sketch.\n\ntag\n\nAdd a tag to the active selection of sketch objects.\n\nplot\n\nPlot all objects of the sketch to the scene.\n\nplot_selection\n\nPlot the current selection to the scene.\n\nsketch_polydata\n\nGet polydata configuration for all objects of the sketch.\n\nsketch_polydata_faces\n\nGet polydata configuration for all faces of the sketch to the scene.\n\nsketch_polydata_edges\n\nGet polydata configuration for all edges of the sketch to the scene.\n\nProperties\n\n\n\n\n\nplane\n\nSketch plane configuration.\n\nedges\n\nList of all independently sketched edges.\n\nfaces\n\nList of all independently sketched faces."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/Sketch.html#import-detail","title":"Sketch > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/Sketch.html#property-detail","title":"Sketch > Property detail","text":"Property detail\n\n\n\nproperty Sketch.plane: ansys.geometry.core.math.plane.Plane\n\nSketch plane configuration.\n\n\n\nproperty Sketch.edges: list[ansys.geometry.core.sketch.edge.SketchEdge]\n\nList of all independently sketched edges.\n\nNotes\n\nIndependently sketched edges are not assigned to a face. Face edges\nare not included in this list.\n\n\n\nproperty Sketch.faces: list[ansys.geometry.core.sketch.face.SketchFace]\n\nList of all independently sketched faces."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/sketch/Sketch.html#method-detail","title":"Sketch > Method detail","text":"Method detail\n\n\n\nSketch.translate_sketch_plane(translation: ansys.geometry.core.math.vector.Vector3D) -> Sketch\n\nTranslate the origin location of the active sketch plane.\n\nParameters\n\ntranslation\n\nVector3D\n\nVector defining the translation. Default units are the expected\nunits, otherwise it will be inconsistent.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.translate_sketch_plane_by_offset(x: pint.Quantity | ansys.geometry.core.misc.measurements.Distance = Quantity(0, DEFAULT_UNITS.LENGTH), y: pint.Quantity | ansys.geometry.core.misc.measurements.Distance = Quantity(0, DEFAULT_UNITS.LENGTH), z: pint.Quantity | ansys.geometry.core.misc.measurements.Distance = Quantity(0, DEFAULT_UNITS.LENGTH)) -> Sketch\n\nTranslate the origin location of the active sketch plane by offsets.\n\nParameters\n\nx\n\nQuantity | Distance, default: Quantity(0, DEFAULT_UNITS.LENGTH)\n\nAmount to translate the origin of the x-direction.\n\ny\n\nQuantity | Distance, default: Quantity(0, DEFAULT_UNITS.LENGTH)\n\nAmount to translate the origin of the y-direction.\n\nz\n\nQuantity | Distance, default: Quantity(0, DEFAULT_UNITS.LENGTH)\n\nAmount to translate the origin of the z-direction.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.translate_sketch_plane_by_distance(direction: ansys.geometry.core.math.vector.UnitVector3D, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance) -> Sketch\n\nTranslate the origin location active sketch plane by distance.\n\nParameters\n\ndirection\n\nUnitVector3D\n\nDirection to translate the origin.\n\ndistance\n\nQuantity | Distance\n\nDistance to translate the origin.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.get(tag: str) -> list[SketchObject]\n\nGet a list of shapes with a given tag.\n\nParameters\n\ntag\n\npython:str\n\nTag to query against.\n\n\n\nSketch.face(face: ansys.geometry.core.sketch.face.SketchFace, tag: str | None = None) -> Sketch\n\nAdd a sketch face to the sketch.\n\nParameters\n\nface\n\nSketchFace\n\nFace to add.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.edge(edge: ansys.geometry.core.sketch.edge.SketchEdge, tag: str | None = None) -> Sketch\n\nAdd a sketch edge to the sketch.\n\nParameters\n\nedge\n\nSketchEdge\n\nEdge to add.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.select(*tags: str) -> Sketch\n\nAdd all objects that match provided tags to the current context.\n\n\n\nSketch.segment(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, tag: str | None = None) -> Sketch\n\nAdd a segment sketch object to the sketch plane.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the line segment.\n\nend\n\nPoint2D\n\nEnding point of the line segment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.segment_to_point(end: ansys.geometry.core.math.point.Point2D, tag: str | None = None) -> Sketch\n\nAdd a segment to the sketch plane starting from the previous end point.\n\nParameters\n\nend\n\nPoint2D\n\nEnding point of the line segment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nNotes\n\nThe starting point of the created edge is based upon the current context\nof the sketch, such as the end point of a previously added edge.\n\n\n\nSketch.segment_from_point_and_vector(start: ansys.geometry.core.math.point.Point2D, vector: ansys.geometry.core.math.vector.Vector2D, tag: str | None = None)\n\nAdd a segment to the sketch starting from a given starting point.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the line segment.\n\nvector\n\nVector2D\n\nVector defining the line segment. Vector magnitude determines\nthe segment endpoint. Vector magnitude is assumed to be in the\nsame unit as the starting point.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nNotes\n\nVector magnitude determines the segment endpoint.\nVector magnitude is assumed to use the same unit as the starting point.\n\n\n\nSketch.segment_from_vector(vector: ansys.geometry.core.math.vector.Vector2D, tag: str | None = None)\n\nAdd a segment to the sketch starting from the previous end point.\n\nParameters\n\nvector\n\nVector2D\n\nVector defining the line segment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nNotes\n\nThe starting point of the created edge is based upon the current context\nof the sketch, such as the end point of a previously added edge.\n\nVector magnitude determines the segment endpoint.\nVector magnitude is assumed to use the same unit as the starting point\nin the previous context.\n\n\n\nSketch.arc(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, center: ansys.geometry.core.math.point.Point2D, clockwise: bool = False, tag: str | None = None) -> Sketch\n\nAdd an arc to the sketch plane.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\ncenter\n\nPoint2D\n\nCenter point of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the angle clockwise between the start\nand end points. When False `` (default), the arc spans the angle\ncounter-clockwise. When ``True, the arc spans the angle\nclockwise.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.arc_to_point(end: ansys.geometry.core.math.point.Point2D, center: ansys.geometry.core.math.point.Point2D, clockwise: bool = False, tag: str | None = None) -> Sketch\n\nAdd an arc to the sketch starting from the previous end point.\n\nParameters\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\ncenter\n\nPoint2D\n\nCenter point of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the angle clockwise between the start\nand end points. When False (default), the arc spans the angle\ncounter-clockwise. When True, the arc spans the angle\nclockwise.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nNotes\n\nThe starting point of the created edge is based upon the current context\nof the sketch, such as the end point of a previously added edge.\n\n\n\nSketch.arc_from_three_points(start: ansys.geometry.core.math.point.Point2D, inter: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, tag: str | None = None) -> Sketch\n\nAdd an arc to the sketch plane from three given points.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\ninter\n\nPoint2D\n\nIntermediate point (location) of the arc.\n\nend\n\nPoint2D\n\nEnd point of the arc.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.arc_from_start_end_and_radius(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, convex_arc: bool = False, clockwise: bool = False, tag: str | None = None) -> Sketch\n\nAdd an arc from the start, end points and a radius.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\nend\n\nPoint2D\n\nEnding point of the arc.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the arc.\n\nconvex_arc\n\nbool, default: python:False\n\nWhether the arc is convex. The default is False.\nWhen False , the arc spans the concave version of the arc.\nWhen True, the arc spans the convex version of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the angle clockwise between the start\nand end points. When False, the arc spans the angle\ncounter-clockwise. When True, the arc spans the angle\nclockwise.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the edge.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nThis method may not produce the exact same radius, depending on the input parameters.\nThis is due to the mathematical approximations involved in the arc creation.\n\n\n\nSketch.arc_from_start_center_and_angle(start: ansys.geometry.core.math.point.Point2D, center: ansys.geometry.core.math.point.Point2D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, clockwise: bool = False, tag: str | None = None) -> Sketch\n\nAdd an arc from the start, center point, and angle.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the arc.\n\ncenter\n\nPoint2D\n\nCenter point of the arc.\n\nangle\n\nQuantity | Angle | Real\n\nAngle of the arc.\n\nclockwise\n\nbool, default: python:False\n\nWhether the arc spans the angle clockwise. The default is False.\nWhen False , the arc spans the angle counter-clockwise.\nWhen True, the arc spans the angle clockwise.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.nurbs_from_2d_points(points: list[ansys.geometry.core.math.point.Point2D], tag: str | None = None) -> Sketch\n\nAdd a NURBS curve from a list of 2D points.\n\nParameters\n\npoints\n\npython:list[Point2D]\n\nList of 2D points to define the NURBS curve.\n\ntag\n\npython:str | python:None, default: python:None\n\nUser-defined label for identifying the curve.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.triangle(point1: ansys.geometry.core.math.point.Point2D, point2: ansys.geometry.core.math.point.Point2D, point3: ansys.geometry.core.math.point.Point2D, tag: str | None = None) -> Sketch\n\nAdd a triangle to the sketch using given vertex points.\n\nParameters\n\npoint1\n\nPoint2D\n\nPoint that represents a vertex of the triangle.\n\npoint2\n\nPoint2D\n\nPoint that represents a vertex of the triangle.\n\npoint3\n\nPoint2D\n\nPoint that represents a vertex of the triangle.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.trapezoid(base_width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, base_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, base_asymmetric_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real | None = None, center: ansys.geometry.core.math.point.Point2D = ZERO_POINT2D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, tag: str | None = None) -> Sketch\n\nAdd a trapezoid to the sketch using given vertex points.\n\nParameters\n\nbase_width\n\nQuantity | Distance | Real\n\nWidth of the lower base of the trapezoid.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the slot.\n\nbase_angle\n\nQuantity | Distance | Real\n\nAngle for trapezoid generation. Represents the angle\non the base of the trapezoid.\n\nbase_asymmetric_angle\n\nQuantity | Angle | Real | python:None, default: python:None\n\nAsymmetrical angles on each side of the trapezoid.\nThe default is None, in which case the trapezoid is symmetrical. If\nprovided, the trapezoid is asymmetrical and the right corner angle\nat the base of the trapezoid is set to the provided value.\n\ncenter: Point2D, default: ZERO_POINT2D\n\nCenter point of the trapezoid.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\nNotes\n\nIf an asymmetric base angle is defined, the base angle is\napplied to the left-most angle, and the asymmetric base angle\nis applied to the right-most angle.\n\n\n\nSketch.circle(center: ansys.geometry.core.math.point.Point2D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, tag: str | None = None) -> Sketch\n\nAdd a circle to the plane at a given center.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the circle.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the circle.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.box(center: ansys.geometry.core.math.point.Point2D, width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, tag: str | None = None) -> Sketch\n\nCreate a box on the sketch.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the box.\n\nwidth\n\nQuantity | Distance | Real\n\nWidth of the box.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the box.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.slot(center: ansys.geometry.core.math.point.Point2D, width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, tag: str | None = None) -> Sketch\n\nCreate a slot on the sketch.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the slot.\n\nwidth\n\nQuantity | Distance | Real\n\nWidth of the slot.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the slot.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.ellipse(center: ansys.geometry.core.math.point.Point2D, major_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, minor_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, tag: str | None = None) -> Sketch\n\nCreate an ellipse on the sketch.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the ellipse.\n\nmajor_radius\n\nQuantity | Distance | Real\n\nSemi-major axis of the ellipse.\n\nminor_radius\n\nQuantity | Distance | Real\n\nSemi-minor axis of the ellipse.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.polygon(center: ansys.geometry.core.math.point.Point2D, inner_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, sides: int, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, tag: str | None = None) -> Sketch\n\nCreate a polygon on the sketch.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the polygon.\n\ninner_radius\n\nQuantity | Distance | Real\n\nInner radius (apothem) of the polygon.\n\nsides\n\npython:int\n\nNumber of sides of the polygon.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.dummy_gear(origin: ansys.geometry.core.math.point.Point2D, outer_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, inner_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, n_teeth: int, tag: str | None = None) -> Sketch\n\nCreate a dummy gear on the sketch.\n\nParameters\n\norigin\n\nPoint2D\n\nOrigin of the gear.\n\nouter_radius\n\nQuantity | Distance | Real\n\nOuter radius of the gear.\n\ninner_radius\n\nQuantity | Distance | Real\n\nInner radius of the gear.\n\nn_teeth\n\npython:int\n\nNumber of teeth of the gear.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.spur_gear(origin: ansys.geometry.core.math.point.Point2D, module: ansys.geometry.core.typing.Real, pressure_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, n_teeth: int, tag: str | None = None) -> Sketch\n\nCreate a spur gear on the sketch.\n\nParameters\n\norigin\n\nPoint2D\n\nOrigin of the spur gear.\n\nmodule\n\nReal\n\nModule of the spur gear. This is also the ratio between the pitch circle\ndiameter in millimeters and the number of teeth.\n\npressure_angle\n\nQuantity | Angle | Real\n\nPressure angle of the spur gear.\n\nn_teeth\n\npython:int\n\nNumber of teeth of the spur gear.\n\ntag\n\npython:str, default: python:None\n\nUser-defined label for identifying the face.\n\nReturns\n\nSketch\n\nRevised sketch state ready for further sketch actions.\n\n\n\nSketch.tag(tag: str) -> None\n\nAdd a tag to the active selection of sketch objects.\n\nParameters\n\ntag\n\npython:str\n\nTag to assign to the sketch objects.\n\n\n\nSketch.plot(view_2d: bool = False, screenshot: str | None = None, use_trame: bool | None = None, selected_pd_objects: list[pyvista.PolyData] = None, **plotting_options: dict | None)\n\nPlot all objects of the sketch to the scene.\n\nParameters\n\nview_2d\n\nbool, default: python:False\n\nWhether to represent the plot in a 2D format.\n\nscreenshot\n\npython:str, optional\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enables the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\n**plotting_options\n\npython:dict, optional\n\nKeyword arguments for plotting. For allowable keyword arguments,\nsee the Plotter.add_mesh method.\n\n\n\nSketch.plot_selection(view_2d: bool = False, screenshot: str | None = None, use_trame: bool | None = None, **plotting_options: dict | None)\n\nPlot the current selection to the scene.\n\nParameters\n\nview_2d\n\nbool, default: python:False\n\nWhether to represent the plot in a 2D format.\n\nscreenshot\n\npython:str, optional\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enables the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\n**plotting_options\n\npython:dict, optional\n\nKeyword arguments for plotting. For allowable keyword arguments,\nsee the Plotter.add_mesh method.\n\n\n\nSketch.sketch_polydata() -> list[pyvista.PolyData]\n\nGet polydata configuration for all objects of the sketch.\n\nReturns\n\npython:list[PolyData]\n\nList of the polydata configuration for all edges and faces in the sketch.\n\n\n\nSketch.sketch_polydata_faces() -> list[pyvista.PolyData]\n\nGet polydata configuration for all faces of the sketch to the scene.\n\nReturns\n\npython:list[PolyData]\n\nList of the polydata configuration for faces in the sketch.\n\n\n\nSketch.sketch_polydata_edges() -> list[pyvista.PolyData]\n\nGet polydata configuration for all edges of the sketch to the scene.\n\nReturns\n\npython:list[PolyData]\n\nList of the polydata configuration for edges in the sketch."},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#modeling-boolean-operations","title":"Examples > Modeling: Boolean operations","text":"Modeling: Boolean operations\n\nThis example shows how to use Boolean operations for geometry manipulation."},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#perform-required-imports","title":"Examples > Modeling: Boolean operations > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#launch-local-modeler","title":"Examples > Modeling: Boolean operations > Launch local modeler","text":"Launch local modeler\n\nLaunch the local modeler. If you are not familiar with how to launch the local modeler, see the “Launch a modeling service” section in the PyAnsys Geometry 101: Modeling example.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#define-bodies","title":"Examples > Modeling: Boolean operations > Define bodies","text":"Define bodies\n\nThis section defines the bodies to use the Boolean operations on. First you create sketches of a box and a circle, and then you extrude these sketches to create 3D objects."},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#create-sketches","title":"Examples > Modeling: Boolean operations > Create sketches","text":"Create sketches\n\nCreate sketches of a box and a circle that serve as the basis for your bodies.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#extrude-sketches","title":"Examples > Modeling: Boolean operations > Extrude sketches","text":"Extrude sketches\n\nAfter the sketches are created, extrude them to create 3D objects.\n\n\n\n\n\nYou must extrude the sketches each time that you perform an example operation. This is because performing a Boolean operation modifies the underlying design permanently. Thus, you no longer have two bodies. As shown in the Boolean operations themselves, whenever you pass in a body, it is consumed, and so it no longer exists. The remaining body (with the performed Boolean operation) is the one that performed the call to the method."},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#select-bodies","title":"Examples > Modeling: Boolean operations > Select bodies","text":"Select bodies\n\nYou can optionally select bodies in the plotter as described in the “Select objects interactively” section in the PyAnsys Geometry 101: Plotter example. As shown in this example, the plotter preserves the picking order, meaning that the output list is sorted according to the picking order.\n\nOtherwise, you can select bodies from the design directly.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#perform-boolean-operations","title":"Examples > Modeling: Boolean operations > Perform Boolean operations","text":"Perform Boolean operations\n\nThis section performs Boolean operations on the defined bodies using the PyAnsys Geometry library. It explores intersection, union, and subtraction operations."},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#perform-an-intersection-operation","title":"Examples > Modeling: Boolean operations > Perform an intersection operation","text":"Perform an intersection operation\n\nTo perform an intersection operation on the bodies, first set up the bodies.\n\n\n\n\n\nPerform the intersection and plot the results.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe final remaining body is the prism body because the cylin body has been consumed.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#perform-a-union-operation","title":"Examples > Modeling: Boolean operations > Perform a union operation","text":"Perform a union operation\n\nTo carry out a union operation on the bodies, first set up the bodies.\n\n\n\n\n\nPerform the union and plot the results.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe final remaining body is the prism body because the cylin body has been consumed.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#perform-a-subtraction-operation","title":"Examples > Modeling: Boolean operations > Perform a subtraction operation","text":"Perform a subtraction operation\n\nTo perform a subtraction operation on the bodies, first set up the bodies.\n\n\n\n\n\nPerform the subtraction and plot the results.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe final remaining body is the prism body because the cylin body has been consumed.\n\n\n\n\n\n\n\n\n\nIf you perform this action inverting the order of the bodies (that is, cylin.subtract(prism), you can see the difference in the resulting shape of the body.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this case, the final remaining body is the cylin body because the prism body has been consumed.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#close-the-modeler","title":"Examples > Modeling: Boolean operations > Close the modeler","text":"Close the modeler\n\nClose the modeler to release the resources.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/boolean_operations.html#summary","title":"Examples > Modeling: Boolean operations > Summary","text":"Summary\n\nThese Boolean operations provide powerful tools for creating complex geometries and combining or modifying existing shapes in meaningful ways.\n\nFeel free to experiment with different shapes, sizes, and arrangements to further enhance your understanding of Boolean operations in PyAnsys Geometry and their applications."},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide\n\nThis section provides an overview of the PyAnsys Geometry library,\nexplaining key concepts and approaches for primitives,\nsketches (2D basic shape elements), and model designs.\n\n"},{"objectID":"Home","href":"user_guide/index.html#pyansys-geometry-overview","title":"User guide > PyAnsys Geometry overview","text":"PyAnsys Geometry overview\n\nPyAnsys Geometry is a Python wrapper for the Ansys Geometry service.\nHere are some of the key features of PyAnsys Geometry:\n\nAbility to use the library alongside other Python libraries\n\nA functional-style API for a clean and easy coding experience\n\nBuilt-in examples"},{"objectID":"Home","href":"user_guide/index.html#simple-interactive-example","title":"User guide > Simple interactive example","text":"Simple interactive example\n\nThis simple interactive example shows how to start an instance of\nthe Geometry server and create a geometry model."},{"objectID":"Home","href":"user_guide/index.html#start-geometry-server-instance","title":"User guide > Start Geometry server instance","text":"Start Geometry server instance\n\nThe Modeler() class\nwithin the ansys-geometry-core library creates an instance of\nthe Geometry service. By default, the Modeler instance connects to\n127.0.0.1 (\"localhost\") on port 50051. You can change this\nby modifying the host and port parameters of the Modeler object,\nbut note that you must also modify your docker run command by changing\nthe <HOST-PORT>:50051 argument.\n\nThis code starts an instance of the Geometry service:"},{"objectID":"Home","href":"user_guide/index.html#create-geometry-model","title":"User guide > Create geometry model","text":"Create geometry model\n\nOnce an instance has started, you can create a\ngeometry model by initializing the sketch subpackage and using the\nshapes subpackage.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/IBody.html#ibody","title":"IBody","text":"IBody\n\n\n\nclass ansys.geometry.core.designer.body.IBody\n\nBases: abc.ABC\n\nDefines the common methods for a body, providing the abstract body interface.\n\nBoth the MasterBody class and Body class both inherit from the IBody\nclass. All child classes must implement all abstract methods."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/IBody.html#overview","title":"IBody > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nid\n\nGet the ID of the body as a string.\n\nname\n\nGet the name of the body.\n\nset_name\n\nSet the name of the body.\n\nfill_style\n\nGet the fill style of the body.\n\nset_fill_style\n\nSet the fill style of the body.\n\nis_suppressed\n\nGet the body suppression state.\n\nset_suppressed\n\nSet the body suppression state.\n\ncolor\n\nGet the color of the body.\n\nopacity\n\nGet the float value of the opacity for the body.\n\nset_color\n\nSet the color of the body.\n\nfaces\n\nGet a list of all faces within the body.\n\nedges\n\nGet a list of all edges within the body.\n\nvertices\n\nGet a list of all vertices within the body.\n\nis_alive\n\nCheck if the body is still alive and has not been deleted.\n\nis_surface\n\nCheck if the body is a planar body.\n\nsurface_thickness\n\nGet the surface thickness of a surface body.\n\nsurface_offset\n\nGet the surface offset type of a surface body.\n\nvolume\n\nCalculate the volume of the body.\n\nmaterial\n\nGet the assigned material of the body.\n\nbounding_box\n\nGet the bounding box of the body.\n\nassign_material\n\nAssign a material against the active design.\n\nget_assigned_material\n\nGet the assigned material of the body.\n\nremove_assigned_material\n\nRemove the material assigned to the body.\n\nadd_midsurface_thickness\n\nAdd a mid-surface thickness to a surface body.\n\nadd_midsurface_offset\n\nAdd a mid-surface offset to a surface body.\n\nimprint_curves\n\nImprint all specified geometries onto specified faces of the body.\n\nproject_curves\n\nProject all specified geometries onto the body.\n\nimprint_projected_curves\n\nProject and imprint specified geometries onto the body.\n\ntranslate\n\nTranslate the body in a specified direction and distance.\n\nrotate\n\nRotate the geometry body around the specified axis by a given angle.\n\nscale\n\nScale the geometry body by the given value.\n\nmap\n\nMap the geometry body to the new specified frame.\n\nmirror\n\nMirror the geometry body across the specified plane.\n\nget_collision\n\nGet the collision state between bodies.\n\ncopy\n\nCreate a copy of the body under the specified parent.\n\nget_raw_tessellation\n\nTessellate the body and return the raw tessellation data.\n\ntessellate\n\nTessellate the body and return the geometry as triangles.\n\nshell_body\n\nShell the body to the thickness specified.\n\nremove_faces\n\nShell by removing a given set of faces.\n\nplot\n\nPlot the body.\n\nMethods\n\n\n\n\n\nintersect\n\nIntersect two (or more) bodies.\n\nsubtract\n\nSubtract two (or more) bodies.\n\nunite\n\nUnite two (or more) bodies.\n\ncombine_merge\n\nCombine this body with another body or bodies, merging them into a single body."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/IBody.html#import-detail","title":"IBody > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/IBody.html#method-detail","title":"IBody > Method detail","text":"Method detail\n\n\n\nabstractmethod IBody.id() -> str\n\nGet the ID of the body as a string.\n\n\n\nabstractmethod IBody.name() -> str\n\nGet the name of the body.\n\n\n\nabstractmethod IBody.set_name(str) -> None\n\nSet the name of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nabstractmethod IBody.fill_style() -> FillStyle\n\nGet the fill style of the body.\n\n\n\nabstractmethod IBody.set_fill_style(fill_style: FillStyle) -> None\n\nSet the fill style of the body.\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nabstractmethod IBody.is_suppressed() -> bool\n\nGet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nabstractmethod IBody.set_suppressed(suppressed: bool) -> None\n\nSet the body suppression state.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nabstractmethod IBody.color() -> str\n\nGet the color of the body.\n\n\n\nabstractmethod IBody.opacity() -> float\n\nGet the float value of the opacity for the body.\n\n\n\nabstractmethod IBody.set_color(color: str | tuple[float, float, float] | tuple[float, float, float, float]) -> None\n\nSet the color of the body.\n\nParameters\n\ncolor\n\npython:str | python:tuple[python:float, python:float, python:float] | python:tuple[python:float, python:float, python:float, python:float]\n\nColor to set the body to. This can be a string representing a color name\nor a tuple of RGB values in the range [0, 1] (RGBA) or [0, 255] (pure RGB).\n\nThis method is only available starting on Ansys release 25R1.\n\n\n\nabstractmethod IBody.faces() -> list[ansys.geometry.core.designer.face.Face]\n\nGet a list of all faces within the body.\n\nReturns\n\npython:list[Face]\n\n\n\n\n\nabstractmethod IBody.edges() -> list[ansys.geometry.core.designer.edge.Edge]\n\nGet a list of all edges within the body.\n\nReturns\n\npython:list[Edge]\n\n\n\n\n\nabstractmethod IBody.vertices() -> list[ansys.geometry.core.designer.vertex.Vertex]\n\nGet a list of all vertices within the body.\n\nReturns\n\npython:list[Vertex]\n\n\n\n\n\nabstractmethod IBody.is_alive() -> bool\n\nCheck if the body is still alive and has not been deleted.\n\n\n\nabstractmethod IBody.is_surface() -> bool\n\nCheck if the body is a planar body.\n\n\n\nabstractmethod IBody.surface_thickness() -> pint.Quantity | None\n\nGet the surface thickness of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface thickness.\n\n\n\nabstractmethod IBody.surface_offset() -> MidSurfaceOffsetType | None\n\nGet the surface offset type of a surface body.\n\nNotes\n\nThis method is only for surface-type bodies that have been assigned a surface offset.\n\n\n\nabstractmethod IBody.volume() -> pint.Quantity\n\nCalculate the volume of the body.\n\nNotes\n\nWhen dealing with a planar surface, a value of 0 is returned as a volume.\n\n\n\nabstractmethod IBody.material() -> ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nabstractmethod IBody.bounding_box() -> ansys.geometry.core.math.bbox.BoundingBox\n\nGet the bounding box of the body.\n\nReturns\n\nBoundingBox\n\nBounding box of the body.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nabstractmethod IBody.assign_material(material: ansys.geometry.core.materials.material.Material) -> None\n\nAssign a material against the active design.\n\nParameters\n\nmaterial\n\nMaterial\n\nSource material data.\n\n\n\nabstractmethod IBody.get_assigned_material() -> ansys.geometry.core.materials.material.Material\n\nGet the assigned material of the body.\n\nReturns\n\nMaterial\n\nMaterial assigned to the body.\n\n\n\nabstractmethod IBody.remove_assigned_material() -> None\n\nRemove the material assigned to the body.\n\n\n\nabstractmethod IBody.add_midsurface_thickness(thickness: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> None\n\nAdd a mid-surface thickness to a surface body.\n\nParameters\n\nthickness\n\nDistance | Quantity | Real\n\nThickness to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface thickness assignment.\n\n\n\nabstractmethod IBody.add_midsurface_offset(offset: MidSurfaceOffsetType) -> None\n\nAdd a mid-surface offset to a surface body.\n\nParameters\n\noffset_type\n\nMidSurfaceOffsetType\n\nSurface offset to assign.\n\nNotes\n\nOnly surface bodies are eligible for mid-surface offset assignment.\n\n\n\nabstractmethod IBody.imprint_curves(faces: list[ansys.geometry.core.designer.face.Face], sketch: ansys.geometry.core.sketch.sketch.Sketch) -> tuple[list[ansys.geometry.core.designer.edge.Edge], list[ansys.geometry.core.designer.face.Face]]\n\nImprint all specified geometries onto specified faces of the body.\n\nParameters\n\nfaces: list[Face]\n\nlist of faces to imprint the curves of the sketch onto.\n\nsketch: Sketch\n\nAll curves to imprint on the faces.\n\nReturns\n\npython:tuple[python:list[Edge], python:list[Face]]\n\nAll impacted edges and faces from the imprint operation.\n\n\n\nabstractmethod IBody.project_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject all specified geometries onto the body.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll faces from the project curves operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nabstractmethod IBody.imprint_projected_curves(direction: ansys.geometry.core.math.vector.UnitVector3D, sketch: ansys.geometry.core.sketch.sketch.Sketch, closest_face: bool, only_one_curve: bool = False) -> list[ansys.geometry.core.designer.face.Face]\n\nProject and imprint specified geometries onto the body.\n\nThis method combines the project_curves() and imprint_curves() method into\none method. It has higher performance than calling them back-to-back when dealing\nwith many curves. Because it is a specialized function, this method only returns\nthe faces (and not the edges) from the imprint operation.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the projection.\n\nsketch: Sketch\n\nAll curves to project on the body.\n\nclosest_face: bool\n\nWhether to target the closest face with the projection.\n\nonly_one_curve: bool, default: False\n\nWhether to project only one curve of the entire sketch. When\nTrue, only one curve is projected.\n\nReturns\n\npython:list[Face]\n\nAll imprinted faces from the operation.\n\nNotes\n\nThe only_one_curve parameter allows you to optimize the server call because\nprojecting curves is an expensive operation. This reduces the workload on the\nserver side.\n\n\n\nabstractmethod IBody.translate(direction: ansys.geometry.core.math.vector.UnitVector3D, distance: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> None\n\nTranslate the body in a specified direction and distance.\n\nParameters\n\ndirection: UnitVector3D\n\nDirection of the translation.\n\ndistance: ~pint.Quantity | Distance | Real\n\nDistance (magnitude) of the translation.\n\n\n\nabstractmethod IBody.rotate(axis_origin: ansys.geometry.core.math.point.Point3D, axis_direction: ansys.geometry.core.math.vector.UnitVector3D, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real) -> None\n\nRotate the geometry body around the specified axis by a given angle.\n\nParameters\n\naxis_origin: Point3D\n\nOrigin of the rotational axis.\n\naxis_direction: UnitVector3D\n\nThe axis of rotation.\n\nangle: ~pint.Quantity | Angle | Real\n\nAngle (magnitude) of the rotation.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod IBody.scale(value: ansys.geometry.core.typing.Real) -> None\n\nScale the geometry body by the given value.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nvalue: Real\n\nValue to scale the body by.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod IBody.map(frame: ansys.geometry.core.math.frame.Frame) -> None\n\nMap the geometry body to the new specified frame.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nframe: Frame\n\nStructure defining the orientation of the body.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod IBody.mirror(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nMirror the geometry body across the specified plane.\n\nThe calling object is directly modified when this method is called.\nThus, it is important to make copies if needed.\n\nParameters\n\nplane: Plane\n\nRepresents the mirror.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod IBody.get_collision(body: Body) -> CollisionType\n\nGet the collision state between bodies.\n\nParameters\n\nbody: Body\n\nObject that the collision state is checked with.\n\nReturns\n\nCollisionType\n\nEnum that defines the collision state between bodies.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nabstractmethod IBody.copy(parent: ansys.geometry.core.designer.component.Component, name: str = None) -> Body\n\nCreate a copy of the body under the specified parent.\n\nParameters\n\nparent: Component\n\nParent component to place the new body under within the design assembly.\n\nname: str\n\nName to give the new body.\n\nReturns\n\nBody\n\nCopy of the body.\n\n\n\nabstractmethod IBody.get_raw_tessellation(transform: ansys.geometry.core.math.matrix.Matrix44 = IDENTITY_MATRIX44, tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> dict\n\nTessellate the body and return the raw tessellation data.\n\nParameters\n\ntransform\n\nMatrix44, default: IDENTITY_MATRIX44\n\nA transformation matrix to apply to the tessellation.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\npython:dict\n\nDictionary with face and edge IDs as keys and face and edge tessellation data as values.\n\n\n\nabstractmethod IBody.tessellate(merge: bool = False, tess_options: ansys.geometry.core.misc.options.TessellationOptions | None = None, reset_cache: bool = False, include_faces: bool = True, include_edges: bool = False) -> pyvista.PolyData | pyvista.MultiBlock\n\nTessellate the body and return the geometry as triangles.\n\nParameters\n\nmerge\n\nbool, default: python:False\n\nWhether to merge the body into a single mesh. When False (default), the\nnumber of triangles are preserved and only the topology is merged.\nWhen True, the individual faces of the tessellation are merged.\n\ntess_options\n\nTessellationOptions | python:None, default: python:None\n\nA set of options to determine the tessellation quality.\n\nreset_cache\n\nbool, default: python:False\n\nWhether to reset the tessellation cache and re-request the tessellation\nfrom the server.\n\ninclude_faces\n\nbool, default: python:True\n\nWhether to include face tessellation data in the output.\n\ninclude_edges\n\nbool, default: python:False\n\nWhether to include edge tessellation data in the output.\n\nReturns\n\nPolyData, MultiBlock\n\nMerged pyvista.PolyData if merge=True or a composite dataset.\n\nExamples\n\nExtrude a box centered at the origin to create a rectangular body and\ntessellate it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> my_comp = design.add_component(\"my-comp\")\n>>> body = my_comp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> blocks = body.tessellate()\n>>> blocks\n>>> MultiBlock(0x7F94EC757460)\n     N Blocks:  6\n     X Bounds:  0.000, 4.000\n     Y Bounds:  -1.000, 0.000\n     Z Bounds:  -0.500, 4.500\n\nMerge the body:\n\n>>> mesh = body.tessellate(merge=True)\n>>> mesh\nPolyData (0x7f94ec75f3a0)\n  N Cells:      12\n  N Points:     24\n  X Bounds:     0.000e+00, 4.000e+00\n  Y Bounds:     -1.000e+00, 0.000e+00\n  Z Bounds:     -5.000e-01, 4.500e+00\n  N Arrays:     0\n\n\n\nabstractmethod IBody.shell_body(offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nShell the body to the thickness specified.\n\nParameters\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nabstractmethod IBody.remove_faces(selection: ansys.geometry.core.designer.face.Face | collections.abc.Iterable[ansys.geometry.core.designer.face.Face], offset: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real) -> bool\n\nShell by removing a given set of faces.\n\nParameters\n\nselection\n\nFace | Iterable[Face]\n\nFace or faces to be removed.\n\noffset\n\nDistance | Quantity | Real\n\nShell thickness.\n\nReturns\n\nbool\n\nTrue when successful, False when failed.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nabstractmethod IBody.plot(merge: bool = True, screenshot: str | None = None, use_trame: bool | None = None, use_service_colors: bool | None = None, **plotting_options: dict | None) -> None\n\nPlot the body.\n\nParameters\n\nmerge\n\nbool, default: python:True\n\nWhether to merge the body into a single mesh. Performance improved when True.\nWhen True (default), the individual faces of the tessellation are merged.\nWhen False, the number of triangles are preserved and only the topology\nis merged.\n\nscreenshot\n\npython:str, default: python:None\n\nPath for saving a screenshot of the image that is being represented.\n\nuse_trame\n\nbool, default: python:None\n\nWhether to enable the use of trame.\nThe default is None, in which case the\nansys.tools.visualization_interface.USE_TRAME global setting is used.\n\nuse_service_colors\n\nbool, default: python:None\n\nWhether to use the colors assigned to the body in the service. The default\nis None, in which case the ansys.geometry.core.USE_SERVICE_COLORS\nglobal setting is used.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for plotting. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\nExamples\n\nExtrude a box centered at the origin to create rectangular body and\nplot it:\n\n>>> from ansys.geometry.core.misc.units import UNITS as u\n>>> from ansys.geometry.core.sketch import Sketch\n>>> from ansys.geometry.core.math import Plane, Point2D, Point3D, UnitVector3D\n>>> from ansys.geometry.core import Modeler\n>>> modeler = Modeler()\n>>> origin = Point3D([0, 0, 0])\n>>> plane = Plane(origin, direction_x=[1, 0, 0], direction_y=[0, 0, 1])\n>>> sketch = Sketch(plane)\n>>> box = sketch.box(Point2D([2, 0]), 4, 4)\n>>> design = modeler.create_design(\"my-design\")\n>>> mycomp = design.add_component(\"my-comp\")\n>>> body = mycomp.extrude_sketch(\"my-sketch\", sketch, 1 * u.m)\n>>> body.plot()\n\nPlot the body and color each face individually:\n\n>>> body.plot(multi_colors=True)\n\n\n\nIBody.intersect(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nIntersect two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to intersect with.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the intersected body or not.\n\nRaises\n\nValueError\n\nIf the bodies do not intersect.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe intersected body is retained.\n\n\n\nIBody.subtract(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nSubtract two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to subtract from the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the subtracted body or not.\n\nRaises\n\nValueError\n\nIf the subtraction results in an empty (complete) subtraction.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe subtracted body is retained.\n\n\n\nIBody.unite(other: Body | collections.abc.Iterable[Body], keep_other: bool = False) -> None\n\nUnite two (or more) bodies.\n\nParameters\n\nother\n\nBody\n\nBody to unite with the self parameter.\n\nkeep_other\n\nbool, default: python:False\n\nWhether to retain the united body or not.\n\nNotes\n\nThe self parameter is directly modified with the result, and\nthe other parameter is consumed. Thus, it is important to make\ncopies if needed. If the keep_other parameter is set to True,\nthe united body is retained.\n\n\n\nIBody.combine_merge(other: Body | list[Body]) -> None\n\nCombine this body with another body or bodies, merging them into a single body.\n\nParameters\n\nother\n\nUnion[Body, python:list[Body]]\n\nThe body or list of bodies to combine with this body.\n\nNotes\n\nThe self parameter is directly modified, and the other bodies are consumed."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/index.html#the-materialpy-module","title":"The material.py module","text":"The material.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/index.html#summary","title":"The material.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterial\n\nProvides the data structure for a material.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/material/index.html#description","title":"The material.py module > Description","text":"Description\n\nProvides the data structure for material and material properties."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/index.html#the-designspy-module","title":"The designs.py module","text":"The designs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/index.html#summary","title":"The designs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDesignsServiceV0\n\nDesigns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/designs/index.html#description","title":"The designs.py module > Description","text":"Description\n\nModule containing the designs service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/CylinderEvaluation.html#cylinderevaluation","title":"CylinderEvaluation","text":"CylinderEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.cylinder.CylinderEvaluation(cylinder: Cylinder, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProvides evaluation of a cylinder at given parameters.\n\nParameters\n\ncylinder: ~ansys.geometry.core.shapes.surfaces.cylinder.Cylinder\n\nCylinder to evaluate.\n\nparameter: ParamUV\n\nParameters (u, v) to evaluate the cylinder at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/CylinderEvaluation.html#overview","title":"CylinderEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncylinder\n\nCylinder being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nSecond derivative with respect to the U and V parameters.\n\nvv_derivative\n\nSecond derivative with respect to the V parameter.\n\nmin_curvature\n\nMinimum curvature of the cylinder.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature of the cylinder.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/CylinderEvaluation.html#import-detail","title":"CylinderEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/CylinderEvaluation.html#property-detail","title":"CylinderEvaluation > Property detail","text":"Property detail\n\n\n\nproperty CylinderEvaluation.cylinder: Cylinder\n\nCylinder being evaluated.\n\n\n\nproperty CylinderEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter that the evaluation is based upon.\n\n\n\nproperty CylinderEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the cylinder at this evaluation.\n\n\n\nproperty CylinderEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the surface.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the cylinder at this evaluation.\n\n\n\nproperty CylinderEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the U parameter.\n\n\n\nproperty CylinderEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the V parameter.\n\n\n\nproperty CylinderEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U parameter.\n\n\n\nproperty CylinderEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U and V parameters.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U and v parameters.\n\n\n\nproperty CylinderEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the V parameter.\n\n\n\nproperty CylinderEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nMinimum curvature of the cylinder.\n\nReturns\n\nReal\n\nMinimum curvature of the cylinder.\n\n\n\nproperty CylinderEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMinimum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMminimum curvature direction.\n\n\n\nproperty CylinderEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nMaximum curvature of the cylinder.\n\nReturns\n\nReal\n\nMaximum curvature of the cylinder.\n\n\n\nproperty CylinderEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMaximum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/index.html#the-partspy-module","title":"The parts.py module","text":"The parts.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/index.html#summary","title":"The parts.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPartsService\n\nParts service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/index.html#description","title":"The parts.py module > Description","text":"Description\n\nModule containing the parts service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/index.html#the-planepy-module","title":"The plane.py module","text":"The plane.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/index.html#summary","title":"The plane.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPlaneSurface\n\nProvides 3D plane surface representation.\n\nPlaneEvaluation\n\nProvides evaluation of a plane at given parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/index.html#description","title":"The plane.py module > Description","text":"Description\n\nProvides for creating and managing a plane."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/GRPCPatternsServiceV1.html#grpcpatternsservicev1","title":"GRPCPatternsServiceV1","text":"GRPCPatternsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.patterns.GRPCPatternsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.patterns.GRPCPatternsService\n\nPatterns service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\npatterns service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/GRPCPatternsServiceV1.html#overview","title":"GRPCPatternsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_linear_pattern\n\nCreate a linear pattern of entities.\n\nmodify_linear_pattern\n\nModify a linear pattern of entities.\n\ncreate_circular_pattern\n\nCreate a circular pattern of entities.\n\nmodify_circular_pattern\n\nModify a circular pattern of entities.\n\ncreate_fill_pattern\n\nCreate a fill pattern of entities.\n\nupdate_fill_pattern\n\nUpdate a fill pattern of entities.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/GRPCPatternsServiceV1.html#import-detail","title":"GRPCPatternsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/GRPCPatternsServiceV1.html#attribute-detail","title":"GRPCPatternsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPatternsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/GRPCPatternsServiceV1.html#method-detail","title":"GRPCPatternsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPatternsServiceV1.create_linear_pattern(**kwargs) -> dict\n\nCreate a linear pattern of entities.\n\n\n\nabstractmethod GRPCPatternsServiceV1.modify_linear_pattern(**kwargs) -> dict\n\nModify a linear pattern of entities.\n\n\n\nabstractmethod GRPCPatternsServiceV1.create_circular_pattern(**kwargs) -> dict\n\nCreate a circular pattern of entities.\n\n\n\nabstractmethod GRPCPatternsServiceV1.modify_circular_pattern(**kwargs) -> dict\n\nModify a circular pattern of entities.\n\n\n\nabstractmethod GRPCPatternsServiceV1.create_fill_pattern(**kwargs) -> dict\n\nCreate a fill pattern of entities.\n\n\n\nabstractmethod GRPCPatternsServiceV1.update_fill_pattern(**kwargs) -> dict\n\nUpdate a fill pattern of entities."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamType.html#paramtype","title":"ParamType","text":"ParamType\n\n\n\nclass ansys.geometry.core.shapes.parameterization.ParamType(*args, **kwds)\n\nBases: enum.Enum\n\nParamType enum class that defines the type of a Parameterization."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamType.html#overview","title":"ParamType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nLINEAR\n\n\n\nCIRCULAR\n\n\n\nOTHER\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamType.html#import-detail","title":"ParamType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamType.html#attribute-detail","title":"ParamType > Attribute detail","text":"Attribute detail\n\n\n\nParamType.LINEAR = 1\n\n\n\n\n\nParamType.CIRCULAR = 2\n\n\n\n\n\nParamType.OTHER = 3\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/GRPCDesignsService.html#grpcdesignsservice","title":"GRPCDesignsService","text":"GRPCDesignsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.designs.GRPCDesignsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nDesigns service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/GRPCDesignsService.html#overview","title":"GRPCDesignsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nopen\n\nOpen a design on the service.\n\nnew\n\nCreate a new design.\n\nget_assembly\n\nCreate a new design.\n\nclose\n\nClose the currently open design.\n\nput_active\n\nActivate an already opened design on the service.\n\nsave_as\n\nCreate a new design.\n\ndownload_export\n\nDownload and export a design into a certain format.\n\nstream_download_export\n\nDownload and export a design into a certain format.\n\ninsert\n\nInsert a part/component/design into an existing design.\n\nget_active\n\nGet the active design on the service.\n\nupload_file\n\nUpload a file to the server.\n\nupload_file_stream\n\nUpload a file to the server using streaming.\n\nstream_design_tessellation\n\nStream the tessellation of a design.\n\ndownload_file\n\nDownload the design from the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/GRPCDesignsService.html#import-detail","title":"GRPCDesignsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/designs/GRPCDesignsService.html#method-detail","title":"GRPCDesignsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDesignsService.open(**kwargs) -> dict\n\nOpen a design on the service.\n\n\n\nabstractmethod GRPCDesignsService.new(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsService.get_assembly(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsService.close(**kwargs) -> dict\n\nClose the currently open design.\n\n\n\nabstractmethod GRPCDesignsService.put_active(**kwargs) -> dict\n\nActivate an already opened design on the service.\n\n\n\nabstractmethod GRPCDesignsService.save_as(**kwargs) -> dict\n\nCreate a new design.\n\n\n\nabstractmethod GRPCDesignsService.download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nabstractmethod GRPCDesignsService.stream_download_export(**kwargs) -> dict\n\nDownload and export a design into a certain format.\n\n\n\nabstractmethod GRPCDesignsService.insert(**kwargs) -> dict\n\nInsert a part/component/design into an existing design.\n\n\n\nabstractmethod GRPCDesignsService.get_active(**kwargs) -> dict\n\nGet the active design on the service.\n\n\n\nabstractmethod GRPCDesignsService.upload_file(**kwargs) -> dict\n\nUpload a file to the server.\n\n\n\nabstractmethod GRPCDesignsService.upload_file_stream(**kwargs) -> dict\n\nUpload a file to the server using streaming.\n\n\n\nabstractmethod GRPCDesignsService.stream_design_tessellation(**kwargs) -> dict\n\nStream the tessellation of a design.\n\n\n\nabstractmethod GRPCDesignsService.download_file(**kwargs) -> dict\n\nDownload the design from the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/GRPCComponentsServiceV0.html#grpccomponentsservicev0","title":"GRPCComponentsServiceV0","text":"GRPCComponentsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.components.GRPCComponentsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.components.GRPCComponentsService\n\nComponents service for gRPC communication with the Geometry server.\n\nThis class provides methods to call components in the\nGeometry server using gRPC. It is specifically designed for the v0\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/GRPCComponentsServiceV0.html#overview","title":"GRPCComponentsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate\n\nCreate a component.\n\nset_name\n\nSet the name of a component.\n\nset_placement\n\nSet the placement of a component.\n\nset_shared_topology\n\nSet the shared topology of a component.\n\ndelete\n\nDelete a component.\n\nimport_groups\n\nImport groups from a component.\n\nmake_independent\n\nMake a component independent.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/GRPCComponentsServiceV0.html#import-detail","title":"GRPCComponentsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/GRPCComponentsServiceV0.html#attribute-detail","title":"GRPCComponentsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCComponentsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/components/GRPCComponentsServiceV0.html#method-detail","title":"GRPCComponentsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCComponentsServiceV0.create(**kwargs) -> dict\n\nCreate a component.\n\n\n\nGRPCComponentsServiceV0.set_name(**kwargs) -> dict\n\nSet the name of a component.\n\n\n\nGRPCComponentsServiceV0.set_placement(**kwargs) -> dict\n\nSet the placement of a component.\n\n\n\nGRPCComponentsServiceV0.set_shared_topology(**kwargs) -> dict\n\nSet the shared topology of a component.\n\n\n\nGRPCComponentsServiceV0.delete(**kwargs) -> dict\n\nDelete a component.\n\n\n\nGRPCComponentsServiceV0.import_groups(**kwargs) -> dict\n\nImport groups from a component.\n\n\n\nGRPCComponentsServiceV0.make_independent(**kwargs) -> dict\n\nMake a component independent."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/index.html#the-driving_dimensionspy-module","title":"The driving_dimensions.py module","text":"The driving_dimensions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/index.html#summary","title":"The driving_dimensions.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDrivingDimensionsServiceV0\n\nDriving Dimension service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/driving_dimensions/index.html#description","title":"The driving_dimensions.py module > Description","text":"Description\n\nModule containing the Driving Dimension service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/GRPCBeamsService.html#grpcbeamsservice","title":"GRPCBeamsService","text":"GRPCBeamsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.beams.GRPCBeamsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nBeams service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/GRPCBeamsService.html#overview","title":"GRPCBeamsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_beam_segments\n\nCreate beam segments.\n\ncreate_descriptive_beam_segments\n\nCreate descriptive beam segments.\n\ndelete_beam\n\nDelete a beam.\n\ndelete_beam_profile\n\nRemove a beam profile on the active geometry server instance.\n\ncreate_beam_circular_profile\n\nAdd a new beam circular profile under the design for creating beams."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/GRPCBeamsService.html#import-detail","title":"GRPCBeamsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/beams/GRPCBeamsService.html#method-detail","title":"GRPCBeamsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCBeamsService.create_beam_segments(**kwargs) -> dict\n\nCreate beam segments.\n\n\n\nabstractmethod GRPCBeamsService.create_descriptive_beam_segments(**kwargs) -> dict\n\nCreate descriptive beam segments.\n\n\n\nabstractmethod GRPCBeamsService.delete_beam(**kwargs) -> dict\n\nDelete a beam.\n\n\n\nabstractmethod GRPCBeamsService.delete_beam_profile(**kwargs) -> dict\n\nRemove a beam profile on the active geometry server instance.\n\n\n\nabstractmethod GRPCBeamsService.create_beam_circular_profile(**kwargs) -> dict\n\nAdd a new beam circular profile under the design for creating beams."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/GRPCDbuApplicationServiceV0.html#grpcdbuapplicationservicev0","title":"GRPCDbuApplicationServiceV0","text":"GRPCDbuApplicationServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.dbuapplication.GRPCDbuApplicationServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.dbuapplication.GRPCDbuApplicationService\n\nDBU Application service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nDBU Application service. It is specifically designed for the v0 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/GRPCDbuApplicationServiceV0.html#overview","title":"GRPCDbuApplicationServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nrun_script\n\nRun a Scripting API script.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/GRPCDbuApplicationServiceV0.html#import-detail","title":"GRPCDbuApplicationServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/GRPCDbuApplicationServiceV0.html#attribute-detail","title":"GRPCDbuApplicationServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCDbuApplicationServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/dbuapplication/GRPCDbuApplicationServiceV0.html#method-detail","title":"GRPCDbuApplicationServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCDbuApplicationServiceV0.run_script(**kwargs) -> dict\n\nRun a Scripting API script."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/CollisionType.html#collisiontype","title":"CollisionType","text":"CollisionType\n\n\n\nclass ansys.geometry.core.designer.body.CollisionType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for collision types between bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/CollisionType.html#overview","title":"CollisionType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\n\n\nTOUCH\n\n\n\nINTERSECT\n\n\n\nCONTAINED\n\n\n\nCONTAINEDTOUCH\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/CollisionType.html#import-detail","title":"CollisionType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/CollisionType.html#attribute-detail","title":"CollisionType > Attribute detail","text":"Attribute detail\n\n\n\nCollisionType.NONE = 0\n\n\n\n\n\nCollisionType.TOUCH = 1\n\n\n\n\n\nCollisionType.INTERSECT = 2\n\n\n\n\n\nCollisionType.CONTAINED = 3\n\n\n\n\n\nCollisionType.CONTAINEDTOUCH = 4\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#the-loggerpy-module","title":"The logger.py module","text":"The logger.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#summary","title":"The logger.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPyGeometryCustomAdapter\n\nKeeps the reference to the Geometry service instance name dynamic.\n\nPyGeometryPercentStyle\n\nProvides a common messaging style.\n\nPyGeometryFormatter\n\nProvides a Formatter class for overwriting default format styles.\n\nInstanceFilter\n\nEnsures that the instance_name record always exists.\n\nLogger\n\nProvides the logger used for each PyAnsys Geometry session.\n\nFunctions\n\n\n\n\n\naddfile_handler\n\nAdd a file handler to the input.\n\nadd_stdout_handler\n\nAdd a standout handler to the logger.\n\nAttributes\n\n\n\n\n\nstring_to_loglevel\n\n\n\nConstants\n\n\n\n\n\nLOG_LEVEL\n\n\n\nFILE_NAME\n\n\n\nDEBUG\n\n\n\nINFO\n\n\n\nWARN\n\n\n\nERROR\n\n\n\nCRITICAL\n\n\n\nSTDOUT_MSG_FORMAT\n\n\n\nFILE_MSG_FORMAT\n\n\n\nDEFAULT_STDOUT_HEADER\n\n\n\nDEFAULT_FILE_HEADER\n\n\n\nNEW_SESSION_HEADER\n\n\n\nLOG\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#description","title":"The logger.py module > Description","text":"Description\n\nProvides a general framework for logging in PyAnsys Geometry.\n\nThis module is built on the Logging facility for\nPython.\nIt is not intended to replace the standard Python logging library but rather provide\na way to interact between its logging class and PyAnsys Geometry.\n\nThe loggers used in this module include the name of the instance, which\nis intended to be unique. This name is printed in all active\noutputs and is used to track the different Geometry service instances."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#logger-usage","title":"The logger.py module > Logger usage","text":"Logger usage"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#global-logger","title":"The logger.py module > Global logger","text":"Global logger\n\nThere is a global logger named PyAnsys_Geometry_global that is created when\nansys.geometry.core.__init__ is called.  If you want to use this global\nlogger, you must call it at the top of your module:\n\nYou can rename this logger to avoid conflicts with other loggers (if any):\n\nThe default logging level of LOG is ERROR.\nYou can change this level and output lower-level messages with\nthis code:\n\nAlternatively, you can ensure that all the handlers are set to the input log\nlevel with this code:\n\nThis logger does not log to a file by default. If you want, you can\nadd a file handler with this code:\n\nThis also sets the logger to be redirected to this file. If you want\nto change the characteristics of this global logger from the beginning\nof the execution, you must edit the __init__ file in the directory\nansys.geometry.core.\n\nTo log using this logger, call the desired method as a normal logger with:"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#instance-logger","title":"The logger.py module > Instance logger","text":"Instance logger\n\nEvery time an instance of the Modeler\nclass is created, a logger is created and stored in LOG._instances. This field is a\ndictionary where the key is the name of the created logger.\n\nThese instance loggers inherit the PyAnsys_Geometry_global output handlers and\nlogging level unless otherwise specified. The way this logger works is very\nsimilar to the global logger. If you want to add a file handler, you can use\nthe log_to_file() method. If you want\nto change the log level, you can use the setLevel() method.\n\nHere is an example of how you can use this logger:"},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#other-loggers","title":"The logger.py module > Other loggers","text":"Other loggers\n\nYou can create your own loggers using a Python logging library as\nyou would do in any other script. There would be no conflicts between\nthese loggers."},{"objectID":"Home","href":"api/ansys/geometry/core/logger/index.html#module-detail","title":"The logger.py module > Module detail","text":"Module detail\n\n\n\nlogger.addfile_handler(logger, filename=FILE_NAME, level=LOG_LEVEL, write_headers=False)\n\nAdd a file handler to the input.\n\nParameters\n\nlogger\n\nlogging.Logger\n\nLogger to add the file handler to.\n\nfilename\n\npython:str, default: “pyansys-geometry.log”\n\nName of the output file.\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\nwrite_headers\n\nbool, default: python:False\n\nWhether to write the headers to the file.\n\nReturns\n\nLogger\n\nLogger or logging.Logger object.\n\n\n\nlogger.add_stdout_handler(logger, level=LOG_LEVEL, write_headers=False)\n\nAdd a standout handler to the logger.\n\nParameters\n\nlogger\n\nlogging.Logger\n\nLogger to add the file handler to.\n\nlevel\n\npython:int, default: 10\n\nLevel of logging. The default is 10, in which case the\nlogging.DEBUG level is used.\n\nwrite_headers\n\nbool, default: python:False\n\nWhether to write headers to the file.\n\nReturns\n\nLogger\n\nLogger or logging.Logger object.\n\n\n\nlogger.LOG_LEVEL = 10\n\n\n\n\n\nlogger.FILE_NAME = 'pyansys-geometry.log'\n\n\n\n\n\nlogger.DEBUG = 10\n\n\n\n\n\nlogger.INFO = 20\n\n\n\n\n\nlogger.WARN = 30\n\n\n\n\n\nlogger.ERROR = 40\n\n\n\n\n\nlogger.CRITICAL = 50\n\n\n\n\n\nlogger.STDOUT_MSG_FORMAT = '%(levelname)s - %(instance_name)s -  %(module)s - %(funcName)s - %(message)s'\n\n\n\n\n\nlogger.FILE_MSG_FORMAT = '%(levelname)s - %(instance_name)s -  %(module)s - %(funcName)s - %(message)s'\n\n\n\n\n\nlogger.DEFAULT_STDOUT_HEADER = Multiline-String\n\n\n\n\n\nlogger.DEFAULT_FILE_HEADER = Multiline-String\n\n\n\n\n\nlogger.NEW_SESSION_HEADER = Multiline-String\n\n\n\n\n\nlogger.LOG\n\n\n\n\n\nlogger.string_to_loglevel\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/Edge.html#edge","title":"Edge","text":"Edge\n\n\n\nclass ansys.geometry.core.designer.edge.Edge(id: str, curve_type: CurveType, body: ansys.geometry.core.designer.body.Body, grpc_client: ansys.geometry.core.connection.client.GrpcClient, is_reversed: bool = False)\n\nRepresents a single edge of a body within the design assembly.\n\nThis class synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the body.\n\ncurve_type\n\nCurveType\n\nType of curve that the edge forms.\n\nbody\n\nBody\n\nParent body that the edge constructs.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling.\n\nis_reversed\n\nbool\n\nDirection of the edge."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/Edge.html#overview","title":"Edge > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the edge.\n\nbody\n\nBody of the edge.\n\nis_reversed\n\nFlag indicating if the edge is reversed.\n\nshape\n\nUnderlying trimmed curve of the edge.\n\nlength\n\nCalculated length of the edge.\n\ncurve_type\n\nCurve type of the edge.\n\nfaces\n\nFaces that contain the edge.\n\nvertices\n\nVertices that define the edge.\n\nstart\n\nStart point of the edge.\n\nend\n\nEnd point of the edge.\n\nbounding_box\n\nBounding box of the edge."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/Edge.html#import-detail","title":"Edge > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/Edge.html#property-detail","title":"Edge > Property detail","text":"Property detail\n\n\n\nproperty Edge.id: str\n\nID of the edge.\n\n\n\nproperty Edge.body: ansys.geometry.core.designer.body.Body\n\nBody of the edge.\n\n\n\nproperty Edge.is_reversed: bool\n\nFlag indicating if the edge is reversed.\n\n\n\nproperty Edge.shape: ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve\n\nUnderlying trimmed curve of the edge.\n\nIf the edge is reversed, its shape is the ReversedTrimmedCurve type, which swaps the\nstart and end points of the curve and handles parameters to allow evaluation as if the\ncurve is not reversed.\n\nThis method is only available starting on Ansys release 24R2.\n\n\n\nproperty Edge.length: pint.Quantity\n\nCalculated length of the edge.\n\n\n\nproperty Edge.curve_type: CurveType\n\nCurve type of the edge.\n\n\n\nproperty Edge.faces: list[ansys.geometry.core.designer.face.Face]\n\nFaces that contain the edge.\n\n\n\nproperty Edge.vertices: list[ansys.geometry.core.designer.vertex.Vertex]\n\nVertices that define the edge.\n\n\n\nproperty Edge.start: ansys.geometry.core.math.point.Point3D\n\nStart point of the edge.\n\n\n\nproperty Edge.end: ansys.geometry.core.math.point.Point3D\n\nEnd point of the edge.\n\n\n\nproperty Edge.bounding_box: ansys.geometry.core.math.bbox.BoundingBox\n\nBounding box of the edge.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/index.html#the-componentspy-module","title":"The components.py module","text":"The components.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/index.html#summary","title":"The components.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCComponentsService\n\nComponents service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/components/index.html#description","title":"The components.py module > Description","text":"Description\n\nModule containing the components service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/index.html#the-problem_areaspy-module","title":"The problem_areas.py module","text":"The problem_areas.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/index.html#summary","title":"The problem_areas.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nProblemArea\n\nRepresents problem areas.\n\nDuplicateFaceProblemAreas\n\nProvides duplicate face problem area definition.\n\nMissingFaceProblemAreas\n\nProvides missing face problem area definition.\n\nInexactEdgeProblemAreas\n\nRepresents an inexact edge problem area with unique identifier and associated edges.\n\nExtraEdgeProblemAreas\n\nRepresents a extra edge problem area with unique identifier and associated edges.\n\nShortEdgeProblemAreas\n\nRepresents a short edge problem area with a unique identifier and associated edges.\n\nSmallFaceProblemAreas\n\nRepresents a small face problem area with a unique identifier and associated faces.\n\nSplitEdgeProblemAreas\n\nRepresents a split edge problem area with unique identifier and associated edges.\n\nStitchFaceProblemAreas\n\nRepresents a stitch face problem area with unique identifier and associated faces.\n\nUnsimplifiedFaceProblemAreas\n\nRepresents a unsimplified face problem area with unique identifier and associated faces.\n\nInterferenceProblemAreas\n\nRepresents an interference problem area with a unique identifier and associated bodies.\n\nLogoProblemArea\n\nRepresents a logo problem area defined by a list of faces.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/index.html#description","title":"The problem_areas.py module > Description","text":"Description\n\nThe problem area definition."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/GRPCAssemblyControlsServiceV1.html#grpcassemblycontrolsservicev1","title":"GRPCAssemblyControlsServiceV1","text":"GRPCAssemblyControlsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.assembly_controls.GRPCAssemblyControlsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.assembly_controls.GRPCAssemblyControlsService\n\nAssembly controls service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nassembly controls service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/GRPCAssemblyControlsServiceV1.html#overview","title":"GRPCAssemblyControlsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_align_condition\n\nCreate an align condition between two geometry objects.\n\ncreate_tangent_condition\n\nCreate a tangent condition between two geometry objects.\n\ncreate_orient_condition\n\nCreate an orient condition between two geometry objects.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/GRPCAssemblyControlsServiceV1.html#import-detail","title":"GRPCAssemblyControlsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/GRPCAssemblyControlsServiceV1.html#attribute-detail","title":"GRPCAssemblyControlsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCAssemblyControlsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/GRPCAssemblyControlsServiceV1.html#method-detail","title":"GRPCAssemblyControlsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCAssemblyControlsServiceV1.create_align_condition(**kwargs) -> dict\n\nCreate an align condition between two geometry objects.\n\n\n\nabstractmethod GRPCAssemblyControlsServiceV1.create_tangent_condition(**kwargs) -> dict\n\nCreate a tangent condition between two geometry objects.\n\n\n\nabstractmethod GRPCAssemblyControlsServiceV1.create_orient_condition(**kwargs) -> dict\n\nCreate an orient condition between two geometry objects."},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#modeling-rectangular-plate-with-multiple-bodies","title":"Examples > Modeling: Rectangular plate with multiple bodies","text":"Modeling: Rectangular plate with multiple bodies\n\nYou can create multiple bodies from a single sketch by extruding the same sketch in different planes.\n\nThe sketch is designed as an effective functional-style API with all operations receiving 2D configurations. For more information, see the Sketch user guide.\n\nIn this example, a box is located in the center of the plate, with the default origin of a sketch plane (origin at (0, 0, 0)). Four holes of equal radius are sketched at the corners of the plate. The plate is then extruded, leading to the generation of the requested body. The projection is at the center of the face. The default projection depth is through the entire part."},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#perform-required-imports","title":"Examples > Modeling: Rectangular plate with multiple bodies > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#define-sketch-profile","title":"Examples > Modeling: Rectangular plate with multiple bodies > Define sketch profile","text":"Define sketch profile\n\nThe sketch profile for the proposed design requires four segments that constitute the outer limits of the design, a box on the center, and a circle at its four corners.\n\nYou can use a single sketch instance for multiple design operations, including extruding a body, projecting a profile, and imprinting curves.\n\nDefine the sketch profle for the rectangular plate with multiple bodies.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#extrude-sketch-to-create-design","title":"Examples > Modeling: Rectangular plate with multiple bodies > Extrude sketch to create design","text":"Extrude sketch to create design\n\nEstablish a server connection and use the single sketch profile to extrude the base component at the Z axis. Create a named selection from the resulting list of bodies. In only three server calls, the design extrudes the four segments with the desired thickness.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#add-component-with-a-planar-surface","title":"Examples > Modeling: Rectangular plate with multiple bodies > Add component with a planar surface","text":"Add component with a planar surface\n\nAfter creating a plate as a base component, you might want to add a component with a planar surface to it.\n\nCreate a sketch instance and then create a surface in the design with this sketch. For the sketch, it creates an ellipse, keeping the origin of the plane as its center.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#extrude-from-face-to-create-body","title":"Examples > Modeling: Rectangular plate with multiple bodies > Extrude from face to create body","text":"Extrude from face to create body\n\nExtrude a face profile by a given distance to create a solid body. There are no modifications against the body containing the source face.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#translate-body-within-plane","title":"Examples > Modeling: Rectangular plate with multiple bodies > Translate body within plane","text":"Translate body within plane\n\nUse the :func:translate() <ansys.geometry.core.designer.body.Body.translate> method to move the body in a specified direction by a given distance. You can also move a sketch around the global coordinate system. For more information, see the Dynamic Sketch Plane example.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/plate_with_hole.html#close-the-modeler","title":"Examples > Modeling: Rectangular plate with multiple bodies > Close the modeler","text":"Close the modeler\n\nClose the modeler to free up resources and release the connection.\n\n\n\n"},{"objectID":"Home","href":"getting_started/existing/index.html#use-an-existing-session","title":"Use an existing session","text":"Use an existing session\n\nIf a session of Discovery, SpaceClaim, or the Geometry service is already\nrunning, PyAnsys Geometry can be used to connect to it.\n\nRunning a SpaceClaim or Discovery normal session does not suffice to be\nable to use it with PyAnsys Geometry. Both products need the ApiServer extension to be\nrunning. In this case, to ease the process, you should launch the products directly from the PyAnsys\nGeometry library as shown in ref_creating_local_session."},{"objectID":"Home","href":"getting_started/existing/index.html#establish-the-connection","title":"Use an existing session > Establish the connection","text":"Establish the connection\n\nFrom Python, establish a connection to the existing client session by creating a Modeler object:\n\nIf no error messages are received, your connection is established successfully.\nNote that your local port number might differ from the one shown in the preceding code."},{"objectID":"Home","href":"getting_started/existing/index.html#verify-the-connection","title":"Use an existing session > Verify the connection","text":"Verify the connection\n\nIf you want to verify that the connection is successful, request the status of the client\nconnection inside your Modeler object:\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/GeometryPlotter.html#geometryplotter","title":"GeometryPlotter","text":"GeometryPlotter\n\n\n\nclass ansys.geometry.core.plotting.plotter.GeometryPlotter(use_trame: bool | None = None, use_service_colors: bool | None = None, allow_picking: bool = False, show_plane: bool = True)\n\nBases: ansys.tools.visualization_interface.Plotter\n\nPlotter for PyAnsys Geometry objects.\n\nThis class is an implementation of the PlotterInterface class.\n\nParameters\n\nuse_trame\n\nbool, optional\n\nWhether to use trame visualizer or not, by default None.\n\nuse_service_colors\n\nbool, optional\n\nWhether to use service colors or not, by default None.\n\nallow_picking\n\nbool, optional\n\nWhether to allow picking or not, by default False.\n\nshow_plane\n\nbool, optional\n\nWhether to show the plane in the scene, by default True."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/GeometryPlotter.html#overview","title":"GeometryPlotter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_frame\n\nPlot a frame in the scene.\n\nadd_plane\n\nPlot a plane in the scene.\n\nadd_sketch\n\nPlot a sketch in the scene.\n\nadd_body_edges\n\nAdd the outer edges of a body to the plot.\n\nadd_body\n\nAdd a body to the scene.\n\nadd_face\n\nAdd a face to the scene.\n\nadd_component\n\nAdd a component to the scene.\n\nadd_component_by_body\n\nAdd a component on a per body basis.\n\nadd_sketch_polydata\n\nAdd sketches to the scene from PyVista polydata.\n\nadd_design_point\n\nAdd a DesignPoint object to the plotter.\n\nplot_iter\n\nAdd a list of any type of object to the scene.\n\nplot\n\nAdd a custom mesh to the plotter.\n\nshow\n\nShow the plotter.\n\nexport_glb\n\nExport the design to a glb file. Does not support picked objects.\n\nProperties\n\n\n\n\n\nuse_service_colors\n\nIndicates whether to use service colors for plotting purposes."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/GeometryPlotter.html#import-detail","title":"GeometryPlotter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/GeometryPlotter.html#property-detail","title":"GeometryPlotter > Property detail","text":"Property detail\n\n\n\nproperty GeometryPlotter.use_service_colors: bool\n\nIndicates whether to use service colors for plotting purposes."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/GeometryPlotter.html#method-detail","title":"GeometryPlotter > Method detail","text":"Method detail\n\n\n\nGeometryPlotter.add_frame(frame: ansys.geometry.core.math.frame.Frame, plotting_options: dict | None = None) -> None\n\nPlot a frame in the scene.\n\nParameters\n\nframe\n\nFrame\n\nFrame to render in the scene.\n\nplotting_options\n\npython:dict, default: python:None\n\ndictionary containing parameters accepted by the\npyvista.create_axes_marker() class for customizing\nthe frame rendering in the scene.\n\n\n\nGeometryPlotter.add_plane(plane: ansys.geometry.core.math.plane.Plane, plane_options: dict | None = None, plotting_options: dict | None = None) -> None\n\nPlot a plane in the scene.\n\nParameters\n\nplane\n\nPlane\n\nPlane to render in the scene.\n\nplane_options\n\npython:dict, default: python:None\n\ndictionary containing parameters accepted by the\npyvista.Plane function for customizing the mesh\nrepresenting the plane.\n\nplotting_options\n\npython:dict, default: python:None\n\ndictionary containing parameters accepted by the\nPlotter.add_mesh method for\ncustomizing the mesh rendering of the plane.\n\n\n\nGeometryPlotter.add_sketch(sketch: ansys.geometry.core.sketch.sketch.Sketch, show_plane: bool = False, show_frame: bool = False, **plotting_options: dict | None) -> None\n\nPlot a sketch in the scene.\n\nParameters\n\nsketch\n\nSketch\n\nSketch to render in the scene.\n\nshow_plane\n\nbool, default: python:False\n\nWhether to render the sketch plane in the scene.\n\nshow_frame\n\nbool, default: python:False\n\nWhether to show the frame in the scene.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.add_body_edges(body_plot: ansys.tools.visualization_interface.MeshObjectPlot, **plotting_options: dict | None) -> None\n\nAdd the outer edges of a body to the plot.\n\nThis method has the side effect of adding the edges to the GeomObject that\nyou pass through the parameters.\n\nParameters\n\nbody_plot\n\nMeshObjectPlot\n\nBody of which to add the edges.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.add_body(body: ansys.geometry.core.designer.body.Body, merge: bool = False, **plotting_options: dict | None) -> None\n\nAdd a body to the scene.\n\nParameters\n\nbody\n\nBody\n\nBody to add.\n\nmerge\n\nbool, default: python:False\n\nWhether to merge the body into a single mesh. When True, the\nindividual faces of the tessellation are merged. This\npreserves the number of triangles and only merges the topology.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments,\nsee the Plotter.add_mesh method.\n\n\n\nGeometryPlotter.add_face(face: ansys.geometry.core.designer.face.Face, **plotting_options: dict | None) -> None\n\nAdd a face to the scene.\n\nParameters\n\nface\n\nFace\n\nFace to add.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.add_component(component: ansys.geometry.core.designer.component.Component, merge_component: bool = False, merge_bodies: bool = False, **plotting_options) -> None\n\nAdd a component to the scene.\n\nParameters\n\ncomponent\n\nComponent\n\nComponent to add.\n\nmerge_component\n\nbool, default: python:False\n\nWhether to merge the component into a single dataset. When\nTrue, all the individual bodies are effectively combined\ninto a single dataset without any hierarchy.\n\nmerge_bodies\n\nbool, default: python:False\n\nWhether to merge each body into a single dataset. When True,\nall the faces of each individual body are effectively combined\ninto a single dataset without separating faces.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.add_component_by_body(component: ansys.geometry.core.designer.component.Component, merge_bodies: bool, **plotting_options: dict | None) -> None\n\nAdd a component on a per body basis.\n\nParameters\n\ncomponent\n\nComponent\n\nComponent to add.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\nNotes\n\nThis will allow to make use of the service colors. At the same time, it will be\nslower than the add_component method.\n\n\n\nGeometryPlotter.add_sketch_polydata(polydata_entries: list[pyvista.PolyData], sketch: ansys.geometry.core.sketch.sketch.Sketch = None, **plotting_options) -> None\n\nAdd sketches to the scene from PyVista polydata.\n\nParameters\n\npolydata_entries\n\npython:list[pyvista.PolyData]\n\nPolydata to add.\n\nsketch\n\nSketch, default: python:None\n\nSketch to add.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.add_design_point(design_point: ansys.geometry.core.designer.designpoint.DesignPoint, **plotting_options) -> None\n\nAdd a DesignPoint object to the plotter.\n\nParameters\n\ndesign_point\n\nDesignPoint\n\nDesignPoint to add.\n\n\n\nGeometryPlotter.plot_iter(plotting_list: list[Any], name_filter: str = None, **plotting_options) -> None\n\nAdd a list of any type of object to the scene.\n\nThese types of objects are supported: Body, Component, list[pv.PolyData],\npv.MultiBlock, and Sketch.\n\nParameters\n\nplotting_list\n\npython:list[Any]\n\nlist of objects you want to plot.\n\nname_filter\n\npython:str, default: python:None\n\nRegular expression with the desired name or names you want to include in the plotter.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\n\n\n\nGeometryPlotter.plot(plottable_object: Any, name_filter: str = None, **plotting_options) -> None\n\nAdd a custom mesh to the plotter.\n\nParameters\n\nplottable_object\n\npython:str, default: python:None\n\nRegular expression with the desired name or names you want to include in the plotter.\n\nname_filter: str, default: None\n\nRegular expression with the desired name or names you want to include in the plotter.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, depend of the backend implementation\nyou are using.\n\n\n\nGeometryPlotter.show(plotting_object: Any = None, screenshot: str | None = None, **plotting_options) -> None | list[Any]\n\nShow the plotter.\n\nParameters\n\nplotting_object\n\nAny, default: python:None\n\nObject you can add to the plotter.\n\nscreenshot\n\npython:str, default: python:None\n\nPath to save a screenshot of the plotter.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for the plotter. Arguments depend of the backend implementation\nyou are using.\n\n\n\nGeometryPlotter.export_glb(plotting_object: Any = None, filename: str | pathlib.Path | None = None, **plotting_options) -> pathlib.Path\n\nExport the design to a glb file. Does not support picked objects.\n\nParameters\n\nplotting_object\n\nAny, default: python:None\n\nObject you can add to the plotter.\n\nfilename\n\npython:str | Path, default: python:None\n\nPath to save a GLB file of the plotter. If None, the file will be saved as\ntemp_glb.glb.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments for the plotter. Arguments depend of the backend implementation\nyou are using.\n\nReturns\n\nPath\n\nPath to the exported glb file."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/BoxUV.html#boxuv","title":"BoxUV","text":"BoxUV\n\n\n\nclass ansys.geometry.core.shapes.box_uv.BoxUV(range_u: ansys.geometry.core.shapes.parameterization.Interval = None, range_v: ansys.geometry.core.shapes.parameterization.Interval = None)\n\nProvides the implementation for BoxUV class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/BoxUV.html#overview","title":"BoxUV > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nis_empty\n\nCheck if this BoxUV is empty.\n\nproportion\n\nEvaluate the BoxUV at the given proportions.\n\nget_center\n\nEvaluate the this BoxUV in the center.\n\nis_negative\n\nCheck whether the BoxUV is negative.\n\ncontains\n\nCheck whether the BoxUV contains a given u and v pair parameter.\n\ninflate\n\nEnlarge the BoxUV u and v intervals by deltas.\n\nget_corner\n\nGet the corner location of the BoxUV.\n\nProperties\n\n\n\n\n\ninterval_u\n\nu interval.\n\ninterval_v\n\nv interval.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nCheck whether two BoxUV instances are equal.\n\n__ne__\n\nCheck whether two BoxUV instances are not equal."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/BoxUV.html#import-detail","title":"BoxUV > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/BoxUV.html#property-detail","title":"BoxUV > Property detail","text":"Property detail\n\n\n\nproperty BoxUV.interval_u: ansys.geometry.core.shapes.parameterization.Interval\n\nu interval.\n\n\n\nproperty BoxUV.interval_v: ansys.geometry.core.shapes.parameterization.Interval\n\nv interval."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/BoxUV.html#method-detail","title":"BoxUV > Method detail","text":"Method detail\n\n\n\nBoxUV.__eq__(other: object) -> bool\n\nCheck whether two BoxUV instances are equal.\n\n\n\nBoxUV.__ne__(other: object) -> bool\n\nCheck whether two BoxUV instances are not equal.\n\n\n\nBoxUV.is_empty()\n\nCheck if this BoxUV is empty.\n\n\n\nBoxUV.proportion(prop_u: ansys.geometry.core.typing.Real, prop_v: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.parameterization.ParamUV\n\nEvaluate the BoxUV at the given proportions.\n\n\n\nBoxUV.get_center() -> ansys.geometry.core.shapes.parameterization.ParamUV\n\nEvaluate the this BoxUV in the center.\n\n\n\nBoxUV.is_negative(tolerance_u: ansys.geometry.core.typing.Real, tolerance_v: ansys.geometry.core.typing.Real) -> bool\n\nCheck whether the BoxUV is negative.\n\n\n\nBoxUV.contains(param: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck whether the BoxUV contains a given u and v pair parameter.\n\n\n\nBoxUV.inflate(delta_u: ansys.geometry.core.typing.Real, delta_v: ansys.geometry.core.typing.Real) -> BoxUV\n\nEnlarge the BoxUV u and v intervals by deltas.\n\n\n\nBoxUV.get_corner(location: LocationUV) -> ansys.geometry.core.shapes.parameterization.ParamUV\n\nGet the corner location of the BoxUV."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/GRPCMeasurementToolsServiceV1.html#grpcmeasurementtoolsservicev1","title":"GRPCMeasurementToolsServiceV1","text":"GRPCMeasurementToolsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.measurement_tools.GRPCMeasurementToolsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.measurement_tools.GRPCMeasurementToolsService\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmeasurement tools service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/GRPCMeasurementToolsServiceV1.html#overview","title":"GRPCMeasurementToolsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nmin_distance_between_objects\n\nCalculate the minimum distance between two objects.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/GRPCMeasurementToolsServiceV1.html#import-detail","title":"GRPCMeasurementToolsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/GRPCMeasurementToolsServiceV1.html#attribute-detail","title":"GRPCMeasurementToolsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCMeasurementToolsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/measurement_tools/GRPCMeasurementToolsServiceV1.html#method-detail","title":"GRPCMeasurementToolsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCMeasurementToolsServiceV1.min_distance_between_objects(**kwargs) -> dict\n\nCalculate the minimum distance between two objects."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProperties.html#beamproperties","title":"BeamProperties","text":"BeamProperties\n\n\n\nclass ansys.geometry.core.designer.beam.BeamProperties(area: float, centroid: ansys.geometry.core.shapes.parameterization.ParamUV, warping_constant: float, ixx: float, ixy: float, iyy: float, shear_center: ansys.geometry.core.shapes.parameterization.ParamUV, torsion_constant: float)\n\nRepresents the properties of a beam.\n\nParameters\n\narea\n\npython:float\n\nThe cross-sectional area of the beam.\n\ncentroid\n\nParamUV\n\nThe centroid of the beam section.\n\nwarping_constant\n\npython:float\n\nThe warping constant of the beam.\n\nixx\n\npython:float\n\nThe moment of inertia about the x-axis.\n\nixy\n\npython:float\n\nThe product of inertia.\n\niyy\n\npython:float\n\nThe moment of inertia about the y-axis.\n\nshear_center\n\nParamUV\n\nThe shear center of the beam.\n\ntorsion_constant\n\npython:float\n\nThe torsion constant of the beam."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProperties.html#overview","title":"BeamProperties > Overview","text":"Overview\n\nProperties\n\n\n\n\n\narea\n\nThe cross-sectional area of the beam.\n\ncentroid\n\nThe centroid of the beam section.\n\nwarping_constant\n\nThe warping constant of the beam.\n\nixx\n\nThe moment of inertia about the x-axis.\n\nixy\n\nThe product of inertia.\n\niyy\n\nThe moment of inertia about the y-axis.\n\nshear_center\n\nThe shear center of the beam.\n\ntorsion_constant\n\nThe torsion constant of the beam."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProperties.html#import-detail","title":"BeamProperties > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProperties.html#property-detail","title":"BeamProperties > Property detail","text":"Property detail\n\n\n\nproperty BeamProperties.area: float\n\nThe cross-sectional area of the beam.\n\n\n\nproperty BeamProperties.centroid: ansys.geometry.core.shapes.parameterization.ParamUV\n\nThe centroid of the beam section.\n\n\n\nproperty BeamProperties.warping_constant: float\n\nThe warping constant of the beam.\n\n\n\nproperty BeamProperties.ixx: float\n\nThe moment of inertia about the x-axis.\n\n\n\nproperty BeamProperties.ixy: float\n\nThe product of inertia.\n\n\n\nproperty BeamProperties.iyy: float\n\nThe moment of inertia about the y-axis.\n\n\n\nproperty BeamProperties.shear_center: ansys.geometry.core.shapes.parameterization.ParamUV\n\nThe shear center of the beam.\n\n\n\nproperty BeamProperties.torsion_constant: float\n\nThe torsion constant of the beam."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/GRPCUnsupportedServiceV1.html#grpcunsupportedservicev1","title":"GRPCUnsupportedServiceV1","text":"GRPCUnsupportedServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.unsupported.GRPCUnsupportedServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.unsupported.GRPCUnsupportedService\n\nUnsupported service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/GRPCUnsupportedServiceV1.html#overview","title":"GRPCUnsupportedServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_import_id_map\n\nGet the import ID map.\n\nset_export_ids\n\nSet the export IDs for the entities.\n\nset_single_export_id\n\nSet a single export ID for an entity.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/GRPCUnsupportedServiceV1.html#import-detail","title":"GRPCUnsupportedServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/GRPCUnsupportedServiceV1.html#attribute-detail","title":"GRPCUnsupportedServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCUnsupportedServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/unsupported/GRPCUnsupportedServiceV1.html#method-detail","title":"GRPCUnsupportedServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCUnsupportedServiceV1.get_import_id_map(**kwargs) -> dict\n\nGet the import ID map.\n\n\n\nabstractmethod GRPCUnsupportedServiceV1.set_export_ids(**kwargs) -> dict\n\nSet the export IDs for the entities.\n\n\n\nabstractmethod GRPCUnsupportedServiceV1.set_single_export_id(**kwargs) -> dict\n\nSet a single export ID for an entity."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/index.html#the-edgespy-module","title":"The edges.py module","text":"The edges.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/index.html#summary","title":"The edges.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCEdgesService\n\nEdges service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/edges/index.html#description","title":"The edges.py module > Description","text":"Description\n\nModule containing the edges service implementation (abstraction layer)."},{"objectID":"Contribute","href":"contributing.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyAnsys Geometry.\n\nThe following contribution information is specific to PyAnsys Geometry."},{"objectID":"Contribute","href":"contributing.html#clone-the-repository","title":"Contribute > Clone the repository","text":"Clone the repository\n\nTo clone and install the latest PyAnsys Geometry release in development mode, run\nthese commands:"},{"objectID":"Contribute","href":"contributing.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyAnsys Geometry Issues\npage to submit questions, report bugs, and request new features. When possible, you\nshould use these issue templates:\n\nBug, problem, error: For filing a bug report\n\nDocumentation error: For requesting modifications to the documentation\n\nAdding an example: For proposing a new example\n\nNew feature: For requesting enhancements to the code\n\nIf your issue does not fit into one of these template categories, you can click\nthe link for opening a blank issue.\n\nTo reach the project support team, email pyansys.core@ansys.com."},{"objectID":"Contribute","href":"contributing.html#view-documentation","title":"Contribute > View documentation","text":"View documentation\n\nDocumentation for the latest stable release of PyAnsys Geometry is hosted at\nPyAnsys Geometry Documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option\nfor switching from viewing the documentation for the latest stable release\nto viewing the documentation for the development version or previously\nreleased versions."},{"objectID":"Contribute","href":"contributing.html#adhere-to-code-style","title":"Contribute > Adhere to code style","text":"Adhere to code style\n\nPyAnsys Geometry follows the PEP8 standard as outlined in\nPEP 8 in\nthe PyAnsys Developer’s Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run these commands:\n\nYou can also install this as a pre-commit hook by running this command:\n\nThis way, it’s not possible for you to push code that fails the style checks:"},{"objectID":"Contribute","href":"contributing.html#build-the-documentation","title":"Contribute > Build the documentation","text":"Build the documentation\n\nTo build the documentation, you must have the Geometry Service\ninstalled and running on your machine because it is used to generate the\nexamples in the documentation. It is also recommended that the\nservice is running as a Docker container.\n\nIf you do not have the Geometry Service installed, you can still build the\ndocumentation, but the examples are not generated. To build the\ndocumentation without the examples, define the following environment variable:\n\nTo build the documentation locally, you must run this command to install the\ndocumentation dependencies:\n\nThen, navigate to the docs directory and run this command:\n\nThe documentation is built in the docs/_build/html directory.\n\nYou can clean the documentation build by running this command:"},{"objectID":"Contribute","href":"contributing.html#adding-examples","title":"Contribute > Adding examples","text":"Adding examples\n\nUsers can collaborate with examples to this documentation by adding new examples. A reference\ncommit of the changes that adding an example requires is shown here:\n\nhttps://github.com/ansys/pyansys-geometry/pull/1454/commits/7fcf02f86f05e0e5ce1c1071c3c5fcd274ec481c\n\nTo add a new example, follow these steps:\n\nCreate a new notebook in the doc/source/examples directory, under the appropriate\nfolder for your example.\n\nUse the doc\\source\\examples\\99_misc\\template.mystnb file as a reference for creating\nyour example notebook. It contains the necessary metadata and structure for a\nPyAnsys Geometry example.\n\nAdd the new notebook to the doc/source/examples.rst file.\n\nStore a thumbnail image of the example in the doc/source/_static/thumbnails directory.\n\nLink the thumbnail image to your example file in the doc/source/conf.py file as shown in the reference commit.\n\nYou can also test the correct build process of a new example by performing the following steps:\n\nRun the following command to install the documentation dependencies:\n\nNavigate to the doc directory and run the following command:\n\nThe example name must be the same as the notebook name, with its path\nstarting at the examples directory.\n\nCheck the doc/source/_build/html directory for the generated documentation\nand open the index.html file in your browser."},{"objectID":"Contribute","href":"contributing.html#run-tests","title":"Contribute > Run tests","text":"Run tests\n\nPyAnsys Geometry uses pytest for testing."},{"objectID":"Contribute","href":"contributing.html#prerequisites","title":"Contribute > Prerequisites","text":"Prerequisites\n\nPrior to running the tests, you must run this command to install the test dependencies:\n\nMake sure to define the port and host of the service using the following environment variables:"},{"objectID":"Contribute","href":"contributing.html#running-the-tests","title":"Contribute > Running the tests","text":"Running the tests\n\nTo run the tests, navigate to the root directory of the repository and run this command:\n\nThe tests require the Geometry Service to be installed and running on your machine.\nThe tests fail if the service is not running. It is expected for the Geometry\nService to be running as a Docker container.\n\nIf you do not have the Geometry Service running as a Docker container, but you have it\nrunning on your machine, you can still run the tests with the following argument:"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/GRPCPrepareToolsService.html#grpcpreparetoolsservice","title":"GRPCPrepareToolsService","text":"GRPCPrepareToolsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.prepare_tools.GRPCPrepareToolsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nPrepare tools service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/GRPCPrepareToolsService.html#overview","title":"GRPCPrepareToolsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nextract_volume_from_faces\n\nExtract a volume from input faces.\n\nextract_volume_from_edge_loops\n\nExtract a volume from input edge loop.\n\nremove_rounds\n\nRemove rounds from geometry.\n\nshare_topology\n\nShare topology between the given bodies.\n\nenhanced_share_topology\n\nShare topology between the given bodies.\n\nfind_logos\n\nDetect logos in geometry.\n\nfind_and_remove_logos\n\nDetect and remove logos in geometry.\n\nremove_logo\n\nRemove logos in geometry.\n\ndetect_helixes\n\nDetect helixes in geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/GRPCPrepareToolsService.html#import-detail","title":"GRPCPrepareToolsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/prepare_tools/GRPCPrepareToolsService.html#method-detail","title":"GRPCPrepareToolsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPrepareToolsService.extract_volume_from_faces(**kwargs) -> dict\n\nExtract a volume from input faces.\n\n\n\nabstractmethod GRPCPrepareToolsService.extract_volume_from_edge_loops(**kwargs) -> dict\n\nExtract a volume from input edge loop.\n\n\n\nabstractmethod GRPCPrepareToolsService.remove_rounds(**kwargs) -> dict\n\nRemove rounds from geometry.\n\n\n\nabstractmethod GRPCPrepareToolsService.share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nabstractmethod GRPCPrepareToolsService.enhanced_share_topology(**kwargs) -> dict\n\nShare topology between the given bodies.\n\n\n\nabstractmethod GRPCPrepareToolsService.find_logos(**kwargs) -> dict\n\nDetect logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsService.find_and_remove_logos(**kwargs) -> dict\n\nDetect and remove logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsService.remove_logo(**kwargs) -> dict\n\nRemove logos in geometry.\n\n\n\nabstractmethod GRPCPrepareToolsService.detect_helixes(**kwargs) -> dict\n\nDetect helixes in geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/ReversedTrimmedSurface.html#reversedtrimmedsurface","title":"ReversedTrimmedSurface","text":"ReversedTrimmedSurface\n\n\n\nclass ansys.geometry.core.shapes.surfaces.trimmed_surface.ReversedTrimmedSurface(geometry: ansys.geometry.core.shapes.surfaces.surface.Surface, box_uv: ansys.geometry.core.shapes.box_uv.BoxUV)\n\nBases: TrimmedSurface\n\nRepresents a reversed trimmed surface.\n\nWhen a surface is reversed, its normal vector is negated to provide the proper\noutward facing vector.\n\nParameters\n\nface\n\nFace\n\nFace that the trimmed surface belongs to.\n\ngeometry\n\nSurface\n\nUnderlying mathematical representation of the surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/ReversedTrimmedSurface.html#overview","title":"ReversedTrimmedSurface > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nnormal\n\nProvide the normal to the surface.\n\nproject_point\n\nProject a point onto the surface and evaluate it at that location."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/ReversedTrimmedSurface.html#import-detail","title":"ReversedTrimmedSurface > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/trimmed_surface/ReversedTrimmedSurface.html#method-detail","title":"ReversedTrimmedSurface > Method detail","text":"Method detail\n\n\n\nReversedTrimmedSurface.normal(u: ansys.geometry.core.typing.Real, v: ansys.geometry.core.typing.Real) -> ansys.geometry.core.math.vector.UnitVector3D\n\nProvide the normal to the surface.\n\nParameters\n\nu\n\nReal\n\nFirst coordinate of the 2D representation of a surface in UV space.\n\nv\n\nReal\n\nSecond coordinate of the 2D representation of a surface in UV space.\n\nReturns\n\nUnitVector3D\n\nUnit vector is normal to the surface at the given UV coordinates.\n\n\n\nReversedTrimmedSurface.project_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProject a point onto the surface and evaluate it at that location.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the surface.\n\nReturns\n\nSurfaceEvaluation\n\nResulting evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/Cone.html#cone","title":"Cone","text":"Cone\n\n\n\nclass ansys.geometry.core.shapes.surfaces.cone.Cone(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, half_angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nProvides 3D cone representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the cone.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the cone.\n\nhalf_angle\n\nQuantity | Angle | Real\n\nHalf angle of the apex, determining the upward angle.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/Cone.html#overview","title":"Cone > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\nMethods\n\n\n\n\n\ntransformed_copy\n\nCreate a transformed copy of the cone from a transformation matrix.\n\nmirrored_copy\n\nCreate a mirrored copy of the cone along the y-axis.\n\nevaluate\n\nEvaluate the cone at given parameters.\n\nproject_point\n\nProject a point onto the cone and evaluate the cone.\n\nparameterization\n\nParameterize the cone surface as a tuple (U and V respectively).\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the cone.\n\nradius\n\nRadius of the cone.\n\nhalf_angle\n\nHalf angle of the apex.\n\ndir_x\n\nX-direction of the cone.\n\ndir_y\n\nY-direction of the cone.\n\ndir_z\n\nZ-direction of the cone.\n\nheight\n\nHeight of the cone.\n\nsurface_area\n\nSurface area of the cone.\n\nvolume\n\nVolume of the cone.\n\napex\n\nApex point of the cone.\n\napex_param\n\nApex parameter of the cone.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Cone class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/Cone.html#import-detail","title":"Cone > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/Cone.html#property-detail","title":"Cone > Property detail","text":"Property detail\n\n\n\nproperty Cone.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the cone.\n\n\n\nproperty Cone.radius: pint.Quantity\n\nRadius of the cone.\n\n\n\nproperty Cone.half_angle: pint.Quantity\n\nHalf angle of the apex.\n\n\n\nproperty Cone.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the cone.\n\n\n\nproperty Cone.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the cone.\n\n\n\nproperty Cone.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the cone.\n\n\n\nproperty Cone.height: pint.Quantity\n\nHeight of the cone.\n\n\n\nproperty Cone.surface_area: pint.Quantity\n\nSurface area of the cone.\n\n\n\nproperty Cone.volume: pint.Quantity\n\nVolume of the cone.\n\n\n\nproperty Cone.apex: ansys.geometry.core.math.point.Point3D\n\nApex point of the cone.\n\n\n\nproperty Cone.apex_param: ansys.geometry.core.typing.Real\n\nApex parameter of the cone."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/Cone.html#method-detail","title":"Cone > Method detail","text":"Method detail\n\n\n\nCone.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Cone\n\nCreate a transformed copy of the cone from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4x4 transformation matrix to apply to the cone.\n\nReturns\n\nCone\n\nNew cone that is the transformed copy of the original cone.\n\n\n\nCone.mirrored_copy() -> Cone\n\nCreate a mirrored copy of the cone along the y-axis.\n\nReturns\n\nCone\n\nNew cone that is a mirrored copy of the original cone.\n\n\n\nCone.__eq__(other: Cone) -> bool\n\nEquals operator for the Cone class.\n\n\n\nCone.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> ConeEvaluation\n\nEvaluate the cone at given parameters.\n\nParameters\n\nparameter\n\nParamUV\n\nParameters (u,v) to evaluate the cone at.\n\nReturns\n\nConeEvaluation\n\nResulting evaluation.\n\n\n\nCone.project_point(point: ansys.geometry.core.math.point.Point3D) -> ConeEvaluation\n\nProject a point onto the cone and evaluate the cone.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the cone.\n\nReturns\n\nConeEvaluation\n\nResulting evaluation.\n\n\n\nCone.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParameterize the cone surface as a tuple (U and V respectively).\n\nThe U parameter specifies the clockwise angle around the axis (right-hand\ncorkscrew law), with a zero parameter at dir_x and a period of 2*pi.\n\nThe V parameter specifies the distance along the axis, with a zero parameter at\nthe XY plane of the cone.\n\nReturns\n\npython:tuple[Parameterization, Parameterization]\n\nInformation about how a cone’s u and v parameters are parameterized, respectively.\n\n\n\nabstractmethod Cone.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod Cone.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCrossSectionInfo.html#beamcrosssectioninfo","title":"BeamCrossSectionInfo","text":"BeamCrossSectionInfo\n\n\n\nclass ansys.geometry.core.designer.beam.BeamCrossSectionInfo(section_anchor: SectionAnchorType, section_angle: float, section_frame: ansys.geometry.core.math.frame.Frame, section_profile: list[list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]] | None)\n\nRepresents the cross-section information for a beam.\n\nParameters\n\nsection_anchor\n\nSectionAnchorType\n\nSpecifies how the beam section is anchored to the beam path.\n\nsection_angle\n\npython:float\n\nThe rotation angle of the cross section clockwise from the default perpendicular of the\nbeam path.\n\nsection_frame\n\nFrame\n\nThe section frame at the start of the beam.\n\nsection_profile\n\nBeamProfile\n\nThe section profile in the XY plane."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCrossSectionInfo.html#overview","title":"BeamCrossSectionInfo > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsection_anchor\n\nSpecifies how the beam section is anchored to the beam path.\n\nsection_angle\n\nRotation angle of the cross section clockwise from the perpendicular of the beam path.\n\nsection_frame\n\nThe section frame at the start of the beam.\n\nsection_profile\n\nThe section profile in the XY plane.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the BeamCrossSectionInfo as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCrossSectionInfo.html#import-detail","title":"BeamCrossSectionInfo > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCrossSectionInfo.html#property-detail","title":"BeamCrossSectionInfo > Property detail","text":"Property detail\n\n\n\nproperty BeamCrossSectionInfo.section_anchor: SectionAnchorType\n\nSpecifies how the beam section is anchored to the beam path.\n\n\n\nproperty BeamCrossSectionInfo.section_angle: float\n\nRotation angle of the cross section clockwise from the perpendicular of the beam path.\n\n\n\nproperty BeamCrossSectionInfo.section_frame: ansys.geometry.core.math.frame.Frame\n\nThe section frame at the start of the beam.\n\n\n\nproperty BeamCrossSectionInfo.section_profile: list[list[ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve]] | None\n\nThe section profile in the XY plane."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCrossSectionInfo.html#method-detail","title":"BeamCrossSectionInfo > Method detail","text":"Method detail\n\n\n\nBeamCrossSectionInfo.__repr__() -> str\n\nRepresent the BeamCrossSectionInfo as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/index.html#the-beampy-module","title":"The beam.py module","text":"The beam.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/index.html#summary","title":"The beam.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBeamProfile\n\nRepresents a single beam profile organized within the design assembly.\n\nBeamCircularProfile\n\nRepresents a single circular beam profile.\n\nBeamCrossSectionInfo\n\nRepresents the cross-section information for a beam.\n\nBeamProperties\n\nRepresents the properties of a beam.\n\nBeam\n\nRepresents a simplified solid body with an assigned 2D cross-section.\n\nEnums\n\n\n\n\n\nBeamType\n\nProvides values for the beam types supported.\n\nSectionAnchorType\n\nProvides values for the section anchor types supported.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/index.html#description","title":"The beam.py module > Description","text":"Description\n\nProvides for creating and managing a beam."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurveEvaluation.html#nurbscurveevaluation","title":"NURBSCurveEvaluation","text":"NURBSCurveEvaluation\n\n\n\nclass ansys.geometry.core.shapes.curves.nurbs.NURBSCurveEvaluation(nurbs_curve: NURBSCurve, parameter: ansys.geometry.core.typing.Real)\n\nBases: ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nProvides evaluation of a NURBS curve at a given parameter.\n\nParameters\n\nnurbs_curve: ~ansys.geometry.core.shapes.curves.nurbs.NURBSCurve\n\nNURBS curve to evaluate.\n\nparameter: Real\n\nParameter to evaluate the NURBS curve at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurveEvaluation.html#overview","title":"NURBSCurveEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nfirst_derivative\n\nFirst derivative of the evaluation.\n\nsecond_derivative\n\nSecond derivative of the evaluation.\n\ncurvature\n\nCurvature of the evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurveEvaluation.html#import-detail","title":"NURBSCurveEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurveEvaluation.html#property-detail","title":"NURBSCurveEvaluation > Property detail","text":"Property detail\n\n\n\nproperty NURBSCurveEvaluation.parameter: ansys.geometry.core.typing.Real\n\nParameter that the evaluation is based upon.\n\n\n\nproperty NURBSCurveEvaluation.position: ansys.geometry.core.math.Point3D\n\nPosition of the evaluation.\n\n\n\nproperty NURBSCurveEvaluation.first_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative of the evaluation.\n\n\n\nproperty NURBSCurveEvaluation.second_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative of the evaluation.\n\n\n\nproperty NURBSCurveEvaluation.curvature: ansys.geometry.core.typing.Real\n\nCurvature of the evaluation."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/GRPCPointsServiceV0.html#grpcpointsservicev0","title":"GRPCPointsServiceV0","text":"GRPCPointsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.points.GRPCPointsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.points.GRPCPointsService\n\nPoints service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\npoints service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/GRPCPointsServiceV0.html#overview","title":"GRPCPointsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_design_points\n\nCreate design points.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/GRPCPointsServiceV0.html#import-detail","title":"GRPCPointsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/GRPCPointsServiceV0.html#attribute-detail","title":"GRPCPointsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPointsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/GRPCPointsServiceV0.html#method-detail","title":"GRPCPointsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCPointsServiceV0.create_design_points(**kwargs) -> dict\n\nCreate design points."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/index.html#the-assembly_controlspy-module","title":"The assembly_controls.py module","text":"The assembly_controls.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/index.html#summary","title":"The assembly_controls.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAssemblyControlsService\n\nAssembly controls service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/assembly_controls/index.html#description","title":"The assembly_controls.py module > Description","text":"Description\n\nModule containing the assembly controls service implementation (abstraction layer)."},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#modeling-design-organization","title":"Examples > Modeling: Design organization","text":"Modeling: Design organization\n\nThe Design instance creates a design project within the remote Geometry service to complete all CAD modeling against.\n\nYou can organize all solid and surface bodies in each design within a customizable component hierarchy. A component is simply an organization mechanism.\n\nThe top-level design node and each child component node can have one or more bodies assigned and one or more components assigned.\n\nThe API requires each component of the design hierarchy to be given a user-defined name.\n\nThere are several design operations that result in a body being created within a design. Executing each of these methods against a specific component instance explicitly specifies the node of the design tree to place the new body under."},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#perform-required-imports","title":"Examples > Modeling: Design organization > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#organize-design","title":"Examples > Modeling: Design organization > Organize design","text":"Organize design\n\nExtrude two sketches to create bodies. Assign the cylinder to the top-level design component. Assign the slot to the component nested one level beneath the top-level design component.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#create-nested-component","title":"Examples > Modeling: Design organization > Create nested component","text":"Create nested component\n\nCreate a component that is nested under the previously created component and then create another cylinder from the previously used sketch.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#use-surfaces-from-body-to-create-additional-bodies","title":"Examples > Modeling: Design organization > Use surfaces from body to create additional bodies","text":"Use surfaces from body to create additional bodies\n\nYou can use surfaces from any body across the entire design as references for creating additional bodies.\n\nExtrude a cylinder from the surface body assigned to the child component.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_organization.html#close-the-modeler","title":"Examples > Modeling: Design organization > Close the modeler","text":"Close the modeler\n\nClose the modeler to release the resources.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/index.html#the-geometry_commandspy-module","title":"The geometry_commands.py module","text":"The geometry_commands.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/index.html#summary","title":"The geometry_commands.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGeometryCommands\n\nProvides geometry commands for PyAnsys Geometry.\n\nEnums\n\n\n\n\n\nExtrudeType\n\nProvides values for extrusion types.\n\nOffsetMode\n\nProvides values for offset modes during extrusions.\n\nFillPatternType\n\nProvides values for types of fill patterns.\n\nDraftSide\n\nProvides values for draft sides.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/geometry_commands/index.html#description","title":"The geometry_commands.py module > Description","text":"Description\n\nProvides tools for pulling geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/index.html#the-facespy-module","title":"The faces.py module","text":"The faces.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/index.html#summary","title":"The faces.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCFacesServiceV1\n\nFaces service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/index.html#description","title":"The faces.py module > Description","text":"Description\n\nModule containing the faces service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/index.html#the-boxpy-module","title":"The box.py module","text":"The box.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/index.html#summary","title":"The box.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBox\n\nProvides for modeling a box.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/box/index.html#description","title":"The box.py module > Description","text":"Description\n\nProvides for creating and managing a box (quadrilateral)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/index.html#the-designpointpy-module","title":"The designpoint.py module","text":"The designpoint.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/index.html#summary","title":"The designpoint.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDesignPoint\n\nProvides for creating design points in components.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/index.html#description","title":"The designpoint.py module > Description","text":"Description\n\nModule for creating and managing design points."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/RepairTools.html#repairtools","title":"RepairTools","text":"RepairTools\n\n\n\nclass ansys.geometry.core.tools.repair_tools.RepairTools(grpc_client: ansys.geometry.core.connection.GrpcClient, modeler: ansys.geometry.core.modeler.Modeler, _internal_use: bool = False)\n\nRepair tools for PyAnsys Geometry.\n\nParameters\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nmodeler\n\nModeler\n\nThe parent modeler instance.\n\n_internal_use\n\nbool, optional\n\nInternal flag to prevent direct instantiation by users.\nThis parameter is for internal use only.\n\nRaises\n\nGeometryRuntimeError\n\nIf the class is instantiated directly by users instead\nof through the modeler.\n\nNotes\n\nThis class should not be instantiated directly. Use\nmodeler.repair_tools instead."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/RepairTools.html#overview","title":"RepairTools > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfind_split_edges\n\nFind split edges in the given list of bodies.\n\nfind_extra_edges\n\nFind the extra edges in the given list of bodies.\n\nfind_inexact_edges\n\nFind inexact edges in the given list of bodies.\n\nfind_short_edges\n\nFind the short edge problem areas.\n\nfind_duplicate_faces\n\nFind the duplicate face problem areas.\n\nfind_missing_faces\n\nFind the missing faces.\n\nfind_small_faces\n\nFind the small face problem areas.\n\nfind_stitch_faces\n\nReturn the list of stitch face problem areas.\n\nfind_simplify\n\nDetect faces in a body that can be simplified.\n\nfind_interferences\n\nFind the interference problem areas.\n\nfind_and_fix_short_edges\n\nFind and fix the short edge problem areas.\n\nfind_and_fix_extra_edges\n\nFind and fix the extra edge problem areas.\n\nfind_and_fix_split_edges\n\nFind and fix the split edge problem areas.\n\nfind_and_fix_simplify\n\nFind and simplify the provided geometry.\n\nfind_and_fix_stitch_faces\n\nFind and fix the stitch face problem areas.\n\ninspect_geometry\n\nReturn a list of geometry issues organized by body.\n\nrepair_geometry\n\nAttempt to repair the geometry for the given bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/RepairTools.html#import-detail","title":"RepairTools > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tools/RepairTools.html#method-detail","title":"RepairTools > Method detail","text":"Method detail\n\n\n\nRepairTools.find_split_edges(bodies: list[ansys.geometry.core.designer.body.Body], angle: ansys.geometry.core.typing.Real = 0.0, length: ansys.geometry.core.typing.Real = 0.0) -> list[ansys.geometry.core.tools.problem_areas.SplitEdgeProblemAreas]\n\nFind split edges in the given list of bodies.\n\nThis method finds the split edge problem areas and returns a list of split edge\nproblem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that split edges are investigated on.\n\nangle\n\nReal\n\nThe maximum angle between edges.\n\nlength\n\nReal\n\nThe maximum length of the edges.\n\nReturns\n\npython:list[SplitEdgeProblemAreas]\n\nList of objects representing split edge problem areas.\n\n\n\nRepairTools.find_extra_edges(bodies: list[ansys.geometry.core.designer.body.Body]) -> list[ansys.geometry.core.tools.problem_areas.ExtraEdgeProblemAreas]\n\nFind the extra edges in the given list of bodies.\n\nThis method find the extra edge problem areas and returns a list of extra edge\nproblem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that extra edges are investigated on.\n\nReturns\n\npython:list[ExtraEdgeProblemArea]\n\nList of objects representing extra edge problem areas.\n\n\n\nRepairTools.find_inexact_edges(bodies: list[ansys.geometry.core.designer.body.Body]) -> list[ansys.geometry.core.tools.problem_areas.InexactEdgeProblemAreas]\n\nFind inexact edges in the given list of bodies.\n\nThis method find the inexact edge problem areas and returns a list of inexact\nedge problem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that inexact edges are investigated on.\n\nReturns\n\npython:list[InExactEdgeProblemArea]\n\nList of objects representing inexact edge problem areas.\n\n\n\nRepairTools.find_short_edges(bodies: list[ansys.geometry.core.designer.body.Body], length: ansys.geometry.core.typing.Real = 0.0) -> list[ansys.geometry.core.tools.problem_areas.ShortEdgeProblemAreas]\n\nFind the short edge problem areas.\n\nThis method finds the short edge problem areas and returns a list of\nthese objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that short edges are investigated on.\n\nReturns\n\npython:list[ShortEdgeProblemAreas]\n\nList of objects representing short edge problem areas.\n\n\n\nRepairTools.find_duplicate_faces(bodies: list[ansys.geometry.core.designer.body.Body]) -> list[ansys.geometry.core.tools.problem_areas.DuplicateFaceProblemAreas]\n\nFind the duplicate face problem areas.\n\nThis method finds the duplicate face problem areas and returns a list of\nduplicate face problem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that duplicate faces are investigated on.\n\nReturns\n\npython:list[DuplicateFaceProblemAreas]\n\nList of objects representing duplicate face problem areas.\n\n\n\nRepairTools.find_missing_faces(bodies: list[ansys.geometry.core.designer.body.Body], angle: ansys.geometry.core.misc.measurements.Angle | pint.Quantity | ansys.geometry.core.typing.Real | None = None, distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real | None = None) -> list[ansys.geometry.core.tools.problem_areas.MissingFaceProblemAreas]\n\nFind the missing faces.\n\nThis method find the missing face problem areas and returns a list of missing\nface problem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that missing faces are investigated on.\n\nangle\n\nAngle | Quantity | Real, optional\n\nThe minimum angle between faces. By default, None.\nThis option is only used if the backend version is 26.1 or higher.\n\ndistance\n\nDistance | Quantity | Real, optional\n\nThe minimum distance between faces. By default, None.\nThis option is only used if the backend version is 26.1 or higher.\n\nReturns\n\npython:list[MissingFaceProblemAreas]\n\nList of objects representing missing face problem areas.\n\n\n\nRepairTools.find_small_faces(bodies: list[ansys.geometry.core.designer.body.Body], area: ansys.geometry.core.misc.measurements.Area | pint.Quantity | ansys.geometry.core.typing.Real | None = None, width: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real | None = None) -> list[ansys.geometry.core.tools.problem_areas.SmallFaceProblemAreas]\n\nFind the small face problem areas.\n\nThis method finds and returns a list of ids of small face problem areas\nobjects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that small faces are investigated on.\n\narea\n\nArea | Quantity | Real, optional\n\nMaximum area of the faces. By default, None.\nThis option is only used if the backend version is 26.1 or higher.\n\nwidth\n\nDistance | Quantity | Real, optional\n\nMaximum width of the faces. By default, None.\nThis option is only used if the backend version is 26.1 or higher.\n\nReturns\n\npython:list[SmallFaceProblemAreas]\n\nList of objects representing small face problem areas.\n\n\n\nRepairTools.find_stitch_faces(bodies: list[ansys.geometry.core.designer.body.Body], max_distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real | None = None) -> list[ansys.geometry.core.tools.problem_areas.StitchFaceProblemAreas]\n\nReturn the list of stitch face problem areas.\n\nThis method find the stitch face problem areas and returns a list of ids of stitch face\nproblem areas objects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that stitchable faces are investigated on.\n\nmax_distance\n\nDistance | Quantity | Real, optional\n\nMaximum distance between faces. By default, None.\nThis option is only used if the backend version is 26.1 or higher.\n\nReturns\n\npython:list[StitchFaceProblemAreas]\n\nList of objects representing stitch face problem areas.\n\n\n\nRepairTools.find_simplify(bodies: list[ansys.geometry.core.designer.body.Body]) -> list[ansys.geometry.core.tools.problem_areas.UnsimplifiedFaceProblemAreas]\n\nDetect faces in a body that can be simplified.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to search.\n\nReturns\n\npython:list[UnsimplifiedFaceProblemAreas]\n\nList of objects representing unsimplified face problem areas.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_interferences(bodies: list[ansys.geometry.core.designer.body.Body], cut_smaller_body: bool = False) -> list[ansys.geometry.core.tools.problem_areas.InterferenceProblemAreas]\n\nFind the interference problem areas.\n\nThis method finds and returns a list of ids of interference problem areas\nobjects.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that small faces are investigated on.\n\ncut_smaller_body\n\nbool, optional\n\nWhether to cut the smaller body if an intererference is found.\nBy default, False.\n\nReturns\n\npython:list[InterfenceProblemAreas]\n\nList of objects representing interference problem areas.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_and_fix_short_edges(bodies: list[ansys.geometry.core.designer.body.Body], length: ansys.geometry.core.typing.Real = 0.0, comprehensive_result: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFind and fix the short edge problem areas.\n\nThis method finds the short edges in the bodies and fixes them.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that short edges are investigated on.\n\nlength\n\nReal, optional\n\nThe maximum length of the edges. By default, 0.0.\n\ncomprehensive_result\n\nbool, optional\n\nWhether to fix all problem areas individually.\nBy default, False.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_and_fix_extra_edges(bodies: list[ansys.geometry.core.designer.body.Body], comprehensive_result: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFind and fix the extra edge problem areas.\n\nThis method finds the extra edges in the bodies and fixes them.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that short edges are investigated on.\n\nlength\n\nReal\n\nThe maximum length of the edges.\n\ncomprehensive_result\n\nbool, optional\n\nWhether to fix all problem areas individually.\nBy default, False.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_and_fix_split_edges(bodies: list[ansys.geometry.core.designer.body.Body], angle: ansys.geometry.core.typing.Real = 0.0, length: ansys.geometry.core.typing.Real = 0.0, comprehensive_result: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFind and fix the split edge problem areas.\n\nThis method finds the extra edges in the bodies and fixes them.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that split edges are investigated on.\n\nangle\n\nReal, optional\n\nThe maximum angle between edges. By default, 0.0.\n\nlength\n\nReal, optional\n\nThe maximum length of the edges. By default, 0.0.\n\ncomprehensive_result\n\nbool, optional\n\nWhether to fix all problem areas individually.\nBy default, False.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_and_fix_simplify(bodies: list[ansys.geometry.core.designer.body.Body], comprehensive_result: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFind and simplify the provided geometry.\n\nThis method simplifies the provided geometry.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to be simplified.\n\ncomprehensive_result\n\nbool, optional\n\nWhether to fix all problem areas individually.\nBy default, False.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.find_and_fix_stitch_faces(bodies: list[ansys.geometry.core.designer.body.Body], max_distance: ansys.geometry.core.misc.measurements.Distance | pint.Quantity | ansys.geometry.core.typing.Real | None = None, allow_multiple_bodies: bool = False, maintain_components: bool = True, check_for_coincidence: bool = False, comprehensive_result: bool = False) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFind and fix the stitch face problem areas.\n\nThis method finds the stitchable faces and fixes them.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies that stitchable faces are investigated on.\n\nmax_distance\n\nDistance | Quantity | Real, optional\n\nThe maximum distance between faces to be stitched.\nBy default, 0.0001.\n\nallow_multiple_bodies\n\nbool, optional\n\nWhether to allow multiple bodies in the result.\nBy default, False.\n\nmaintain_components\n\nbool, optional\n\nWhether to stitch bodies within the components.\nBy default, True.\n\ncheck_for_coincidence\n\nbool, optional\n\nWhether coincidence surfaces are searched.\nBy default, False.\n\ncomprehensive_result\n\nbool, optional\n\nWhether to fix all problem areas individually.\nBy default, False.\n\nReturns\n\nRepairToolMessage\n\nMessage containing number of problem areas found/fixed, created and/or modified bodies.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.inspect_geometry(bodies: list[ansys.geometry.core.designer.body.Body] = None) -> list[ansys.geometry.core.tools.check_geometry.InspectResult]\n\nReturn a list of geometry issues organized by body.\n\nThis method inspects the geometry and returns a list of the issues grouped by\nthe body where they are found.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies to inspect the geometry for.\nAll bodies are inspected if the argument is not given.\n\nReturns\n\npython:list[IssuesByBody]\n\nList of objects representing geometry issues and the bodies where issues are found.\n\nThis method is only available starting on Ansys release 25R2.\n\n\n\nRepairTools.repair_geometry(bodies: list[ansys.geometry.core.designer.body.Body] = None) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nAttempt to repair the geometry for the given bodies.\n\nThis method inspects the geometry for the given bodies and attempts to repair them.\n\nParameters\n\nbodies\n\npython:list[Body]\n\nList of bodies where to attempt to repair the geometry.\nAll bodies are repaired if the argument is not given.\n\nReturns\n\nRepairToolMessage\n\nMessage containing success of the operation.\n\nThis method is only available starting on Ansys release 25R2."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneSurface.html#planesurface","title":"PlaneSurface","text":"PlaneSurface\n\n\n\nclass ansys.geometry.core.shapes.surfaces.plane.PlaneSurface(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nProvides 3D plane surface representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nCentered origin of the plane.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneSurface.html#overview","title":"PlaneSurface > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a ParamUV is within the parametric range of the surface.\n\ncontains_point\n\nCheck whether a 3D point is in the domain of the plane.\n\nMethods\n\n\n\n\n\nparameterization\n\nParametrize the plane.\n\nproject_point\n\nEvaluate the plane at a given 3D point.\n\ntransformed_copy\n\nGet a transformed version of the plane given the transform.\n\nevaluate\n\nEvaluate the plane at a given u and v parameter.\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the plane.\n\ndir_x\n\nX-direction of the plane.\n\ndir_y\n\nY-direction of the plane.\n\ndir_z\n\nZ-direction of the plane.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nCheck whether two planes are equal."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneSurface.html#import-detail","title":"PlaneSurface > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneSurface.html#property-detail","title":"PlaneSurface > Property detail","text":"Property detail\n\n\n\nproperty PlaneSurface.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the plane.\n\n\n\nproperty PlaneSurface.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the plane.\n\n\n\nproperty PlaneSurface.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the plane.\n\n\n\nproperty PlaneSurface.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the plane."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/plane/PlaneSurface.html#method-detail","title":"PlaneSurface > Method detail","text":"Method detail\n\n\n\nPlaneSurface.__eq__(other: PlaneSurface) -> bool\n\nCheck whether two planes are equal.\n\n\n\nabstractmethod PlaneSurface.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a ParamUV is within the parametric range of the surface.\n\n\n\nabstractmethod PlaneSurface.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck whether a 3D point is in the domain of the plane.\n\n\n\nPlaneSurface.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParametrize the plane.\n\n\n\nPlaneSurface.project_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the plane at a given 3D point.\n\n\n\nPlaneSurface.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> ansys.geometry.core.shapes.surfaces.surface.Surface\n\nGet a transformed version of the plane given the transform.\n\n\n\nPlaneSurface.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> PlaneEvaluation\n\nEvaluate the plane at a given u and v parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurve.html#nurbscurve","title":"NURBSCurve","text":"NURBSCurve\n\n\n\nclass ansys.geometry.core.shapes.curves.nurbs.NURBSCurve(geomdl_object: geomdl.NURBS.Curve = None)\n\nBases: ansys.geometry.core.shapes.curves.curve.Curve\n\nRepresents a NURBS curve.\n\nNotes\n\nThis class is a wrapper around the NURBS curve class from the geomdl library.\nBy leveraging the geomdl library, this class provides a high-level interface\nto create and manipulate NURBS curves. The geomdl library is a powerful\nlibrary for working with NURBS curves and surfaces. For more information, see\nhttps://pypi.org/project/geomdl/."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurve.html#overview","title":"NURBSCurve > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the curve.\n\ncontains_point\n\nCheck a point is contained by the curve.\n\nConstructors\n\n\n\n\n\nfrom_control_points\n\nCreate a NURBS curve from control points.\n\nfit_curve_from_points\n\nFit a NURBS curve to a set of points.\n\nMethods\n\n\n\n\n\nlength\n\nCalculate the length of the NURBS curve.\n\nparameterization\n\nGet the parametrization of the NURBS curve.\n\ntransformed_copy\n\nCreate a transformed copy of the curve.\n\nevaluate\n\nEvaluate the curve at the given parameter.\n\nproject_point\n\nProject a point to the NURBS curve.\n\nProperties\n\n\n\n\n\ngeomdl_nurbs_curve\n\nGet the underlying NURBS curve.\n\ncontrol_points\n\nGet the control points of the curve.\n\ndegree\n\nGet the degree of the curve.\n\nknots\n\nGet the knot vector of the curve.\n\nweights\n\nGet the weights of the control points.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nDetermine if two curves are equal."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurve.html#import-detail","title":"NURBSCurve > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurve.html#property-detail","title":"NURBSCurve > Property detail","text":"Property detail\n\n\n\nproperty NURBSCurve.geomdl_nurbs_curve: geomdl.NURBS.Curve\n\nGet the underlying NURBS curve.\n\nNotes\n\nThis property gives access to the full functionality of the NURBS curve\ncoming from the geomdl library. Use with caution.\n\n\n\nproperty NURBSCurve.control_points: list[ansys.geometry.core.math.Point3D]\n\nGet the control points of the curve.\n\n\n\nproperty NURBSCurve.degree: int\n\nGet the degree of the curve.\n\n\n\nproperty NURBSCurve.knots: list[ansys.geometry.core.typing.Real]\n\nGet the knot vector of the curve.\n\n\n\nproperty NURBSCurve.weights: list[ansys.geometry.core.typing.Real]\n\nGet the weights of the control points."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/NURBSCurve.html#method-detail","title":"NURBSCurve > Method detail","text":"Method detail\n\n\n\nNURBSCurve.length(num_points: int = None) -> ansys.geometry.core.typing.Real\n\nCalculate the length of the NURBS curve.\n\nParameters\n\nnum_points\n\npython:int, default: python:None\n\nNumber of points to sample along the curve for length calculation.\n\nReturns\n\nReal\n\nLength of the NURBS curve.\n\n\n\nclassmethod NURBSCurve.from_control_points(control_points: list[ansys.geometry.core.math.Point3D], degree: int, knots: list[ansys.geometry.core.typing.Real], weights: list[ansys.geometry.core.typing.Real] = None) -> NURBSCurve\n\nCreate a NURBS curve from control points.\n\nParameters\n\ncontrol_points\n\npython:list[Point3D]\n\nControl points of the curve.\n\ndegree\n\npython:int\n\nDegree of the curve.\n\nknots\n\npython:list[Real]\n\nKnot vector of the curve.\n\nweights\n\npython:list[Real], optional\n\nWeights of the control points.\n\nReturns\n\nNURBSCurve\n\nNURBS curve.\n\n\n\nclassmethod NURBSCurve.fit_curve_from_points(points: list[ansys.geometry.core.math.Point3D], degree: int) -> NURBSCurve\n\nFit a NURBS curve to a set of points.\n\nParameters\n\npoints\n\npython:list[Point3D]\n\nPoints to fit the curve to.\n\ndegree\n\npython:int\n\nDegree of the curve.\n\nReturns\n\nNURBSCurve\n\nFitted NURBS curve.\n\n\n\nNURBSCurve.__eq__(other: NURBSCurve) -> bool\n\nDetermine if two curves are equal.\n\n\n\nNURBSCurve.parameterization() -> ansys.geometry.core.shapes.parameterization.Parameterization\n\nGet the parametrization of the NURBS curve.\n\nThe parameter is defined in the interval [0, 1] by default. Information\nis provided about the parameter type and form.\n\nReturns\n\nParameterization\n\nInformation about how the NURBS curve is parameterized.\n\n\n\nNURBSCurve.transformed_copy(matrix: ansys.geometry.core.math.Matrix44) -> NURBSCurve\n\nCreate a transformed copy of the curve.\n\nParameters\n\nmatrix\n\nMatrix44\n\nTransformation matrix.\n\nReturns\n\nNURBSCurve\n\nTransformed copy of the curve.\n\n\n\nNURBSCurve.evaluate(parameter: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nEvaluate the curve at the given parameter.\n\nParameters\n\nparameter\n\nReal\n\nParameter to evaluate the curve at.\n\nReturns\n\nCurveEvaluation\n\nEvaluation of the curve at the given parameter.\n\n\n\nabstractmethod NURBSCurve.contains_param(param: ansys.geometry.core.typing.Real) -> bool\n\nCheck a parameter is within the parametric range of the curve.\n\n\n\nabstractmethod NURBSCurve.contains_point(point: ansys.geometry.core.math.Point3D) -> bool\n\nCheck a point is contained by the curve.\n\nThe point can either lie within the curve or on its boundary.\n\n\n\nNURBSCurve.project_point(point: ansys.geometry.core.math.Point3D, initial_guess: ansys.geometry.core.typing.Real | None = None) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nProject a point to the NURBS curve.\n\nThis method returns the evaluation at the closest point.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project to the curve.\n\ninitial_guess\n\nReal, optional\n\nInitial guess for the optimization algorithm. If not provided, the midpoint\nof the domain is used.\n\nReturns\n\nCurveEvaluation\n\nEvaluation at the closest point on the curve.\n\nNotes\n\nBased on the NURBS book,\nthe projection of a point to a NURBS curve is the solution to the following optimization\nproblem: minimize the distance between the point and the curve. The distance is defined\nas the Euclidean distance squared. For more information, please refer to\nthe implementation of the distance_squared function."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/SketchEllipse.html#sketchellipse","title":"SketchEllipse","text":"SketchEllipse\n\n\n\nclass ansys.geometry.core.sketch.ellipse.SketchEllipse(center: ansys.geometry.core.math.point.Point2D, major_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, minor_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0, plane: ansys.geometry.core.math.plane.Plane = Plane())\n\nBases: ansys.geometry.core.sketch.face.SketchFace, ansys.geometry.core.shapes.curves.ellipse.Ellipse\n\nProvides for modeling an ellipse.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the ellipse.\n\nmajor_radius\n\nQuantity | Distance | Real\n\nMajor radius of the ellipse.\n\nminor_radius\n\nQuantity | Distance | Real\n\nMinor radius of the ellipse.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment.\n\nplane\n\nPlane, optional\n\nPlane containing the sketched ellipse, which is the global XY plane\nby default."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/SketchEllipse.html#overview","title":"SketchEllipse > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nplane_change\n\nRedefine the plane containing SketchEllipse objects.\n\nProperties\n\n\n\n\n\ncenter\n\nCenter point of the ellipse.\n\nangle\n\nOrientation angle of the ellipse.\n\nperimeter\n\nPerimeter of the circle.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/SketchEllipse.html#import-detail","title":"SketchEllipse > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/SketchEllipse.html#property-detail","title":"SketchEllipse > Property detail","text":"Property detail\n\n\n\nproperty SketchEllipse.center: ansys.geometry.core.math.point.Point2D\n\nCenter point of the ellipse.\n\n\n\nproperty SketchEllipse.angle: pint.Quantity\n\nOrientation angle of the ellipse.\n\n\n\nproperty SketchEllipse.perimeter: pint.Quantity\n\nPerimeter of the circle.\n\nNotes\n\nThis property resolves the dilemma between using the SkethFace.perimeter\nproperty and the Ellipse.perimeter property.\n\n\n\nproperty SketchEllipse.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/ellipse/SketchEllipse.html#method-detail","title":"SketchEllipse > Method detail","text":"Method detail\n\n\n\nSketchEllipse.plane_change(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nRedefine the plane containing SketchEllipse objects.\n\nParameters\n\nplane\n\nPlane\n\nDesired new plane that is to contain the sketched ellipse.\n\nNotes\n\nThis implies that their 3D definition might suffer changes."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/index.html#the-measurement_toolspy-module","title":"The measurement_tools.py module","text":"The measurement_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/index.html#summary","title":"The measurement_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMeasurementToolsServiceV0\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/index.html#description","title":"The measurement_tools.py module > Description","text":"Description\n\nModule containing the measurement tools service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/Beam.html#beam","title":"Beam","text":"Beam\n\n\n\nclass ansys.geometry.core.designer.beam.Beam(id: str, start: ansys.geometry.core.math.point.Point3D, end: ansys.geometry.core.math.point.Point3D, profile: BeamProfile | None, parent_component: ansys.geometry.core.designer.component.Component, name: str = None, is_deleted: bool = False, is_reversed: bool = False, is_rigid: bool = False, material: ansys.geometry.core.materials.material.Material = None, cross_section: BeamCrossSectionInfo = None, properties: BeamProperties = None, shape: ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve = None, beam_type: BeamType = None)\n\nRepresents a simplified solid body with an assigned 2D cross-section.\n\nThis body synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the body.\n\nname\n\npython:str\n\nUser-defined label for the body.\n\nstart\n\nPoint3D\n\nStart of the beam line segment.\n\nend\n\nPoint3D\n\nEnd of the beam line segment.\n\nprofile\n\nBeamProfile\n\nBeam profile to use to create the beam.\n\nparent_component\n\nComponent\n\nParent component to nest the new beam under within the design assembly."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/Beam.html#overview","title":"Beam > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nService-defined ID of the beam.\n\nstart\n\nStart of the beam line segment.\n\nend\n\nEnd of the beam line segment.\n\nprofile\n\nBeam profile of the beam line segment.\n\nparent_component\n\nComponent node that the beam is under.\n\nis_alive\n\nFlag indicating whether the beam is still alive on the server.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the beam as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/Beam.html#import-detail","title":"Beam > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/Beam.html#property-detail","title":"Beam > Property detail","text":"Property detail\n\n\n\nproperty Beam.id: str\n\nService-defined ID of the beam.\n\n\n\nproperty Beam.start: ansys.geometry.core.math.point.Point3D\n\nStart of the beam line segment.\n\n\n\nproperty Beam.end: ansys.geometry.core.math.point.Point3D\n\nEnd of the beam line segment.\n\n\n\nproperty Beam.profile: BeamProfile\n\nBeam profile of the beam line segment.\n\n\n\nproperty Beam.parent_component: ansys.geometry.core.designer.component.Component\n\nComponent node that the beam is under.\n\n\n\nproperty Beam.is_alive: bool\n\nFlag indicating whether the beam is still alive on the server."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/Beam.html#method-detail","title":"Beam > Method detail","text":"Method detail\n\n\n\nBeam.__repr__() -> str\n\nRepresent the beam as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/index.html#the-designpy-module","title":"The design.py module","text":"The design.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/index.html#summary","title":"The design.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDesign\n\nProvides for organizing geometry assemblies.\n\nEnums\n\n\n\n\n\nDesignFileFormat\n\nProvides supported file formats that can be downloaded for designs.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/index.html#description","title":"The design.py module > Description","text":"Description\n\nProvides for managing designs."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/index.html#the-patternspy-module","title":"The patterns.py module","text":"The patterns.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/index.html#summary","title":"The patterns.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPatternsService\n\nPatterns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/patterns/index.html#description","title":"The patterns.py module > Description","text":"Description\n\nModule containing the patterns service implementation (abstraction layer)."},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#modeling-visualization-of-the-design-tree-on-terminal","title":"Examples > Modeling: Visualization of the design tree on terminal","text":"Modeling: Visualization of the design tree on terminal\n\nA user can visualize its model object tree easily by using the tree_print() method available on the Design and Component objects. This method prints the tree structure of the model in the terminal."},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#perform-required-imports","title":"Examples > Modeling: Visualization of the design tree on terminal > Perform required imports","text":"Perform required imports\n\nFor the following example, you need to import these modules:\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#create-a-design","title":"Examples > Modeling: Visualization of the design tree on terminal > Create a design","text":"Create a design\n\nThe following code creates a simple design for demonstration purposes. The design consists of several cylinders extruded. The interesting part is visualizing the corresponding design tree.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#visualize-the-design-tree","title":"Examples > Modeling: Visualization of the design tree on terminal > Visualize the design tree","text":"Visualize the design tree\n\nNow, let’s visualize the design tree using the tree_print() method. Let’s start by printing the tree structure of the design object with no extra arguments.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#controlling-the-depth-of-the-tree","title":"Examples > Modeling: Visualization of the design tree on terminal > Controlling the depth of the tree","text":"Controlling the depth of the tree\n\nThe tree_print() method accepts an optional argument depth to control the depth of the tree to be printed. The default value is None, which means the entire tree is printed.\n\n\n\n\n\n\n\n\n\nIn this case, only the first level of the tree is printed - that is, the three main components."},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#excluding-bodies-components-or-beams","title":"Examples > Modeling: Visualization of the design tree on terminal > Excluding bodies, components, or beams","text":"Excluding bodies, components, or beams\n\nBy default, the tree_print() method prints all the bodies, components, and beams in the design tree. However, you can exclude any of these by setting the corresponding argument to False.\n\n\n\n\n\n\n\n\n\nIn this case, the bodies and beams are not be printed in the tree structure.\n\n\n\n\n\n\n\n\n\nIn this case, the components are not be printed in the tree structure - leaving only the design object represented."},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#sorting-the-tree","title":"Examples > Modeling: Visualization of the design tree on terminal > Sorting the tree","text":"Sorting the tree\n\nBy default, the tree structure is sorted by the way the components, bodies, and beams were created. However, you can sort the tree structure by setting the sort_keys argument to True. In that case, the tree is sorted alphabetically.\n\nLet’s add a new component to the design and print the tree structure by default.\n\n\n\n\n\n\n\n\n\nNow, let’s print the tree structure with the components sorted alphabetically.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#indenting-the-tree","title":"Examples > Modeling: Visualization of the design tree on terminal > Indenting the tree","text":"Indenting the tree\n\nBy default, the tree structure is printed with an indentation level of 4. However, you can indent the tree structure by setting the indent argument to the desired value.\n\n\n\n\n\n\n\n\n\nIn this case, the tree structure is printed with an indentation level of 8."},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#printing-the-tree-from-a-specific-component","title":"Examples > Modeling: Visualization of the design tree on terminal > Printing the tree from a specific component","text":"Printing the tree from a specific component\n\nYou can print the tree structure from a specific component by calling the tree_print() method on the component object.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_tree.html#closing-the-modeler","title":"Examples > Modeling: Visualization of the design tree on terminal > Closing the modeler","text":"Closing the modeler\n\nFinally, close the modeler.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/index.html#the-patternspy-module","title":"The patterns.py module","text":"The patterns.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/index.html#summary","title":"The patterns.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPatternsServiceV1\n\nPatterns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/patterns/index.html#description","title":"The patterns.py module > Description","text":"Description\n\nModule containing the patterns service implementation for v1."},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#modeling-using-design-parameters","title":"Examples > Modeling: Using design parameters","text":"Modeling: Using design parameters\n\nYou can read and update parameters that are part of the design. The simple design in this example has two associated parameters."},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#perform-required-imports","title":"Examples > Modeling: Using design parameters > Perform required imports","text":"Perform required imports\n\n\n\n\n\nThe file for this example is in the integration tests folder and can be downloaded."},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#download-the-example-file","title":"Examples > Modeling: Using design parameters > Download the example file","text":"Download the example file\n\nDownload the file for this example from the integration tests folder in the PyAnsys Geometry repository.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#import-a-design-with-parameters","title":"Examples > Modeling: Using design parameters > Import a design with parameters","text":"Import a design with parameters\n\nImport the model using the open_file() method of the modeler.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#read-existing-parameters-of-the-design","title":"Examples > Modeling: Using design parameters > Read existing parameters of the design","text":"Read existing parameters of the design\n\nYou can get all the parameters of the design as a list of parameters. Because this example has two parameters, you see two items in the list.\n\n\n\n\n\n\n\n\n\nA parameter object has a name, value, and unit.\n\n\n\n\n\n\n\n\n\nParameter values are returned in the default unit for each dimension type. Since default length unit is meter and default area unit is meter square, the value is returned in square meters."},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#edit-a-parameter-value","title":"Examples > Modeling: Using design parameters > Edit a parameter value","text":"Edit a parameter value\n\nYou can edit the parameter’s name or value by simply setting these fields. Set the second parameter (p2 value to 350 mm).\n\n\n\n\n\n\n\n\n\nAfter a successful parameter update, the design is updated. If we request the design plot again, we see the updated design.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set_parameter() method returns a Success status message if the parameter is updated or a “FAILURE” status message if the update fails. If the p2 parameter depends on the p1 parameter, updating the p1 parameter might also change the p2 parameter. In such cases, the method returns CONSTRAINED_PARAMETERS, which indicates other parameters were also updated.\n\n\n\n\n\n\n\n\n\nTo get the updated list, query the parameters once again.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/design_parameters.html#close-the-modeler","title":"Examples > Modeling: Using design parameters > Close the modeler","text":"Close the modeler\n\nClose the modeler to free up resources and release the connection.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/index.html#the-componentpy-module","title":"The component.py module","text":"The component.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/index.html#summary","title":"The component.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSweepWithGuideData\n\nData class for sweep with guide parameters.\n\nComponent\n\nProvides for creating and managing a component.\n\nEnums\n\n\n\n\n\nSharedTopologyType\n\nShared topologies available.\n\nExtrusionDirection\n\nEnum for extrusion direction definition.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/index.html#description","title":"The component.py module > Description","text":"Description\n\nProvides for managing components."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector2D.html#unitvector2d","title":"UnitVector2D","text":"UnitVector2D\n\n\n\nclass ansys.geometry.core.math.vector.UnitVector2D(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: Vector2D\n\nProvides for creating and managing a 3D unit vector.\n\nParameters\n\ninput\n\nndarray | RealSequence | Vector2D\n\n1D numpy.ndarray class with shape(X,)\n\nVector2D"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector2D.html#overview","title":"UnitVector2D > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_points\n\nCreate a 2D unit vector from two distinct 2D points."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector2D.html#import-detail","title":"UnitVector2D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector2D.html#method-detail","title":"UnitVector2D > Method detail","text":"Method detail\n\n\n\nclassmethod UnitVector2D.from_points(point_a: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point2D, point_b: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point2D)\n\nCreate a 2D unit vector from two distinct 2D points.\n\nParameters\n\npoint_a\n\nndarray | RealSequence | Point2D\n\nPoint2D\nclass representing the first point.\n\npoint_b\n\nndarray | RealSequence | Point2D\n\nPoint2D\nclass representing the second point.\n\nReturns\n\nUnitVector2D\n\n2D unit vector from point_a to point_b."},{"objectID":"Home","href":"user_guide/shapes.html#sketch","title":"Sketch","text":"Sketch\n\nThe PyAnsys Geometry sketch subpackage is used to build\n2D basic shapes. Shapes consist of two fundamental constructs:\n\nEdge: A connection between two or more 2D points along a particular path. An edge represents an open shape\nsuch as an arc or line.\n\nFace: A set of edges that enclose a surface. A face represents a closed shape such as a circle or triangle.\n\nTo initialize a sketch, you first specify the Plane() class, which\nrepresents the plane in space from which other PyAnsys Geometry objects can be located.\n\nThis code shows how to initialize a sketch:\n\nYou then construct a sketch, which can be done using different approaches."},{"objectID":"Home","href":"user_guide/shapes.html#functional-style-api","title":"Sketch > Functional-style API","text":"Functional-style API\n\nA functional-style API is sometimes called a fluent functional-style api or fluent API in the developer community.\nHowever, to avoid confusion with the Ansys Fluent product, the PyAnsys Geometry documentation refrains from using the latter terms.\n\nOne of the key features of a functional-style API is that it keeps an active context based on the previously created\nedges to use as a reference starting point for additional objects.\n\nThe following code creates a sketch with its origin as a starting point. Subsequent calls create segments,\nwhich take as a starting point the last point of the previous edge.\n\nA functional-style API is also able to get a desired shape of the sketch object by taking advantage\nof user-defined labels:\n\n"},{"objectID":"Home","href":"user_guide/shapes.html#direct-api","title":"Sketch > Direct API","text":"Direct API\n\nA direct API is sometimes called an element-based approach in the developer community.\n\nThis code shows how you can use a direct API to create multiple elements independently\nand combine them all together in a single plane:\n\n\n\nFor more information on sketch shapes, see the Sketch()\nsubpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/OrientCondition.html#orientcondition","title":"OrientCondition","text":"OrientCondition\n\n\n\nclass ansys.geometry.core.designer.mating_conditions.OrientCondition\n\nBases: MatingCondition\n\nOrientCondition dataclass."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/OrientCondition.html#overview","title":"OrientCondition > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\noffset\n\n\n\nis_reversed\n\n\n\nis_valid\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/OrientCondition.html#import-detail","title":"OrientCondition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/OrientCondition.html#attribute-detail","title":"OrientCondition > Attribute detail","text":"Attribute detail\n\n\n\nOrientCondition.offset: float\n\n\n\n\n\nOrientCondition.is_reversed: bool\n\n\n\n\n\nOrientCondition.is_valid: bool\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/Part.html#part","title":"Part","text":"Part\n\n\n\nclass ansys.geometry.core.designer.part.Part(id: str, name: str, components: list[MasterComponent], bodies: list[ansys.geometry.core.designer.body.MasterBody])\n\nRepresents a part master.\n\nThis class should not be accessed by users. The Part class holds fundamental\ndata of an assembly.\n\nParameters\n\nid\n\npython:str\n\nUnique identifier for the part.\n\nname\n\npython:str\n\nName of the part.\n\ncomponents\n\npython:list[MasterComponent]\n\nlist of MasterComponent children that the part contains.\n\nbodies\n\npython:list[MasterBody]\n\nlist of MasterBody children that the part contains. These are master bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/Part.html#overview","title":"Part > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the part.\n\nname\n\nName of the part.\n\ncomponents\n\nMasterComponent children that the part contains.\n\nbodies\n\nMasterBody children that the part contains.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the part as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/Part.html#import-detail","title":"Part > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/Part.html#property-detail","title":"Part > Property detail","text":"Property detail\n\n\n\nproperty Part.id: str\n\nID of the part.\n\n\n\nproperty Part.name: str\n\nName of the part.\n\n\n\nproperty Part.components: list[MasterComponent]\n\nMasterComponent children that the part contains.\n\n\n\nproperty Part.bodies: list[ansys.geometry.core.designer.body.MasterBody]\n\nMasterBody children that the part contains.\n\nThese are master bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/part/Part.html#method-detail","title":"Part > Method detail","text":"Method detail\n\n\n\nPart.__repr__() -> str\n\nRepresent the part as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/index.html#the-curves-package","title":"The curves package","text":"The curves package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/index.html#summary","title":"The curves package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ncircle\n\nProvides for creating and managing a circle.\n\ncurve\n\nProvides the Curve class.\n\ncurve_evaluation\n\nProvides for creating and managing a curve.\n\nellipse\n\nProvides for creating and managing an ellipse.\n\nline\n\nProvides for creating and managing a line.\n\nnurbs\n\nProvides for creating and managing a NURBS curve.\n\ntrimmed_curve\n\nTrimmed curve class.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/index.html#description","title":"The curves package > Description","text":"Description\n\nProvides the PyAnsys Geometry curves subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/GRPCCurvesServiceV0.html#grpccurvesservicev0","title":"GRPCCurvesServiceV0","text":"GRPCCurvesServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.curves.GRPCCurvesServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.curves.GRPCCurvesService\n\nCurves service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\ncurves service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/GRPCCurvesServiceV0.html#overview","title":"GRPCCurvesServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nrevolve_edges\n\nRevolve edges around an axis to create a surface of revolution.\n\nintersect_curves\n\nGet intersection points of curves.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/GRPCCurvesServiceV0.html#import-detail","title":"GRPCCurvesServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/GRPCCurvesServiceV0.html#attribute-detail","title":"GRPCCurvesServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCurvesServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/curves/GRPCCurvesServiceV0.html#method-detail","title":"GRPCCurvesServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCCurvesServiceV0.revolve_edges(**kwargs) -> dict\n\nRevolve edges around an axis to create a surface of revolution.\n\n\n\nGRPCCurvesServiceV0.intersect_curves(**kwargs) -> dict\n\nGet intersection points of curves."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/index.html#the-assembly_controlspy-module","title":"The assembly_controls.py module","text":"The assembly_controls.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/index.html#summary","title":"The assembly_controls.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAssemblyControlsServiceV1\n\nAssembly controls service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/assembly_controls/index.html#description","title":"The assembly_controls.py module > Description","text":"Description\n\nModule containing the assembly controls service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Distance.html#distance","title":"Distance","text":"Distance\n\n\n\nclass ansys.geometry.core.misc.measurements.Distance(value: ansys.geometry.core.typing.Real | pint.Quantity, unit: pint.Unit | None = None)\n\nBases: Measurement\n\nProvides the Measurement subclass for holding a distance.\n\nParameters\n\nvalue\n\nReal | Quantity\n\nValue of the distance.\n\nunit\n\nUnit, default: DEFAULT_UNITS.LENGTH\n\nUnits for the distance."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Distance.html#import-detail","title":"Distance > Import detail","text":"Import detail"},{"objectID":"Assets","href":"assets.html#assets","title":"Assets","text":"Assets\n\nIn this section, users are able to download a set of assets related to PyAnsys Geometry."},{"objectID":"Assets","href":"assets.html#documentation","title":"Assets > Documentation","text":"Documentation\n\nThe following links provide users with downloadable documentation in various formats\n\nDocumentation in HTML format\n\nDocumentation in PDF format"},{"objectID":"Assets","href":"assets.html#wheelhouse","title":"Assets > Wheelhouse","text":"Wheelhouse\n\nIf you lack an internet connection on your installation machine, you should install PyAnsys Geometry\nby downloading the wheelhouse archive.\n\nEach wheelhouse archive contains all the Python wheels necessary to install PyAnsys Geometry from scratch on Windows,\nLinux, and MacOS from Python 3.10 to 3.13. You can install this on an isolated system with a fresh Python\ninstallation or on a virtual environment.\n\nFor example, on Linux with Python 3.10, unzip the wheelhouse archive and install it with:\n\nIf you are on Windows with Python 3.10, unzip to a wheelhouse directory by running -d wheelhouse\n(this is required for unzipping to a directory on Windows) and install using the preceding command.\n\nConsider installing using a virtual environment.\n\nThe following wheelhouse files are available for download:"},{"objectID":"Assets","href":"assets.html#linux","title":"Assets > Linux","text":"Linux\n\nLinux wheelhouse for Python 3.10\n\nLinux wheelhouse for Python 3.11\n\nLinux wheelhouse for Python 3.12\n\nLinux wheelhouse for Python 3.13"},{"objectID":"Assets","href":"assets.html#windows","title":"Assets > Windows","text":"Windows\n\nWindows wheelhouse for Python 3.10\n\nWindows wheelhouse for Python 3.11\n\nWindows wheelhouse for Python 3.12\n\nWindows wheelhouse for Python 3.13"},{"objectID":"Assets","href":"assets.html#macos","title":"Assets > MacOS","text":"MacOS\n\nMacOS wheelhouse for Python 3.10\n\nMacOS wheelhouse for Python 3.11\n\nMacOS wheelhouse for Python 3.12\n\nMacOS wheelhouse for Python 3.13"},{"objectID":"Assets","href":"assets.html#geometry-service-docker-container-assets","title":"Assets > Geometry service Docker container assets","text":"Geometry service Docker container assets\n\nBuild the latest Geometry service Docker container using the following assets. For\ninformation on how to build the container, see Docker containers.\n\nCurrently, the Geometry service backend is mainly delivered as a Windows Docker container.\nHowever, these containers require a Windows machine to run them."},{"objectID":"Assets","href":"assets.html#windows-container","title":"Assets > Windows container","text":"Windows container\n\nOnly Ansys employees with access to\nhttps://github.com/ansys/pyansys-geometry-binaries can download these binaries.\n\nLatest Geometry service binaries for Windows containers\n\nLatest Geometry service Dockerfile for Windows containers"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/ExtrusionDirection.html#extrusiondirection","title":"ExtrusionDirection","text":"ExtrusionDirection\n\n\n\nclass ansys.geometry.core.designer.component.ExtrusionDirection(*args, **kwds)\n\nBases: enum.Enum\n\nEnum for extrusion direction definition."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/ExtrusionDirection.html#overview","title":"ExtrusionDirection > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_string\n\nConvert a string to an ExtrusionDirection enum.\n\nMethods\n\n\n\n\n\nget_multiplier\n\nGet the multiplier for the extrusion direction.\n\nAttributes\n\n\n\n\n\nPOSITIVE\n\n\n\nNEGATIVE\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/ExtrusionDirection.html#import-detail","title":"ExtrusionDirection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/ExtrusionDirection.html#attribute-detail","title":"ExtrusionDirection > Attribute detail","text":"Attribute detail\n\n\n\nExtrusionDirection.POSITIVE = '+'\n\n\n\n\n\nExtrusionDirection.NEGATIVE = '-'\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/component/ExtrusionDirection.html#method-detail","title":"ExtrusionDirection > Method detail","text":"Method detail\n\n\n\nclassmethod ExtrusionDirection.from_string(string: str, use_default_if_error: bool = False) -> ExtrusionDirection\n\nConvert a string to an ExtrusionDirection enum.\n\n\n\nExtrusionDirection.get_multiplier() -> int\n\nGet the multiplier for the extrusion direction.\n\nReturns\n\npython:int\n\n1 if the direction is positive, -1 if negative."},{"objectID":"Release notes","href":"changelog.html#release-notes","title":"Release notes","text":"Release notes\n\nThis document contains the release notes for the PyAnsys Geometry project."},{"objectID":"Release notes","href":"changelog.html#0121---october-21-2025","title":"Release notes > 0.12.1 - October 21, 2025","text":"0.12.1 - October 21, 2025\n\nFixed\n\n\n\n\n\nDecorator order issue\n\n#2337"},{"objectID":"Release notes","href":"changelog.html#0120---october-20-2025","title":"Release notes > 0.12.0 - October 20, 2025","text":"0.12.0 - October 20, 2025\n\nAdded\n\n\n\n\n\nTracking boolean operations\n\n#2153\n\nHelix detection\n\n#2232\n\nMove geometry commands to versioned architecture\n\n#2234\n\nPull commands pt. 1\n\n#2241\n\nLoft profiles with guides\n\n#2252\n\nCheck for match\n\n#2255\n\nGrpc rearchitecutre - components model\n\n#2263\n\nCleaning up usage of unsupported stub\n\n#2267\n\nNURBS surface body creation\n\n#2273\n\nCombine and merge bodies\n\n#2282\n\nTessellation speed enhancements\n\n#2294\n\nImplement version based import\n\n#2307\n\nReturn backend info on repr for client and modeler\n\n#2311\n\nFinalize version handling for design class\n\n#2323\n\nEdge tessellations, stream full design tessellation\n\n#2328\n\nDependencies\n\n\n\n\n\nBump ansys-api-geometry from 0.4.74 to 0.4.75\n\n#2236\n\nBump quarto-cli from 1.7.34 to 1.8.24\n\n#2242\n\nBump panel from 1.8.0 to 1.8.1\n\n#2243\n\nBump vtk from 9.5.1 to 9.5.2\n\n#2245\n\nBump ansys-api-geometry from 0.4.75 to 0.4.76\n\n#2246\n\nBump ansys-api-geometry from 0.4.76 to 0.4.77\n\n#2253\n\nUpgrade grpcio and protobuf\n\n#2258\n\nBump notebook from 7.4.5 to 7.4.6 in the docs-deps group\n\n#2268\n\nBump pyyaml from 6.0.2 to 6.0.3\n\n#2271\n\nBump notebook from 7.4.6 to 7.4.7 in the docs-deps group\n\n#2275\n\nBump quarto-cli from 1.8.24 to 1.8.25\n\n#2281\n\nBump-ansys-tools-viz-interface\n\n#2283\n\nBump ansys-api-geometry from 0.4.78 to 0.4.80\n\n#2290\n\nBump pytest-cov from 6.3.0 to 7.0.0\n\n#2299\n\nBump panel from 1.8.1 to 1.8.2\n\n#2304\n\nBump trame-vtk from 2.9.1 to 2.10.0\n\n#2305\n\nBump ansys-sphinx-theme\n\n#2308\n\nBump beartype from 0.21.0 to 0.22.2\n\n#2314\n\nBump matplotlib from 3.10.6 to 3.10.7\n\n#2315\n\nBump scipy (1.16.2) and numpy (2.3.3)\n\n#2318\n\nBump pytest-pyvista from 0.2.0 to 0.3.1\n\n#2322\n\nBump ansys-api-geometry from 0.4.81 to 0.4.82\n\n#2327\n\nFixed\n\n\n\n\n\nRevert skipped test for test_plot_design_face_colors\n\n#2266\n\nCard message on failure\n\n#2274\n\nEmpty tessellation data conversion\n\n#2284\n\nTurn off knot normalization to match SC\n\n#2300\n\nBool command implementation\n\n#2303\n\nFix copy with occurrence\n\n#2320\n\nRe enable logs testing\n\n#2321\n\nDisable broken design tessellation test\n\n#2324\n\nMaintenance\n\n\n\n\n\nUpdate CHANGELOG for v0.11.3\n\n#2235\n\nBump ansys/actions from 10.1.0 to 10.1.1 in the actions group\n\n#2237\n\nPre-commit automatic update\n\n#2247, #2269, #2285, #2319\n\nAdapt docker run commands\n\n#2249\n\nBump ansys/actions from 10.1.1 to 10.1.2 in the actions group\n\n#2250\n\nBump actions/cache from 4.2.4 to 4.3.0 in the actions group\n\n#2254\n\nBackwards compatibility changes on Docker images\n\n#2256\n\nBump github/codeql-action from 3.30.3 to 3.30.4 in the actions group\n\n#2259\n\nBump the actions group with 3 updates\n\n#2270, #2280\n\nCleanup miscellaneous grpc refactors\n\n#2272\n\nZizmor fixes\n\n#2277\n\nBump ansys/actions from 10.1.3 to 10.1.4 in the actions group\n\n#2278\n\nRemove tracker testing\n\n#2279\n\nRun on GitHub runners directly\n\n#2286\n\nRemoving commands stub from body module\n\n#2288\n\nBump github/codeql-action from 3.30.6 to 4.30.7 in the actions group\n\n#2291\n\nPrevent invalid kwargs from being passed to launcher methods\n\n#2293\n\nRemove grpc ids\n\n#2295\n\nUpdate dependabot configuration\n\n#2297\n\nDependabot cooldown on github-actions is not supported\n\n#2298\n\nAdd write permissions to doc deploy jobs\n\n#2302\n\nBump github/codeql-action from 4.30.7 to 4.30.8 in the actions group\n\n#2306\n\nSkip flaky test with retrieval of service logs\n\n#2309\n\nAdding YAML and TOML formatting hooks\n\n#2312\n\nUsing group dependencies\n\n#2316\n\nCleanup usage of EntityIdentifier\n\n#2317\n\nBump github/codeql-action from 4.30.8 to 4.30.9 in the actions group\n\n#2329\n\nVersioning fixes\n\n#2330\n\nTest\n\n\n\n\n\nVerifying issue 2251 - double import and export to stride fails\n\n#2257\n\nAdding test coverage for nurbs, design, and geometry commands\n\n#2260\n\nSkip new failures from nuget updated\n\n#2262\n\nAdding lines to coverage code implemented for nurbs surface creation\n\n#2301"},{"objectID":"Release notes","href":"changelog.html#0113---september-17-2025","title":"Release notes > 0.11.3 - September 17, 2025","text":"0.11.3 - September 17, 2025\n\nAdded\n\n\n\n\n\nMove_imprint_edges, offset_edges, draft_faces, thicken_faces implementations\n\n#2214\n\nNURBS surface implementation\n\n#2222\n\nFor 261 dotnet 8 is included in core service\n\n#2226\n\nDependencies\n\n\n\n\n\nBump pyvista[jupyter] from 0.46.2 to 0.46.3\n\n#2203\n\nBump jupytext from 1.17.2 to 1.17.3 in the docs-deps group\n\n#2206\n\nBump vtk from 9.5.0 to 9.5.1\n\n#2208\n\nBump quarto-cli from 1.7.33 to 1.7.34\n\n#2209\n\nBump matplotlib from 3.10.5 to 3.10.6\n\n#2211\n\nBump ansys-sphinx-theme[autoapi] from 1.5.3 to 1.6.0 in the docs-deps group\n\n#2213\n\nBump pytest from 8.4.1 to 8.4.2\n\n#2218\n\nBump pytest-cov from 6.2.1 to 6.3.0\n\n#2227\n\nBump ansys-sphinx-theme[autoapi] from 1.6.0 to 1.6.1 in the docs-deps group\n\n#2228\n\nBump panel from 1.7.5 to 1.8.0\n\n#2233\n\nDocumentation\n\n\n\n\n\nUpdate html_context with PyAnsys tags\n\n#2200\n\nFixed\n\n\n\n\n\nAdd skip_if_discovery method\n\n#2202\n\nMaintenance\n\n\n\n\n\nRe-enable 25.1 testing\n\n#2185\n\nUpdate CHANGELOG for v0.11.2\n\n#2197\n\nPre-commit automatic update\n\n#2205, #2219, #2230\n\nBump the actions group with 2 updates\n\n#2207\n\nBump ansys/actions from 10.0.15 to 10.0.16 in the actions group\n\n#2212\n\nBump the actions group with 4 updates\n\n#2215\n\nBump the actions group with 3 updates\n\n#2216\n\nBump github/codeql-action from 3.30.1 to 3.30.2 in the actions group\n\n#2221\n\nBump github/codeql-action from 3.30.2 to 3.30.3 in the actions group\n\n#2225\n\nBump ansys/actions from 10.0.20 to 10.1.0 in the actions group\n\n#2229\n\nTest\n\n\n\n\n\nAdding test for vertex and tests based on spaceclaim tutorials\n\n#2157\n\nAdding test for nurbs sketching\n\n#2193\n\nNew test and remove skip\n\n#2199"},{"objectID":"Release notes","href":"changelog.html#0112---august-26-2025","title":"Release notes > 0.11.2 - August 26, 2025","text":"0.11.2 - August 26, 2025\n\nAdded\n\n\n\n\n\nOption to write body facets on save\n\n#2169\n\nBody sweep_with_guide\n\n#2179\n\nRemove materials\n\n#2180\n\nDependencies\n\n\n\n\n\nBump ansys-api-geometry from 0.4.71 to 0.4.72\n\n#2175\n\nBump pyvista[jupyter] from 0.46.0 to 0.46.1\n\n#2176\n\nBump ansys-api-geometry from 0.4.72 to 0.4.73\n\n#2177\n\nBump ansys-api-geometry from 0.4.73 to 0.4.74\n\n#2183\n\nBump requests from 2.32.4 to 2.32.5\n\n#2192\n\nBump pyvista[jupyter] from 0.46.1 to 0.46.2\n\n#2196\n\nFixed\n\n\n\n\n\nMake import component named selections optional\n\n#2144\n\nPrevent tool and command classes instantiation outside of modeler object\n\n#2188\n\nMathematical approximations leading to potential issues - allowing rounding\n\n#2190\n\nMaintenance\n\n\n\n\n\nUpdate CHANGELOG for v0.11.1\n\n#2173\n\nEnable timeout for pytest to prevent blockage\n\n#2174\n\nPre-commit automatic update\n\n#2181, #2195\n\nBump github/codeql-action from 3.29.9 to 3.29.10 in the actions group\n\n#2182\n\nBump codecov/codecov-action from 5.4.3 to 5.5.0 in the actions group\n\n#2186\n\nBump github/codeql-action from 3.29.10 to 3.29.11 in the actions group\n\n#2191"},{"objectID":"Release notes","href":"changelog.html#0111---august-13-2025","title":"Release notes > 0.11.1 - August 13, 2025","text":"0.11.1 - August 13, 2025\n\nAdded\n\n\n\n\n\nNurbs sketching and surface support\n\n#2104\n\nSurface body unit test fix\n\n#2118\n\nVerifying backwards compatibility\n\n#2124\n\nComponent operations - make_independent() and import_named_selections()\n\n#2129\n\nSet multiple export ids\n\n#2148\n\nDependencies\n\n\n\n\n\nBump vtk from 9.4.2 to 9.5.0\n\n#2082\n\nBump ansys-api-geometry from 0.4.65 to 0.4.66\n\n#2117\n\nBump ansys-api-geometry from 0.4.66 to 0.4.67\n\n#2123\n\nBump pyvista[jupyter] from 0.45.2 to 0.45.3\n\n#2126\n\nBump ansys-api-geometry from 0.4.67 to 0.4.68\n\n#2131\n\nBump trame-vtk from 2.9.0 to 2.9.1\n\n#2134\n\nBump panel from 1.7.4 to 1.7.5\n\n#2135\n\nBump pygltflib from 1.16.4 to 1.16.5\n\n#2139\n\nBump matplotlib from 3.10.3 to 3.10.5\n\n#2151\n\nBump ansys-api-geometry from 0.4.68 to 0.4.69\n\n#2154\n\nBump notebook from 7.4.4 to 7.4.5 in the docs-deps group\n\n#2160\n\nBump quarto-cli from 1.7.32 to 1.7.33\n\n#2165\n\nBump pyvista[jupyter] from 0.45.3 to 0.46.0\n\n#2171\n\nBump ansys-api-geometry from 0.4.69 to 0.4.71\n\n#2172\n\nFixed\n\n\n\n\n\nWorkflow 2b nurbs fixes\n\n#2137\n\nClarify logic in min distance grpc call\n\n#2166\n\nMaintenance\n\n\n\n\n\nUpdate changelog for v0.11.0\n\n#2116\n\nBump minor version in main\n\n#2119\n\nPre-commit automatic update\n\n#2125, #2140, #2150, #2163\n\nBump github/codeql-action from 3.29.2 to 3.29.3 in the actions group\n\n#2127\n\nBump github/codeql-action from 3.29.3 to 3.29.4 in the actions group\n\n#2130\n\nBump ansys/actions from 10.0.12 to 10.0.13 in the actions group\n\n#2133\n\nBump the actions group across 1 directory with 5 updates\n\n#2158\n\nBump the actions group with 2 updates\n\n#2164\n\nRemove temporarily 25.1 backwards compatibility checks\n\n#2168\n\nBump github/codeql-action from 3.29.8 to 3.29.9 in the actions group\n\n#2170\n\nTest\n\n\n\n\n\nAdding test coverage for modeler, plotting, logger, and parameters\n\n#2108\n\nInternalize external documents\n\n#2109\n\nAdd fixture for running with tracker\n\n#2120\n\nImport named selection tests\n\n#2138\n\nNurbs length test\n\n#2142\n\nTemp skip\n\n#2147\n\nSkip x_t reimport tests\n\n#2161"},{"objectID":"Release notes","href":"changelog.html#0110---july-15-2025","title":"Release notes > 0.11.0 - July 15, 2025","text":"0.11.0 - July 15, 2025\n\nAdded\n\n\n\n\n\nUpdate with delta\n\n#1922\n\nFind and fix stitch/missing/small faces enhancements\n\n#1953\n\nNurbs and trimmedcurve enhancements\n\n#1994\n\nAllow logos linux 26 1\n\n#2048\n\nNurbscurve conversions\n\n#2053\n\nAdd components to ns\n\n#2068\n\nAdd mating conditions (align, tangent, orient)\n\n#2069\n\nVertex references\n\n#2083\n\nDependencies\n\n\n\n\n\nBump jupytext from 1.17.1 to 1.17.2 in the docs-deps group\n\n#2024\n\nBump ansys-tools-visualization-interface from 0.9.1 to 0.9.2\n\n#2027\n\nBump trame-vtk from 2.8.15 to 2.8.17\n\n#2028\n\nBump pytest from 8.3.5 to 8.4.0\n\n#2034\n\nBump requests from 2.32.3 to 2.32.4\n\n#2040\n\nBump beartype from 0.20.2 to 0.21.0\n\n#2042\n\nBump panel from 1.6.1 to 1.7.1\n\n#2043\n\nBump ansys-tools-path from 0.7.1 to 0.7.2\n\n#2044\n\nBump quarto-cli from 1.7.31 to 1.7.32\n\n#2050\n\nBump ansys-tools-path from 0.7.2 to 0.7.3\n\n#2051\n\nBump pytest-cov from 6.1.1 to 6.2.1\n\n#2052\n\nLimiting ansys-tools-visualization-interface\n\n#2054\n\nBump pytest from 8.4.0 to 8.4.1\n\n#2065\n\nBump panel from 1.7.1 to 1.7.2\n\n#2077\n\nBump trame-vtk from 2.8.17 to 2.9.0\n\n#2078\n\nBump numpydoc from 1.8.0 to 1.9.0 in the docs-deps group\n\n#2080\n\nBump ansys-api-geometry from 0.4.62 to 0.4.64\n\n#2081\n\nBump ansys-api-geometry from 0.4.64 to 0.4.65\n\n#2085\n\nBump notebook from 7.4.3 to 7.4.4 in the docs-deps group\n\n#2086\n\nBump ansys-sphinx-theme[autoapi] from 1.5.2 to 1.5.3 in the docs-deps group\n\n#2089\n\nBump panel from 1.7.2 to 1.7.4\n\n#2112\n\nBump pytest-pyvista from 0.1.9 to 0.2.0\n\n#2113\n\nDocumentation\n\n\n\n\n\nAdding extra line\n\n#2026\n\nAdd proper disclaimer to binaries repository\n\n#2060\n\nAdd warning section for minimum version on methods\n\n#2062\n\nAdd deepwiki link\n\n#2073\n\nFixed\n\n\n\n\n\nMake sure export_glb is handling a single polydata object\n\n#2032\n\nPrevent the creation of empty named selections\n\n#2063\n\nRevert visualization changes\n\n#2084\n\nInternalize document after insert: update test\n\n#2092\n\nMaintenance\n\n\n\n\n\nUpdate changelog for v0.10.9\n\n#2023\n\nBump ansys/actions from 10.0.4 to 10.0.6 in the actions group\n\n#2025\n\nBump ansys/actions from 10.0.6 to 10.0.8 in the actions group\n\n#2029\n\nPre-commit automatic update\n\n#2033, #2066, #2076, #2090, #2111\n\nBump ansys/actions from 10.0.8 to 10.0.9 in the actions group\n\n#2035\n\nBump ansys/actions from 10.0.9 to 10.0.10 in the actions group\n\n#2038\n\nBump the actions group with 2 updates\n\n#2041\n\nUpload code coverage on linux\n\n#2049\n\nBump ansys/actions from 10.0.11 to 10.0.12 in the actions group\n\n#2071\n\nBump github/codeql-action from 3.29.0 to 3.29.1 in the actions group\n\n#2075\n\nBump github/codeql-action from 3.29.1 to 3.29.2 in the actions group\n\n#2079\n\nUsing proper artifactory location\n\n#2114\n\nTest\n\n\n\n\n\nExpand code coverage and fix a few things\n\n#2039\n\nAdd more tests and update some tests\n\n#2046\n\nExpanding test coverage for sketch\n\n#2047\n\nExpanding test coverage for designer and math\n\n#2061\n\nAdding test coverage for designer, sketch, misc\n\n#2070\n\nAdd more tests to expand coverage\n\n#2087\n\nAdd stride named selection import test\n\n#2088\n\nAdd more code coverage\n\n#2096\n\nLogo removal should work on linux now\n\n#2098\n\nExpand coverage and add bug fix test\n\n#2103\n\nBug fix test and round trip open file tests\n\n#2107"},{"objectID":"Release notes","href":"changelog.html#0109---june-05-2025","title":"Release notes > 0.10.9 - June 05, 2025","text":"0.10.9 - June 05, 2025\n\nDependencies\n\n\n\n\n\nbump ansys-sphinx-theme[autoapi] from 1.4.4 to 1.4.5 in the docs-deps group\n\n#2008\n\nbump ansys-sphinx-theme[autoapi] from 1.4.5 to 1.5.0 in the docs-deps group\n\n#2009\n\nbump notebook from 7.4.2 to 7.4.3 in the docs-deps group\n\n#2010\n\nbump geomdl from 5.3.1 to 5.4.0\n\n#2012\n\nbump ansys-sphinx-theme[autoapi] from 1.5.0 to 1.5.2 in the docs-deps group\n\n#2014\n\nFixed\n\n\n\n\n\nTypo in the open request construction\n\n#2022\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.8\n\n#2006\n\nbump ansys/actions from 9.0.12 to 9.0.13 in the actions group\n\n#2011\n\npre-commit automatic update\n\n#2015\n\nimproving CodeQL\n\n#2016\n\nfix labeler permissions\n\n#2017\n\nBump ansys/actions from 9.0.13 to 10.0.1 in the actions group\n\n#2018\n\nBump the actions group with 2 updates\n\n#2019, #2021\n\nTest\n\n\n\n\n\nUpdate Reader support info and add more import tests\n\n#2013"},{"objectID":"Release notes","href":"changelog.html#0108---may-27-2025","title":"Release notes > 0.10.8 - May 27, 2025","text":"0.10.8 - May 27, 2025\n\nAdded\n\n\n\n\n\nrepair tools refactoring\n\n#1912\n\nuse license metadata properly\n\n#1961\n\nadd 261 version api versions list\n\n#1980\n\ngrpc reachitecture - several modules\n\n#1988\n\ndeprecating product_version in favor of version\n\n#1998\n\nDependencies\n\n\n\n\n\nbump quarto-cli from 1.6.42 to 1.7.29\n\n#1962\n\nbump jupytext from 1.16.7 to 1.17.1 in the docs-deps group\n\n#1963\n\nbump ansys-sphinx-theme[autoapi] from 1.4.2 to 1.4.3 in the docs-deps group\n\n#1967\n\nbump ansys-api-geometry from 0.4.58 to 0.4.59\n\n#1968\n\nbump ansys-sphinx-theme[autoapi] from 1.4.3 to 1.4.4 in the docs-deps group\n\n#1969\n\nbump notebook from 7.4.1 to 7.4.2 in the docs-deps group\n\n#1971\n\nbump quarto-cli from 1.7.29 to 1.7.30\n\n#1972\n\nbump matplotlib from 3.10.1 to 3.10.3\n\n#1974\n\nbump pyvista[jupyter] from 0.45.0 to 0.45.1\n\n#1975\n\nbump scipy from 1.15.2 to 1.15.3\n\n#1976\n\nbump pyvista[jupyter] from 0.45.1 to 0.45.2\n\n#1981\n\nbump ansys-api-geometry from 0.4.59 to 0.4.60\n\n#1987\n\nbump quarto-cli from 1.7.30 to 1.7.31\n\n#1991\n\nbump ansys-api-geometry from 0.4.60 to 0.4.61\n\n#1992\n\nbump numpy from 2.2.5 to 2.2.6\n\n#1995\n\nbump ansys-api-geometry from 0.4.61 to 0.4.62\n\n#2003\n\nDocumentation\n\n\n\n\n\nchange python3statement url\n\n#1965\n\nFixed\n\n\n\n\n\nmyst warning – all cells must be of same type\n\n#1970\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.7\n\n#1959\n\npre-commit automatic update\n\n#1964, #1978, #1993, #2004\n\nbump ansys/actions from 9.0.7 to 9.0.8 in the actions group\n\n#1966\n\nbump ansys/actions from 9.0.8 to 9.0.9 in the actions group\n\n#1973\n\nbump ansys/actions from 9.0.9 to 9.0.19 in the actions group\n\n#1979\n\nbump ansys/actions from 9.0.19 to 9.0.20 in the actions group\n\n#1982\n\nbump ansys/actions from 9.0.20 to 9.0.21 in the actions group\n\n#1983\n\nbump ansys/actions from 9.0.21 to 9.0.22 in the actions group\n\n#1984\n\nrevert ansys/actions release\n\n#1985\n\nbump the actions group with 2 updates\n\n#1990\n\nbump ansys/actions from 9.0.9 to 9.0.11 in the actions group\n\n#1996\n\nfix the usage of unstable container skip\n\n#2001\n\nbump ansys/actions from 369ef11a9888875682d1a6b0ec65f82c4d8a664d to 5dc39c7838f50142138f7ac518ff3e4dca065d97 in the actions group\n\n#2002"},{"objectID":"Release notes","href":"changelog.html#0107---may-05-2025","title":"Release notes > 0.10.7 - May 05, 2025","text":"0.10.7 - May 05, 2025\n\nAdded\n\n\n\n\n\ngrpc driving dimensions stub implementation\n\n#1921\n\nmove coordinate systems stub to grpc layer\n\n#1943\n\nDependencies\n\n\n\n\n\nbump numpy from 2.2.4 to 2.2.5\n\n#1935\n\nbump pygltflib from 1.16.3 to 1.16.4\n\n#1940\n\nbump notebook from 7.3.3 to 7.4.1 in the docs-deps group\n\n#1946\n\nbump ansys-api-geometry from 0.4.57 to 0.4.58\n\n#1954\n\nDocumentation\n\n\n\n\n\nUpdate CONTRIBUTORS.md with the latest contributors\n\n#1938\n\nignore stackoverflow link\n\n#1957\n\nFixed\n\n\n\n\n\ncore service launcher missing CADIntegration bin folder in path\n\n#1958\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.6\n\n#1933\n\nuse v4 of pyvista/setup-headless-display-action\n\n#1934\n\nbump github/codeql-action from 3.28.15 to 3.28.16 in the actions group\n\n#1936\n\nbump the actions group with 2 updates\n\n#1937, #1942\n\npre-commit automatic update\n\n#1941\n\nbump github/codeql-action from 3.28.16 to 3.28.17 in the actions group\n\n#1956"},{"objectID":"Release notes","href":"changelog.html#0106---april-22-2025","title":"Release notes > 0.10.6 - April 22, 2025","text":"0.10.6 - April 22, 2025\n\nAdded\n\n\n\n\n\ngrpc prepare tools stub implementation\n\n#1914\n\nDependencies\n\n\n\n\n\nbump PyVista and VTK versions (support Python 3.13)\n\n#1924\n\nFixed\n\n\n\n\n\ndocstyle ordering\n\n#1925\n\nadapt Native folder path for Linux and Windows\n\n#1932\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.5\n\n#1919\n\nbump skitionek/notify-microsoft-teams to v1.0.9 in the actions group\n\n#1920\n\nbump ansys/actions from 9.0.2 to 9.0.3 in the actions group\n\n#1923\n\nfix issues with OSMesa installation and env variables set up\n\n#1927\n\nbump ansys/actions from 9.0.3 to 9.0.6 in the actions group\n\n#1928\n\npre-commit automatic update\n\n#1930\n\nfix unstable workflows for Linux (missing headless display)\n\n#1931"},{"objectID":"Release notes","href":"changelog.html#0105---april-16-2025","title":"Release notes > 0.10.5 - April 16, 2025","text":"0.10.5 - April 16, 2025\n\nAdded\n\n\n\n\n\ngrpc measurement tools stub implementation\n\n#1909\n\nDependencies\n\n\n\n\n\nbump ansys-api-geometry from 0.4.56 to 0.4.57\n\n#1906\n\nbump grpcio limits and handle erratic gRPC channel creation\n\n#1913\n\nDocumentation\n\n\n\n\n\nUpdate CONTRIBUTORS.md with the latest contributors\n\n#1907\n\nFixed\n\n\n\n\n\nis_suppressed is not available until 25R2\n\n#1916\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.4\n\n#1901\n\nmake doc releases dependent on GH and PyPI release\n\n#1902\n\nbump ansys/actions from 9.0.1 to 9.0.2 in the actions group\n\n#1903\n\nbump skitionek/notify-microsoft-teams from 190d4d92146df11f854709774a4dae6eaf5e2aa3 to fab6aca2609ba706ebc981d066278d47ab4af0fc in the actions group\n\n#1910\n\npre-commit automatic update\n\n#1911\n\nbump the actions group with 2 updates\n\n#1915\n\nupdate CHANGELOG for v0.8.3\n\n#1917\n\nupdate CHANGELOG for v0.9.2\n\n#1918"},{"objectID":"Release notes","href":"changelog.html#0104---april-09-2025","title":"Release notes > 0.10.4 - April 09, 2025","text":"0.10.4 - April 09, 2025\n\nAdded\n\n\n\n\n\ngrpc named selection stub implementation\n\n#1899\n\nDependencies\n\n\n\n\n\nbump ansys-api-geometry from 0.4.55 to 0.4.56\n\n#1896\n\nDocumentation\n\n\n\n\n\nAhmed body example for external aero simulation\n\n#1886\n\nadding command for single example build\n\n#1893\n\nFixed\n\n\n\n\n\ngeomdl dependency in conda-forge\n\n#1900\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.3\n\n#1894\n\nupgrading to ansys/actions v9 and securing action usage\n\n#1895\n\nbump the actions group with 3 updates\n\n#1897\n\nremove whitelisting\n\n#1898"},{"objectID":"Release notes","href":"changelog.html#0103---april-08-2025","title":"Release notes > 0.10.3 - April 08, 2025","text":"0.10.3 - April 08, 2025\n\nAdded\n\n\n\n\n\ngrpc common layer architecture, bodies stub and admin stub implementation\n\n#1867\n\nLogo detection\n\n#1873\n\nDbuApplication stub relocation\n\n#1882\n\nDependencies\n\n\n\n\n\nbump ansys-sphinx-theme[autoapi] from 1.3.3 to 1.4.2 in the docs-deps group\n\n#1874\n\nbump ansys-api-geometry from 0.4.50 to 0.4.54\n\n#1875\n\nbump pytest-cov from 6.0.0 to 6.1.0\n\n#1880\n\nbump pytest-cov from 6.1.0 to 6.1.1\n\n#1888\n\nbump ansys-api-geometry from 0.4.54 to 0.4.55\n\n#1889\n\nDocumentation\n\n\n\n\n\nUpdate CONTRIBUTORS.md with the latest contributors\n\n#1887\n\nFixed\n\n\n\n\n\nCore Service install location on official build changed\n\n#1876\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.2\n\n#1870\n\npre-commit automatic update\n\n#1878, #1890\n\nTest\n\n\n\n\n\nissue 1868 (named selection beams testing)\n\n#1871"},{"objectID":"Release notes","href":"changelog.html#0102---march-26-2025","title":"Release notes > 0.10.2 - March 26, 2025","text":"0.10.2 - March 26, 2025\n\nAdded\n\n\n\n\n\nimplement lazy loading of members in NamedSelection to speed up loading times when reading model\n\n#1869\n\nDependencies\n\n\n\n\n\nbump beartype from 0.19.0 to 0.20.1\n\n#1862\n\nbump beartype from 0.20.1 to 0.20.2\n\n#1864\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.1\n\n#1861\n\npre-commit automatic update\n\n#1866\n\nTest\n\n\n\n\n\nissue 1801\n\n#1865"},{"objectID":"Release notes","href":"changelog.html#0101---march-21-2025","title":"Release notes > 0.10.1 - March 21, 2025","text":"0.10.1 - March 21, 2025\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.10.0\n\n#1856\n\nbump version number to 0.11.dev0\n\n#1857\n\nfix release notes inputs\n\n#1858\n\ncleanup deprecated methods\n\n#1860"},{"objectID":"Release notes","href":"changelog.html#0100---march-21-2025","title":"Release notes > 0.10.0 - March 21, 2025","text":"0.10.0 - March 21, 2025\n\nAdded\n\n\n\n\n\nnamed selection functionality\n\n#1768\n\nStreaming upload support\n\n#1779\n\nimprint curves without a sketch\n\n#1781\n\nRGBA color support\n\n#1788\n\nenhanced 3D bounding box implementation\n\n#1805\n\nmatrix helper methods\n\n#1806\n\ncomponent name setting\n\n#1820\n\nenable runscript for CoreService\n\n#1821\n\nenhanced beam implementation\n\n#1828\n\nupdate api geometry dependency\n\n#1834\n\nrevolve faces and revolve faces by helix options\n\n#1842\n\nRemove rounds\n\n#1851\n\nblitz (2nd round)\n\n#1853\n\nDependencies\n\n\n\n\n\nbump matplotlib from 3.10.0 to 3.10.1\n\n#1789\n\nbump pytest from 8.3.4 to 8.3.5\n\n#1791\n\nbump ansys-api-geometry from 0.4.42 to 0.4.43\n\n#1799\n\nbump ansys-api-geometry from 0.4.43 to 0.4.44\n\n#1803\n\nbump ansys-api-geometry from 0.4.44 to 0.4.45\n\n#1809\n\nbump ansys-api-geometry from 0.4.45 to 0.4.46\n\n#1814\n\nbump pytest-xvfb from 3.0.0 to 3.1.1\n\n#1822\n\nbump ansys-api-geometry from 0.4.46 to 0.4.47\n\n#1827\n\nbump notebook from 7.3.2 to 7.3.3 in the docs-deps group\n\n#1836\n\nbump ansys-api-geometry from 0.4.47 to 0.4.48\n\n#1837\n\nansys api geometry 0.4.49\n\n#1840\n\nbump numpy from 2.2.3 to 2.2.4\n\n#1844\n\nbump ansys-api-geometry from 0.4.48 to 0.4.49\n\n#1845\n\nbump ansys-api-geometry from 0.4.49 to 0.4.50\n\n#1849\n\nFixed\n\n\n\n\n\nflaky color test due to random face assignment\n\n#1794\n\nfix parasolid export tests with more precise backend descriptor\n\n#1802\n\ntranslating sketch issues when using a custom default unit\n\n#1808\n\nedge start and end were not being mapped correctly\n\n#1816\n\nchange Core Service path to executable/DLL after renaming\n\n#1841\n\ntessellation options were not extended to component/face methods\n\n#1850\n\nnamed selection import test\n\n#1854\n\nMaintenance\n\n\n\n\n\nupdate CHANGELOG for v0.9.1\n\n#1787\n\npre-commit automatic update\n\n#1792, #1810, #1846\n\nremove DMS from pipelines and use core service images only\n\n#1812\n\nuse ansys/action/hk-automerge-prs\n\n#1824\n\nupgrading to new features in ansys/actions v8.2\n\n#1852\n\ncleanup blitz PR\n\n#1855\n\nTest\n\n\n\n\n\nSkip test due to SC bug\n\n#1798\n\nimprove share topology test\n\n#1804\n\nFix slow tests\n\n#1832\n\nadding inward shell\n\n#1833"},{"objectID":"Release notes","href":"changelog.html#092---april-16-2025","title":"Release notes > 0.9.2 - April 16, 2025","text":"0.9.2 - April 16, 2025"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nis_suppressed is not available until 25R2 #1916"},{"objectID":"Release notes","href":"changelog.html#091---2025-02-28","title":"Release notes > 0.9.1 - 2025-02-28","text":"0.9.1 - 2025-02-28"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\noffset faces set radius implementation + testing #1769\n\nseparate graphics target #1782"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump the docs-deps group with 2 updates #1762\n\nbump ansys-api-geometry from 0.4.38 to 0.4.40 #1763\n\nbump ansys-sphinx-theme[autoapi] from 1.3.1 to 1.3.2 in the docs-deps group #1766\n\nbump ansys-tools-visualization-interface from 0.8.1 to 0.8.3 #1767\n\nbump sphinx from 8.2.0 to 8.2.1 in the docs-deps group #1772\n\nbump ansys-api-geometry from 0.4.40 to 0.4.42 #1773\n\ntemporary workaround for using trusted publisher approach #1783"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nallow setting max message length for send operations #1775\n\ntypo in labeler.yml file #1776\n\ndocker build process failing on helper script #1785"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nbump dev version to 0.10.dev0 #1752\n\nupdate CHANGELOG for v0.9.0 #1760\n\npre-commit automatic update #1770"},{"objectID":"Release notes","href":"changelog.html#090---2025-02-18","title":"Release notes > 0.9.0 - 2025-02-18","text":"0.9.0 - 2025-02-18"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\ndesign activation changes #1707\n\nadd contributors #1708\n\nImplementation of inspect & repair geometry #1712\n\nlaunch core service from envar #1716\n\nworkflow enhancements for better tool results #1723\n\nadd face color, round info, bring measure tools to linux #1732\n\nconservative approach to single design per modeler #1740\n\nexport glb #1741\n\nallow plotting of individual faces #1757"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump ansys-api-geometry from 0.4.33 to 0.4.34 #1709\n\nbump ansys-sphinx-theme[autoapi] from 1.2.6 to 1.2.7 in the docs-deps group #1719\n\nbump ansys-api-geometry from 0.4.34 to 0.4.35 #1720\n\nbump ansys-sphinx-theme[autoapi] from 1.2.7 to 1.3.0 in the docs-deps group #1726\n\nbump ansys-sphinx-theme[autoapi] from 1.3.0 to 1.3.1 in the docs-deps group #1728\n\nbump ansys-api-geometry from 0.4.35 to 0.4.36 #1729\n\nbump trame-vtk from 2.8.14 to 2.8.15 #1736\n\nbump jupytext from 1.16.6 to 1.16.7 in the docs-deps group #1742\n\nbump ansys-api-geometry from 0.4.36 to 0.4.37 #1743\n\nbump myst-parser from 4.0.0 to 4.0.1 in the docs-deps group #1744\n\nbump ansys-api-geometry from 0.4.37 to 0.4.38 #1746\n\nbump numpy from 2.2.2 to 2.2.3 #1747\n\nbump panel from 1.6.0 to 1.6.1 #1749\n\nbump scipy from 1.15.1 to 1.15.2 #1756"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nupdate CONTRIBUTING.md #1730"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nre enable fmd tests #1711\n\nsupport body mirror on linux #1714\n\nuse sketch plane for imprint/project curves #1715\n\nrevert boolean ops logic and hold-off on commands-based implementation (temporarily) #1725\n\nLinux Core Service docker file was missing a dependency #1758"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.8.2 #1706\n\npre-commit automatic update #1717, #1737\n\nupdate SECURITY.md versions supported #1722\n\nkeep simba-plugin-geometry tag #1739\n\nenhancements to GLB export and object plot() methods #1750\n\nclean up deprecation warning for trapezoid class and add more info on deprecation #1754"},{"objectID":"Release notes","href":"changelog.html#test","title":"Release notes > Test","text":"Test\n\nverifying issue with empty intersect and temporal body creation #1258\n\nExpand pattern tests #1713\n\nset body name #1727\n\nactivate 8 linux tests #1745"},{"objectID":"Release notes","href":"changelog.html#083---april-16-2025","title":"Release notes > 0.8.3 - April 16, 2025","text":"0.8.3 - April 16, 2025"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nis_suppressed is not available until 25R2 #1916"},{"objectID":"Release notes","href":"changelog.html#082---2025-01-29","title":"Release notes > 0.8.2 - 2025-01-29","text":"0.8.2 - 2025-01-29"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\ncreate a fillet on an edge/face #1621\n\ncreate a full fillet between multiple faces #1623\n\nextrude existing faces, setup face offset relationships #1628\n\ninterference repair tool #1633\n\nextrude existing edges to create surface bodies #1638\n\ncreate and modify linear patterns #1641\n\nbody suppression state #1643\n\nparameters refurbished #1647\n\nrename object #1648\n\nsurface body from trimmed curves #1650\n\ncreate circular and fill patterns #1653\n\nfind fix simplify #1661\n\nreplace face #1664\n\ncommands for merge and intersect #1665\n\nrevolve faces a set distance, up to another object, or by a helix #1666\n\nadd split body and tests #1669\n\nenable get/set persistent ids for stride import/export #1671\n\nfind and fix edge methods #1672\n\nshell methods #1673\n\nimplementation of NURBS curves #1675\n\nget assigned material #1684\n\nmatrix rotation and translation #1689\n\nis_core_service BackendType static method #1692\n\nexport and download stride format #1698\n\nblitz development #1701"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump ansys-tools-visualization-interface from 0.7.0 to 0.8.1 #1640\n\nbump ansys-api-geometry from 0.4.27 to 0.4.28 #1644\n\nbump sphinx-autodoc-typehints from 3.0.0 to 3.0.1 in the docs-deps group #1651\n\nbump ansys-api-geometry from 0.4.28 to 0.4.30 #1652\n\nbump protobuf from 5.28.3 to 5.29.3 in the grpc-deps group across 1 directory #1656\n\nbump numpy from 2.2.1 to 2.2.2 #1662\n\nbump ansys-api-geometry from 0.4.30 to 0.4.31 #1663\n\nbump ansys api geometry from 0.4.30 to 0.4.32 #1677\n\nbump ansys-api-geometry from 0.4.31 to 0.4.32 #1681\n\nbump panel from 1.5.5 to 1.6.0 #1682\n\nbump semver from 3.0.2 to 3.0.4 #1687\n\nbump ansys-api-geometry from 0.4.32 to 0.4.33 #1695\n\nbump nbconvert from 7.16.5 to 7.16.6 in the docs-deps group #1700"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nreactivate test on failing extra edges test #1396\n\nfilter set export id to only CoreService based backends #1685\n\ncleanup unsupported module #1690\n\ndisable unimplemented tests #1691\n\ntech review fixes for blitz branch #1703"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.8.1 #1639\n\nwhitelist semver package temporarily #1657\n\nreverting semver package whitelist since problematic version is yanked #1659\n\npre-commit automatic update #1667, #1696\n\nensure design is closed on test exit #1680\n\nuse dedicate pygeometry-ci-2 runner #1693\n\nremove towncrier info duplicates #1702"},{"objectID":"Release notes","href":"changelog.html#test","title":"Release notes > Test","text":"Test\n\nadd more find and fix tests for repair tools #1645\n\nAdd some new tests #1670\n\nadd unit tests for 3 repair tools #1683"},{"objectID":"Release notes","href":"changelog.html#081---2025-01-15","title":"Release notes > 0.8.1 - 2025-01-15","text":"0.8.1 - 2025-01-15"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump ansys-api-geometry from 0.4.26 to 0.4.27 #1634"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nrelease issues encountered #1637"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.8.0 #1636"},{"objectID":"Release notes","href":"changelog.html#080---2025-01-15","title":"Release notes > 0.8.0 - 2025-01-15","text":"0.8.0 - 2025-01-15"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nactive support for Python 3.13 #1481\n\nadd chamfer tool #1495\n\nallow version input to automatically consider the nuances for the Ansys Student version #1548\n\nadapt health check timeout algorithm #1559\n\nadd core service support #1571\n\nenable (partially) prepare and repair tools in Core Service #1580\n\ncreate launcher for core services #1587"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump ansys-api-geometry from 0.4.16 to 0.4.17 #1547\n\nbump ansys-sphinx-theme[autoapi] from 1.2.1 to 1.2.2 in the docs-deps group #1549\n\nbump ansys-api-geometry from 0.4.17 to 0.4.18 #1550\n\nbump ansys-tools-visualization-interface from 0.5.0 to 0.6.0 #1554\n\nbump pytest from 8.3.3 to 8.3.4 #1562\n\nbump six from 1.16.0 to 1.17.0 #1568\n\nbump the docs-deps group across 1 directory with 2 updates #1570\n\nbump ansys-api-geometry from 0.4.18 to 0.4.20 #1574\n\nbump numpy from 2.1.3 to 2.2.0 #1575\n\nbump ansys-api-geometry from 0.4.20 to 0.4.23 #1581\n\nbump ansys-api-geometry from 0.4.23 to 0.4.24 #1582\n\nbump ansys-tools-visualization-interface from 0.6.0 to 0.6.1 #1583\n\nbump ansys-tools-visualization-interface from 0.6.1 to 0.6.2 #1586\n\navoid the usage of attrs 24.3.0 (temporary) #1589\n\nbump jupytext from 1.16.4 to 1.16.5 in the docs-deps group #1590\n\nbump jupytext from 1.16.5 to 1.16.6 in the docs-deps group #1593\n\nbump panel from 1.5.4 to 1.5.5 #1595\n\nbump ansys-sphinx-theme[autoapi] from 1.2.3 to 1.2.4 in the docs-deps group #1597\n\nbump notebook from 7.3.1 to 7.3.2 in the docs-deps group #1598\n\nbump numpy from 2.2.0 to 2.2.1 #1599\n\nbump ansys-tools-path from 0.7.0 to 0.7.1 #1600\n\nbump nbsphinx from 0.9.5 to 0.9.6 in the docs-deps group #1602\n\nbump nbconvert from 7.16.4 to 7.16.5 in the docs-deps group #1609\n\nbump ansys-api-geometry from 0.4.24 to 0.4.25 #1610\n\nbump sphinx-autodoc-typehints from 2.5.0 to 3.0.0 in the docs-deps group #1611\n\nbump scipy from 1.14.1 to 1.15.0 #1612\n\nbump trame-vtk from 2.8.12 to 2.8.13 #1616\n\nbump trame-vtk from 2.8.13 to 2.8.14 #1617\n\nbump ansys-tools-visualization-interface from 0.6.2 to 0.7.0 #1619\n\nbump ansys-sphinx-theme[autoapi] from 1.2.4 to 1.2.6 in the docs-deps group #1624\n\nbump scipy from 1.15.0 to 1.15.1 #1625\n\nbump ansys-api-geometry from 0.4.25 to 0.4.26 #1626"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nExplain how to report a security issue. #1605"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nnumpydoc warnings #1556\n\nvtk/pyvista issues #1584\n\nmake_child_logger only takes 2 args. #1603\n\nFAQ on install #1631"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\npre-commit automatic update #1366, #1552, #1561, #1588, #1601, #1615, #1630\n\nupdate CHANGELOG for v0.7.6 #1545\n\nchange release artifacts self-hosted runner #1546\n\nautomerge pre-commit.ci PRs #1553\n\nbump pyvista/setup-headless-display-action to v3 #1555\n\ndecouple unstable image promotion #1591\n\nskip unnecessary stages when containers are the same #1592\n\nNumpy is already imported at the top of the module. #1604\n\nupdate license year using pre-commit hook #1608"},{"objectID":"Release notes","href":"changelog.html#076---2024-11-19","title":"Release notes > 0.7.6 - 2024-11-19","text":"0.7.6 - 2024-11-19"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nallow for some additional extrusion direction names #1534"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump ansys-sphinx-theme[autoapi] from 1.1.7 to 1.2.0 in the docs-deps group #1520\n\nbump ansys-tools-visualization-interface from 0.4.7 to 0.5.0 #1521\n\nbump numpy from 2.1.2 to 2.1.3 #1522\n\nbump ansys-api-geometry from 0.4.13 to 0.4.14 #1525\n\nbump ansys-api-geometry from 0.4.14 to 0.4.15 #1529\n\nbump pint from 0.24.3 to 0.24.4 #1530\n\nbump trame-vtk from 2.8.11 to 2.8.12 #1531\n\nbump ansys-sphinx-theme[autoapi] from 1.2.0 to 1.2.1 in the docs-deps group #1535\n\nbump panel from 1.5.3 to 1.5.4 #1536\n\nbump ansys-tools-path from 0.6.0 to 0.7.0 #1537\n\nbump ansys-api-geometry from 0.4.15 to 0.4.16 #1538\n\nlimit upper version on grpcio & grpcio-health-checking to 1.68 #1544"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\ntypo with the docstrings #1524\n\nchange max header links before more dropdown #1527"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.5 #1519\n\npre-commit automatic update #1523, #1532, #1543\n\nbump codecov/codecov-action from 4 to 5 in the actions group #1541"},{"objectID":"Release notes","href":"changelog.html#075---2024-10-31","title":"Release notes > 0.7.5 - 2024-10-31","text":"0.7.5 - 2024-10-31"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\ncreate body from surface #1454\n\nperformance enhancements to plotter #1496\n\nallow picking from easy access methods #1499\n\nimplement cut operation in extrude sketch #1510\n\ncaching bodies to avoid unnecessary object creation #1513\n\nenable retrieval of service logs (via API) #1515"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump sphinx from 8.1.0 to 8.1.3 in the docs-deps group #1479\n\nbump ansys-sphinx-theme[autoapi] from 1.1.4 to 1.1.5 in the docs-deps group #1482\n\nbump the grpc-deps group across 1 directory with 3 updates #1487\n\nbump ansys-sphinx-theme[autoapi] from 1.1.5 to 1.1.6 in the docs-deps group #1493\n\nbump trame-vtk from 2.8.10 to 2.8.11 #1494\n\nbump ansys-api-geometry from 0.4.11 to 0.4.12 #1502\n\nbump protobuf from 5.28.2 to 5.28.3 in the grpc-deps group #1505\n\nbump ansys-sphinx-theme[autoapi] from 1.1.6 to 1.1.7 in the docs-deps group #1506\n\nbump ansys-tools-visualization-interface from 0.4.6 to 0.4.7 #1507\n\nbump panel from 1.5.2 to 1.5.3 #1508\n\nbump ansys-api-geometry from 0.4.12 to 0.4.13 #1512\n\nbump the grpc-deps group with 2 updates #1517\n\nbump pytest-cov from 5.0.0 to 6.0.0 #1518"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\navoid having a drop down in the top navigation bar #1485\n\nprovide information on how to build a single example #1490\n\nadd example file to download in the test #1501\n\nrevisit examples to make sure they are properly styled #1509\n\nalign landing page layout with UI/UX requirements #1511"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nstatic search options #1478\n\nrespect product_version when launching geometry service #1486"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.4 #1476\n\npre-commit automatic update #1480, #1516\n\navoid linkcheck on changelog (unnecessary) #1489\n\nupdate CONTRIBUTORS #1492\n\nallowing new tags for Windows Core Service #1497\n\nsimplify vulnerabilities check #1504"},{"objectID":"Release notes","href":"changelog.html#074---2024-10-11","title":"Release notes > 0.7.4 - 2024-10-11","text":"0.7.4 - 2024-10-11"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump sphinx from 8.0.2 to 8.1.0 in the docs-deps group #1470\n\nbump ansys-api-geometry from 0.4.10 to 0.4.11 #1473\n\nbump ansys-sphinx-theme to v1.1.3 #1475"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nsolving intersphinx warnings on paths #1469\n\ncheck_input_types not working with forward refs #1471\n\nshare_topology is available on 24R2 #1472"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.3 #1466"},{"objectID":"Release notes","href":"changelog.html#073---2024-10-09","title":"Release notes > 0.7.3 - 2024-10-09","text":"0.7.3 - 2024-10-09"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nuse service colors in plotter (upon request) #1376\n\ncapability to close designs (also on modeler.exit()) #1409\n\nprioritize user-defined SPACECLAIM_MODE env var #1440\n\nverifying Linux service also accepts colors #1451"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump protobuf from 5.28.0 to 5.28.1 in the grpc-deps group #1424\n\nbump the docs-deps group with 2 updates #1425, #1436\n\nbump ansys-tools-visualization-interface from 0.4.3 to 0.4.4 #1426\n\nbump pytest from 8.3.2 to 8.3.3 #1427\n\nbump panel from 1.4.5 to 1.5.0 #1428\n\nbump protobuf from 5.28.1 to 5.28.2 in the grpc-deps group #1435\n\nbump the grpc-deps group with 3 updates #1442\n\nbump beartype from 0.18.5 to 0.19.0 #1443\n\nbump panel from 1.5.0 to 1.5.1 #1444\n\nbump ansys-sphinx-theme[autoapi] from 1.1.1 to 1.1.2 in the docs-deps group #1456\n\nbump ansys-api-geometry from 0.4.8 to 0.4.9 #1457\n\nbump numpy from 2.1.1 to 2.1.2 #1458\n\nbump panel from 1.5.1 to 1.5.2 #1459\n\nbump ansys-api-geometry from 0.4.9 to 0.4.10 #1461\n\nbump ansys-tools-visualization-interface from 0.4.4 to 0.4.5 #1462\n\nupdate protobuf from 5.27.2 to 5.27.5 #1464\n\nbump sphinx-autodoc-typehints from 2.4.4 to 2.5.0 in the docs-deps group #1465"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nadding cheat sheet on documentation #1433\n\nadd captions in examples toctrees #1434"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nci/cd issues on documentation build #1441\n\nadapt tessellate tests to new core service #1449\n\nrename folders on Linux docker image according to new version #1450"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.2 #1422\n\ncheckout LFS files from previous version to ensure upload #1423\n\npre-commit automatic update #1431, #1437, #1445, #1460\n\nupdate to ansys actions v8 and docs theme (static search) #1446\n\npyvista/setup-headless-display started failing #1447\n\ncheck method implemented in Ansys actions #1448\n\nunstable image promotion and dependabot daily updates #1463"},{"objectID":"Release notes","href":"changelog.html#072---2024-09-11","title":"Release notes > 0.7.2 - 2024-09-11","text":"0.7.2 - 2024-09-11"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nallow for platform input when using Ansys Lab #1416\n\nensure GrpcClient class closure upon deletion #1417"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump sphinx-autodoc-typehints from 2.3.0 to 2.4.0 in the docs-deps group #1411\n\nbump numpy from 2.1.0 to 2.1.1 #1412\n\nbump ansys-tools-visualization-interface from 0.4.1 to 0.4.3 #1413"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nremove title from landing page #1408\n\nadapt examples to use launch_modeler instead of Modeler obj connection #1410"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nhandle properly np.cross() - 2d ops deprecated in Numpy 2.X #1419\n\nchange logo link so that it renders properly on PyPI #1420\n\nwrong path on logo image #1421"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.1 #1407\n\npre-commit automatic update #1418"},{"objectID":"Release notes","href":"changelog.html#071---2024-09-06","title":"Release notes > 0.7.1 - 2024-09-06","text":"0.7.1 - 2024-09-06"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nget and set body color #1357\n\nadd modeler.exit() method #1375\n\nsetting instance name during component creation #1382\n\naccept pathlib.Path as input in missing methods #1385\n\ndefault logs folder on Geometry Service started by Python at PUBLIC (Windows) #1386\n\nallowing users to specify API version when running script against SpaceClaim or Discovery #1395\n\nexpose modeler.designs attribute #1401\n\npretty print components #1403"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbump the grpc-deps group with 2 updates #1363, #1369\n\nbump the docs-deps group with 2 updates #1364, #1392\n\nbump numpy from 2.0.1 to 2.1.0 #1365\n\nbump ansys-sphinx-theme[autoapi] from 1.0.5 to 1.0.7 in the docs-deps group #1370\n\nbump ansys-api-geometry from 0.4.7 to 0.4.8 #1371\n\nbump scipy from 1.14.0 to 1.14.1 #1372\n\nbump the grpc-deps group with 3 updates #1391\n\nbump ansys-tools-visualization-interface from 0.4.0 to 0.4.1 #1393\n\nbump ansys-sphinx-theme[autoapi] from 1.0.7 to 1.0.8 in the docs-deps group #1397"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nadd project logo #1405"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nremove server_logs_folder argument for Discovery and SpaceClaim #1387"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdate CHANGELOG for v0.7.0 #1360\n\nbump dev branch to v0.8.dev0 #1361\n\nsolving various warnings #1368\n\npre-commit automatic update #1373, #1394\n\nupload coverage artifacts properly with upload-artifact@v4.4.0 #1406"},{"objectID":"Release notes","href":"changelog.html#070---2024-08-13","title":"Release notes > 0.7.0 - 2024-08-13","text":"0.7.0 - 2024-08-13"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nbuild: drop support for Python 3.9 #1341\n\nfeat: adapting beartype typehints to +Python 3.10 standard #1347"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump the grpc-deps group with 3 updates #1342\n\nbuild: bump panel from 1.4.4 to 1.4.5 #1344\n\nbump the docs-deps group across 1 directory with 4 updates #1353\n\nbump trame-vtk from 2.8.9 to 2.8.10 #1355\n\nbump ansys-api-geometry from 0.4.6 to 0.4.7 #1356"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nfeat: update conf for version 1.x of ansys-sphinx-theme #1351"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\ntrapezoid signature change and internal checks #1354"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nupdating Ansys actions to v7 - changelog related #1348\n\nci: bump ansys/actions from 6 to 7 in the actions group #1352\n\npre-commit automatic update #1358"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1345"},{"objectID":"Release notes","href":"changelog.html#066---2024-08-01","title":"Release notes > 0.6.6 - 2024-08-01","text":"0.6.6 - 2024-08-01"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: Add misc. repair and prepare tool methods #1293\n\nfeat: name setter and fill style getter setters #1299\n\nfeat: extract fluid volume from solid #1306\n\nfeat: keep “other” bodies when performing bool operations #1311\n\nfeat: revolve_sketch rotation definition enhancement #1336"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.5 #1290\n\nchore: enable ruff formatter on pre-commit #1312\n\nchore: updating dependabot groups #1313\n\nchore: adding issue links to TODOs #1320\n\nfeat: adapt to new ansys-tools-visualization-interface v0.4.0 #1338"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\ntest: create sphere bug raised after box creation #1291\n\nci: docker cleanup #1294\n\nfix: default length units not being used properly on arc creation #1310"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump ansys-api-geometry from 0.4.4 to 0.4.5 #1292\n\nbuild: bump pyvista[jupyter] from 0.43.10 to 0.44.0 in the docs-deps group #1296\n\nbuild: bump jupytext from 1.16.2 to 1.16.3 in the docs-deps group #1300\n\nbuild: bump ansys-api-geometry from 0.4.5 to 0.4.6 #1301\n\nbuild: bump pint from 0.24.1 to 0.24.3 #1307\n\nbuild: bump grpcio-health-checking from 1.60.0 to 1.64.1 in the grpc-deps group #1315\n\nbuild: bump the docs-deps group across 1 directory with 2 updates #1316\n\nbuild: bump the grpc-deps group with 2 updates #1322\n\nbuild: bump the docs-deps group with 2 updates #1323\n\nbuild: bump pyvista[jupyter] from 0.44.0 to 0.44.1 #1324\n\nbuild: bump ansys-tools-visualization-interface from 0.2.6 to 0.3.0 #1325\n\nbuild: bump pytest from 8.2.2 to 8.3.1 #1326\n\nbuild: bump pytest from 8.3.1 to 8.3.2 #1331\n\nbuild: bump numpy from 2.0.0 to 2.0.1 #1332"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1327, #1333"},{"objectID":"Release notes","href":"changelog.html#065---2024-07-02","title":"Release notes > 0.6.5 - 2024-07-02","text":"0.6.5 - 2024-07-02"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.4 #1278\n\nbuild: update sphinx-autodoc-typehints version #1280\n\nchore: update SECURITY.md #1286"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: manifest path should render as posix rather than uri #1289"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump protobuf from 5.27.1 to 5.27.2 in the grpc-deps group #1283\n\nbuild: bump scipy from 1.13.1 to 1.14.0 #1284\n\nbuild: bump vtk from 9.3.0 to 9.3.1 #1287"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1281, #1288"},{"objectID":"Release notes","href":"changelog.html#064---2024-06-24","title":"Release notes > 0.6.4 - 2024-06-24","text":"0.6.4 - 2024-06-24"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: using ruff as the main linter/formatter #1274"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.3 #1273\n\nchore: bump pre-commit-hook version #1276"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: backticks breaking doc build after ruff linter #1275"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump pint from 0.24 to 0.24.1 #1277"},{"objectID":"Release notes","href":"changelog.html#063---2024-06-18","title":"Release notes > 0.6.3 - 2024-06-18","text":"0.6.3 - 2024-06-18"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.2 #1263\n\nbuild: adapting to numpy 2.x #1265\n\ndocs: using ansys actions (again) to build docs #1270"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: unnecessary Point3D comparison #1264\n\ndocs: examples are not being uploaded as assets (.py/.ipynb) #1268\n\nfix: change action order #1269"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump numpy from 1.26.4 to 2.0.0 #1266\n\nbuild: bump the docs-deps group with 2 updates #1271"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1267"},{"objectID":"Release notes","href":"changelog.html#062---2024-06-17","title":"Release notes > 0.6.2 - 2024-06-17","text":"0.6.2 - 2024-06-17"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: deprecating log_level and logs_folder + adding client log control #1260\n\nfeat: adding deprecation support for args and methods #1261"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.1 #1256\n\nci: simplify doc build using ansys/actions #1262"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: Rename built in shadowing variables #1257"},{"objectID":"Release notes","href":"changelog.html#061---2024-06-12","title":"Release notes > 0.6.1 - 2024-06-12","text":"0.6.1 - 2024-06-12"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: revolve a sketch given an axis and an origin #1248"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.6.0 #1245\n\nchore: update dev version to 0.8.dev0 #1246"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: Bug in show function #1255"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump protobuf from 5.27.0 to 5.27.1 in the grpc-deps group #1250\n\nbuild: bump the docs-deps group with 2 updates #1251\n\nbuild: bump trame-vtk from 2.8.8 to 2.8.9 #1252\n\nbuild: bump pint from 0.23 to 0.24 #1253\n\nbuild: bump ansys-tools-visualization-interface from 0.2.2 to 0.2.3 #1254"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\ndocs: add conda information for package #1247"},{"objectID":"Release notes","href":"changelog.html#060---2024-06-07","title":"Release notes > 0.6.0 - 2024-06-07","text":"0.6.0 - 2024-06-07"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: Adapt to ansys-visualizer #959\n\nfix: rename GeomPlotter to GeometryPlotter #1227\n\nrefactor: use ansys-tools-visualization-interface global vars rather than env vars #1230\n\nfeat: bump to use v251 as default #1242"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.5.6 #1213\n\nchore: update SECURITY.md #1214\n\nci: use Trusted Publisher for releasing package #1216\n\nci: remove pygeometry-ci-1 specific logic #1221\n\nci: only run doc build on runners outside the ansys network #1223\n\nchore: pre-commit automatic update #1224\n\nci: announce nightly workflows failing #1237\n\nci: failing notifications improvement #1243\n\nfix: broken interactive docs and improved tests paths #1244"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: Interactive documentation #1226\n\nfix: only notify on failure and fill with data #1238"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump protobuf from 5.26.1 to 5.27.0 in the grpc-deps group #1217\n\nbuild: bump panel from 1.4.2 to 1.4.3 in the docs-deps group #1218\n\nbuild: bump ansys-api-geometry from 0.4.1 to 0.4.2 #1219\n\nbuild: bump ansys-sphinx-theme[autoapi] from 0.16.2 to 0.16.5 in the docs-deps group #1231\n\nbuild: bump requests from 2.32.2 to 2.32.3 #1232\n\nbuild: bump ansys-api-geometry from 0.4.2 to 0.4.3 #1233\n\nbuild: bump ansys-tools-visualization-interface from 0.2.1 to 0.2.2 #1234\n\nbuild: bump panel from 1.4.3 to 1.4.4 in the docs-deps group #1235\n\nbuild: bump ansys-tools-path from 0.5.2 to 0.6.0 #1236\n\nbuild: bump grpcio from 1.64.0 to 1.64.1 in the grpc-deps group #1239\n\nbuild: bump ansys-api-geometry from 0.4.3 to 0.4.4 #1240\n\nbuild: bump pytest from 8.2.1 to 8.2.2 #1241"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\ndocs: update AUTHORS #1222"},{"objectID":"Release notes","href":"changelog.html#056---2024-05-23","title":"Release notes > 0.5.6 - 2024-05-23","text":"0.5.6 - 2024-05-23"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: add new arc constructors #1208"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.5.5 #1205"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump requests from 2.31.0 to 2.32.2 #1204\n\nbuild: bump ansys-sphinx-theme[autoapi] from 0.16.0 to 0.16.2 in the docs-deps group #1210\n\nbuild: bump docker from 7.0.0 to 7.1.0 #1211\n\nbuild: bump scipy from 1.13.0 to 1.13.1 #1212"},{"objectID":"Release notes","href":"changelog.html#055---2024-05-21","title":"Release notes > 0.5.5 - 2024-05-21","text":"0.5.5 - 2024-05-21"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\ndocs: adapt ansys_sphinx_theme_autoapi extension for autoapi #1135\n\nchore: update CHANGELOG for v0.5.4 #1194"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: adapting Arc class constructor order to (start, end, center) #1196\n\nchore: limit requests library version under 2.32 #1203"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump grpcio from 1.63.0 to 1.64.0 in the grpc-deps group #1198\n\nbuild: bump the docs-deps group with 2 updates #1199\n\nbuild: bump pytest from 8.2.0 to 8.2.1 #1200"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1202"},{"objectID":"Release notes","href":"changelog.html#054---2024-05-15","title":"Release notes > 0.5.4 - 2024-05-15","text":"0.5.4 - 2024-05-15"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: allow for product_version on geometry service launcher function #1182"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.5.3 #1177"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump the docs-deps group with 4 updates #1178\n\nbuild: bump pytest from 8.1.1 to 8.2.0 #1179\n\nbuild: bump grpcio from 1.62.2 to 1.63.0 in the grpc-deps group #1186\n\nbuild: bump the docs-deps group with 2 updates #1187\n\nbuild: bump trame-vtk from 2.8.6 to 2.8.7 #1188\n\nbuild: bump nbsphinx from 0.9.3 to 0.9.4 in the docs-deps group #1189\n\nbuild: bump trame-vtk from 2.8.7 to 2.8.8 #1190"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\nchore: pre-commit automatic update #1180, #1193\n\ndocs: add geometry preparation for Fluent simulation #1183"},{"objectID":"Release notes","href":"changelog.html#053---2024-04-29","title":"Release notes > 0.5.3 - 2024-04-29","text":"0.5.3 - 2024-04-29"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: semver intersphinx mapping not resolved properly #1175\n\nfix: start and end points for edge #1176"},{"objectID":"Release notes","href":"changelog.html#052---2024-04-29","title":"Release notes > 0.5.2 - 2024-04-29","text":"0.5.2 - 2024-04-29"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: add semver to intersphinx #1173"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.5.1 #1165\n\nchore: bump version to v0.6.dev0 #1166\n\nchore: update CHANGELOG for v0.5.2 #1172\n\nfix: allow to reuse last release binaries (if requested) #1174"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: GetSurface and GetCurve not available prior to 24R2 #1171"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\ndocs: creating a NACA airfoil example #1167\n\ndocs: simplify README example #1169"},{"objectID":"Release notes","href":"changelog.html#051---2024-04-24","title":"Release notes > 0.5.1 - 2024-04-24","text":"0.5.1 - 2024-04-24"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: security updates dropped for v0.3 or earlier #1126\n\nfeat: add export_to functions #1147"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nci: adapt to vale v3 #1129\n\nci: bump ansys/actions from 5 to 6 in the actions group #1133\n\ndocs: add release notes in our documentation #1138\n\nchore: bump ansys pre-commit hook to v0.3.0 #1139\n\nchore: use default vale version #1140\n\ndocs: add user_agent to Sphinx build #1142\n\nci: enabling Linux tests missing #1152\n\nci: perform minimal requirements tests #1153"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: docs link in example #1137\n\nfix: update backend version message #1145\n\nfix: Trame issues #1148\n\nfix: Interactive documentation #1160"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump ansys-tools-path from 0.5.1 to 0.5.2 #1131\n\nbuild: bump the grpc-deps group across 1 directory with 3 updates #1156\n\nbuild: bump notebook from 7.1.2 to 7.1.3 in the docs-deps group #1157\n\nbuild: bump beartype from 0.18.2 to 0.18.5 #1158"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\ndocs: add example on exporting designs #1149\n\ndocs: fix link in CHANGELOG.md #1154\n\nchore: pre-commit automatic update #1159"},{"objectID":"Release notes","href":"changelog.html#050---2024-04-17","title":"Release notes > 0.5.0 - 2024-04-17","text":"0.5.0 - 2024-04-17"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: inserting document into existing design #930\n\nfeat: add changelog action #1023\n\nfeat: create a sphere body on the backend #1035\n\nfeat: mirror a body #1055\n\nfeat: sweeping chains and profiles #1056\n\nfeat: vulnerability checks #1071\n\nfeat: loft profiles #1075\n\nfeat: accept bandit advisories in-line for subprocess #1077\n\nfeat: adding containers to automatic launcher #1090\n\nfeat: minor changes to Linux Dockerfile #1111\n\nfeat: avoid error if folder exists #1125"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nbuild: changing sphinx-autoapi from 3.1.a2 to 3.1.a4 #1038\n\nchore: add pre-commit.ci configuration #1065\n\nchore: dependabot PR automatic approval #1067\n\nci: bump the actions group with 1 update #1082\n\nchore: update docker tags to be kept #1085\n\nchore: update pre-commit versions #1094\n\nbuild: use ansys-sphinx-theme autoapi target #1097\n\nfix: removing @PipKat from *.md files - changelog fragments #1098\n\nci: dashboard upload does not apply anymore #1099\n\nchore: pre-commit.ci not working properly #1108\n\nchore: update and adding pre-commit.ci config hook #1109\n\nci: main Python version update to 3.12 #1112\n\nci: skip Linux tests with common approach #1113\n\nci: build changelog on release #1118\n\nchore: update CHANGELOG for v0.5.0 #1119"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfeat: re-enable open file on Linux #817\n\nfix: adapt export and download tests to new hoops #1057\n\nfix: linux Dockerfile - replace .NET6.0 references by .NET8.0 #1069\n\nfix: misleading docstring for sweep_chain() #1070\n\nfix: prepare_and_start_backend is only available on Windows #1076\n\nfix: unit tests failing after dms update #1087\n\nbuild: beartype upper limit on v0.18 #1095\n\nfix: improper types being passed for Face and Edge ctor. #1096\n\nfix: return type should be dict and not ScalarMapContainer (grpc type) #1103\n\nfix: env version for Dockerfile Windows #1120\n\nfix: changelog description ill-formatted #1121\n\nfix: solve issues with intersphinx when releasing #1123"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nbuild: bump the docs-deps group with 2 updates #1062, #1093, #1105\n\nbuild: bump ansys-api-geometry from 0.3.13 to 0.4.0 #1066\n\nbuild: bump the docs-deps group with 1 update #1080\n\nbuild: bump pytest-cov from 4.1.0 to 5.0.0 #1081\n\nbuild: bump ansys-api-geometry from 0.4.0 to 0.4.1 #1092\n\nbuild: bump beartype from 0.17.2 to 0.18.2 #1106\n\nbuild: bump ansys-tools-path from 0.4.1 to 0.5.1 #1107\n\nbuild: bump panel from 1.4.0 to 1.4.1 in the docs-deps group #1114\n\nbuild: bump scipy from 1.12.0 to 1.13.0 #1115"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\n[pre-commit.ci] pre-commit autoupdate #1063\n\ndocs: add examples on new methods #1089\n\nchore: pre-commit automatic update #1116"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#modeling-exporting-designs","title":"Examples > Modeling: Exporting designs","text":"Modeling: Exporting designs\n\nAfter creating a design, you typically want to bring it into a CAD tool for further development. This notebook demonstrates how to export a design to the various supported CAD formats."},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#create-a-design","title":"Examples > Modeling: Exporting designs > Create a design","text":"Create a design\n\nThe code creates a simple design for demonstration purposes. The design consists of a set of rectangular pads with a circular hole in the center.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-the-design","title":"Examples > Modeling: Exporting designs > Export the design","text":"Export the design\n\nYou can export the design to various CAD formats. For the formats supported see the DesignFileFormat class, which is part of the the design module documentation.\n\nNonetheless, there are a set of convenience methods that you can use to export the design to the supported formats. The following code snippets demonstrate how to do it. You can decide whether to export the design to a file in a certain directory or in the current working directory."},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-a-file-in-the-current-working-directory","title":"Examples > Modeling: Exporting designs > Export to a file in the current working directory","text":"Export to a file in the current working directory\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-a-file-in-a-certain-directory","title":"Examples > Modeling: Exporting designs > Export to a file in a certain directory","text":"Export to a file in a certain directory\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-scdocx-format","title":"Examples > Modeling: Exporting designs > Export to SCDOCX format","text":"Export to SCDOCX format\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-parasolid-text-format","title":"Examples > Modeling: Exporting designs > Export to Parasolid text format","text":"Export to Parasolid text format\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-parasolid-binary-format","title":"Examples > Modeling: Exporting designs > Export to Parasolid binary format","text":"Export to Parasolid binary format\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-step-format","title":"Examples > Modeling: Exporting designs > Export to STEP format","text":"Export to STEP format"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-iges-format","title":"Examples > Modeling: Exporting designs > Export to IGES format","text":"Export to IGES format"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-fmd-format","title":"Examples > Modeling: Exporting designs > Export to FMD format","text":"Export to FMD format\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-pmdb-format","title":"Examples > Modeling: Exporting designs > Export to PMDB format","text":"Export to PMDB format"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#export-to-discovery-format","title":"Examples > Modeling: Exporting designs > Export to Discovery format","text":"Export to Discovery format\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/export_design.html#close-the-modeler","title":"Examples > Modeling: Exporting designs > Close the modeler","text":"Close the modeler\n\nClose the modeler after exporting the design.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/GRPCPointsService.html#grpcpointsservice","title":"GRPCPointsService","text":"GRPCPointsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.points.GRPCPointsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nPoints service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/GRPCPointsService.html#overview","title":"GRPCPointsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_design_points\n\nCreate design points."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/GRPCPointsService.html#import-detail","title":"GRPCPointsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/points/GRPCPointsService.html#method-detail","title":"GRPCPointsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPointsService.create_design_points(**kwargs) -> dict\n\nCreate design points."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/index.html#the-coordinate_systemspy-module","title":"The coordinate_systems.py module","text":"The coordinate_systems.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/index.html#summary","title":"The coordinate_systems.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCoordinateSystemServiceV1\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/coordinate_systems/index.html#description","title":"The coordinate_systems.py module > Description","text":"Description\n\nModule containing the coordinate systems service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/index.html#the-show_design_pointpy-module","title":"The show_design_point.py module","text":"The show_design_point.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/index.html#summary","title":"The show_design_point.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nShowDesignPoints\n\nProvides the a button to hide/show DesignPoint objects in the plotter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/widgets/show_design_point/index.html#description","title":"The show_design_point.py module > Description","text":"Description\n\nProvides the ruler widget for the PyAnsys Geometry plotter."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/ApiVersions.html#apiversions","title":"ApiVersions","text":"ApiVersions\n\n\n\nclass ansys.geometry.core.connection.backend.ApiVersions(*args, **kwds)\n\nBases: enum.Enum\n\nProvides an enum for all the compatibles API versions."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/ApiVersions.html#overview","title":"ApiVersions > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nV_21\n\n\n\nV_22\n\n\n\nV_231\n\n\n\nV_232\n\n\n\nV_241\n\n\n\nV_242\n\n\n\nV_251\n\n\n\nV_252\n\n\n\nStatic methods\n\n\n\n\n\nparse_input\n\nConvert an input to an ApiVersions enum."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/ApiVersions.html#import-detail","title":"ApiVersions > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/ApiVersions.html#attribute-detail","title":"ApiVersions > Attribute detail","text":"Attribute detail\n\n\n\nApiVersions.V_21 = 21\n\n\n\n\n\nApiVersions.V_22 = 22\n\n\n\n\n\nApiVersions.V_231 = 231\n\n\n\n\n\nApiVersions.V_232 = 232\n\n\n\n\n\nApiVersions.V_241 = 241\n\n\n\n\n\nApiVersions.V_242 = 242\n\n\n\n\n\nApiVersions.V_251 = 251\n\n\n\n\n\nApiVersions.V_252 = 252\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/backend/ApiVersions.html#method-detail","title":"ApiVersions > Method detail","text":"Method detail\n\n\n\nstatic ApiVersions.parse_input(version: int | str | ApiVersions) -> ApiVersions\n\nConvert an input to an ApiVersions enum.\n\nParameters\n\nversion\n\npython:int | python:str | ApiVersions\n\nThe version to convert to an ApiVersions enum.\n\nReturns\n\nApiVersions\n\nThe version as an ApiVersions enum."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/GRPCRepairToolsService.html#grpcrepairtoolsservice","title":"GRPCRepairToolsService","text":"GRPCRepairToolsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.repair_tools.GRPCRepairToolsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nAbstract base class for gRPC-based repair tools service.\n\nParameters\n\nchannel: grpc.Channel\n\nThe gRPC channel used to communicate with the service."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/GRPCRepairToolsService.html#overview","title":"GRPCRepairToolsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nfind_split_edges\n\nIdentify split edges in the geometry.\n\nfind_extra_edges\n\nIdentify extra edges in the geometry.\n\nfind_inexact_edges\n\nIdentify inexact edges in the geometry.\n\nfind_short_edges\n\nIdentify short edges in the geometry.\n\nfind_duplicate_faces\n\nIdentify duplicate faces in the geometry.\n\nfind_missing_faces\n\nIdentify missing faces in the geometry.\n\nfind_small_faces\n\nIdentify small faces in the geometry.\n\nfind_stitch_faces\n\nIdentify faces that can be stitched together in the geometry.\n\nfind_simplify\n\nIdentify areas in the geometry that can be simplified.\n\nfind_interferences\n\nIdentify interferences in the geometry.\n\nfind_and_fix_short_edges\n\nIdentify and fix short edges in the geometry.\n\nfind_and_fix_extra_edges\n\nIdentify and fix extra edges in the geometry.\n\nfind_and_fix_split_edges\n\nIdentify and fix split edges in the geometry.\n\nfind_and_fix_simplify\n\nIdentify and simplify areas in the geometry.\n\nfind_and_fix_stitch_faces\n\nIdentify and stitch faces in the geometry.\n\ninspect_geometry\n\nInspect the geometry for issues.\n\nrepair_geometry\n\nRepair the geometry by addressing identified issues.\n\nfix_duplicate_faces\n\nFix duplicate faces in the geometry.\n\nfix_missing_faces\n\nFix missing faces in the geometry.\n\nfix_inexact_edges\n\nFix inexact edges in the geometry.\n\nfix_extra_edges\n\nFix extra edges in the geometry.\n\nfix_short_edges\n\nFix short edges in the geometry.\n\nfix_small_faces\n\nFix small faces in the geometry.\n\nfix_split_edges\n\nFix split edges in the geometry.\n\nfix_stitch_faces\n\nFix stitch faces in the geometry.\n\nfix_unsimplified_faces\n\nFix areas to simplify in the geometry.\n\nfix_interference\n\nFix interferences in the geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/GRPCRepairToolsService.html#import-detail","title":"GRPCRepairToolsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/GRPCRepairToolsService.html#method-detail","title":"GRPCRepairToolsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCRepairToolsService.find_split_edges(**kwargs) -> dict\n\nIdentify split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_extra_edges(**kwargs) -> dict\n\nIdentify extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_inexact_edges(**kwargs) -> dict\n\nIdentify inexact edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_short_edges(**kwargs) -> dict\n\nIdentify short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_duplicate_faces(**kwargs) -> dict\n\nIdentify duplicate faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_missing_faces(**kwargs) -> dict\n\nIdentify missing faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_small_faces(**kwargs) -> dict\n\nIdentify small faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_stitch_faces(**kwargs) -> dict\n\nIdentify faces that can be stitched together in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_simplify(**kwargs) -> dict\n\nIdentify areas in the geometry that can be simplified.\n\n\n\nabstractmethod GRPCRepairToolsService.find_interferences(**kwargs) -> dict\n\nIdentify interferences in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_and_fix_short_edges(**kwargs) -> dict\n\nIdentify and fix short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_and_fix_extra_edges(**kwargs) -> dict\n\nIdentify and fix extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_and_fix_split_edges(**kwargs) -> dict\n\nIdentify and fix split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_and_fix_simplify(**kwargs) -> dict\n\nIdentify and simplify areas in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.find_and_fix_stitch_faces(**kwargs) -> dict\n\nIdentify and stitch faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.inspect_geometry(**kwargs) -> dict\n\nInspect the geometry for issues.\n\n\n\nabstractmethod GRPCRepairToolsService.repair_geometry(**kwargs) -> dict\n\nRepair the geometry by addressing identified issues.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_duplicate_faces(**kwargs) -> dict\n\nFix duplicate faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_missing_faces(**kwargs) -> dict\n\nFix missing faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_inexact_edges(**kwargs) -> dict\n\nFix inexact edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_extra_edges(**kwargs) -> dict\n\nFix extra edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_short_edges(**kwargs) -> dict\n\nFix short edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_small_faces(**kwargs) -> dict\n\nFix small faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_split_edges(**kwargs) -> dict\n\nFix split edges in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_stitch_faces(**kwargs) -> dict\n\nFix stitch faces in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_unsimplified_faces(**kwargs) -> dict\n\nFix areas to simplify in the geometry.\n\n\n\nabstractmethod GRPCRepairToolsService.fix_interference(**kwargs) -> dict\n\nFix interferences in the geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/GRPCFacesServiceV1.html#grpcfacesservicev1","title":"GRPCFacesServiceV1","text":"GRPCFacesServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.faces.GRPCFacesServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.faces.GRPCFacesService\n\nFaces service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nfaces service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/GRPCFacesServiceV1.html#overview","title":"GRPCFacesServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_surface\n\nGet the surface of a face.\n\nget_box_uv\n\nGet the UV box of a face.\n\nget_area\n\nGet the area of a face.\n\nget_edges\n\nGet the edges of a face.\n\nget_vertices\n\nGet the vertices of a face.\n\nget_loops\n\nGet the loops of a face.\n\nget_color\n\nGet the color of a face.\n\nget_bounding_box\n\nGet the bounding box of a face.\n\nset_color\n\nSet the color of a face.\n\nget_normal\n\nGet the normal of a face.\n\nevaluate\n\nEvaluate a face at a given parameter.\n\ncreate_iso_parametric_curve\n\nCreate an iso-parametric curve on a face.\n\nextrude_faces\n\nExtrude a selection of faces.\n\nextrude_faces_up_to\n\nExtrude a selection of faces up to another object.\n\noffset_faces_set_radius\n\nOffset a selection of faces by a given radius.\n\nrevolve_faces\n\nRevolve a selection of faces around an axis.\n\nrevolve_faces_up_to\n\nRevolve a selection of faces around an axis up to another object.\n\nrevolve_faces_by_helix\n\nRevolve a selection of faces around an axis by a helix.\n\nreplace_faces\n\nReplace a selection of faces with new faces.\n\nthicken_faces\n\nThicken a selection of faces.\n\ndraft_faces\n\nDraft a selection of faces.\n\nget_round_info\n\nGet round information for a selection of faces.\n\noffset_faces\n\nOffset a selection of faces.\n\nsetup_offset_relationship\n\nSet up an offset relationship between two faces.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/GRPCFacesServiceV1.html#import-detail","title":"GRPCFacesServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/GRPCFacesServiceV1.html#attribute-detail","title":"GRPCFacesServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCFacesServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/faces/GRPCFacesServiceV1.html#method-detail","title":"GRPCFacesServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCFacesServiceV1.get_surface(**kwargs) -> dict\n\nGet the surface of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_box_uv(**kwargs) -> dict\n\nGet the UV box of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_area(**kwargs) -> dict\n\nGet the area of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_edges(**kwargs) -> dict\n\nGet the edges of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_vertices(**kwargs) -> dict\n\nGet the vertices of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_loops(**kwargs) -> dict\n\nGet the loops of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_color(**kwargs) -> dict\n\nGet the color of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.set_color(**kwargs) -> dict\n\nSet the color of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_normal(**kwargs) -> dict\n\nGet the normal of a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.evaluate(**kwargs) -> dict\n\nEvaluate a face at a given parameter.\n\n\n\nabstractmethod GRPCFacesServiceV1.create_iso_parametric_curve(**kwargs) -> dict\n\nCreate an iso-parametric curve on a face.\n\n\n\nabstractmethod GRPCFacesServiceV1.extrude_faces(**kwargs) -> dict\n\nExtrude a selection of faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.extrude_faces_up_to(**kwargs) -> dict\n\nExtrude a selection of faces up to another object.\n\n\n\nabstractmethod GRPCFacesServiceV1.offset_faces_set_radius(**kwargs) -> dict\n\nOffset a selection of faces by a given radius.\n\n\n\nabstractmethod GRPCFacesServiceV1.revolve_faces(**kwargs) -> dict\n\nRevolve a selection of faces around an axis.\n\n\n\nabstractmethod GRPCFacesServiceV1.revolve_faces_up_to(**kwargs) -> dict\n\nRevolve a selection of faces around an axis up to another object.\n\n\n\nabstractmethod GRPCFacesServiceV1.revolve_faces_by_helix(**kwargs) -> dict\n\nRevolve a selection of faces around an axis by a helix.\n\n\n\nabstractmethod GRPCFacesServiceV1.replace_faces(**kwargs) -> dict\n\nReplace a selection of faces with new faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.thicken_faces(**kwargs) -> dict\n\nThicken a selection of faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.draft_faces(**kwargs) -> dict\n\nDraft a selection of faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.get_round_info(**kwargs) -> dict\n\nGet round information for a selection of faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.offset_faces(**kwargs) -> dict\n\nOffset a selection of faces.\n\n\n\nabstractmethod GRPCFacesServiceV1.setup_offset_relationship(**kwargs) -> dict\n\nSet up an offset relationship between two faces."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/SketchSegment.html#sketchsegment","title":"SketchSegment","text":"SketchSegment\n\n\n\nclass ansys.geometry.core.sketch.segment.SketchSegment(start: ansys.geometry.core.math.point.Point2D, end: ansys.geometry.core.math.point.Point2D, plane: ansys.geometry.core.math.plane.Plane = Plane())\n\nBases: ansys.geometry.core.sketch.edge.SketchEdge, ansys.geometry.core.shapes.curves.line.Line\n\nProvides segment representation of a line.\n\nParameters\n\nstart\n\nPoint2D\n\nStarting point of the line segment.\n\nend\n\nPoint2D\n\nEnding point of the line segment.\n\nplane\n\nPlane, optional\n\nPlane containing the sketched circle, which is the global XY plane\nby default."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/SketchSegment.html#overview","title":"SketchSegment > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nplane_change\n\nRedefine the plane containing SketchSegment objects.\n\nProperties\n\n\n\n\n\nstart\n\nStarting point of the segment.\n\nend\n\nEnding point of the segment.\n\nlength\n\nLength of the segment.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the SketchSegment class.\n\n__ne__\n\nNot equals operator for the SketchSegment class."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/SketchSegment.html#import-detail","title":"SketchSegment > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/SketchSegment.html#property-detail","title":"SketchSegment > Property detail","text":"Property detail\n\n\n\nproperty SketchSegment.start: ansys.geometry.core.math.point.Point2D\n\nStarting point of the segment.\n\n\n\nproperty SketchSegment.end: ansys.geometry.core.math.point.Point2D\n\nEnding point of the segment.\n\n\n\nproperty SketchSegment.length: pint.Quantity\n\nLength of the segment.\n\n\n\nproperty SketchSegment.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/segment/SketchSegment.html#method-detail","title":"SketchSegment > Method detail","text":"Method detail\n\n\n\nSketchSegment.__eq__(other: SketchSegment) -> bool\n\nEquals operator for the SketchSegment class.\n\n\n\nSketchSegment.__ne__(other: SketchSegment) -> bool\n\nNot equals operator for the SketchSegment class.\n\n\n\nSketchSegment.plane_change(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nRedefine the plane containing SketchSegment objects.\n\nParameters\n\nplane\n\nPlane\n\nDesired new plane that is to contain the sketched segment.\n\nNotes\n\nThis implies that their 3D definition might suffer changes."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/UnsimplifiedFaceProblemAreas.html#unsimplifiedfaceproblemareas","title":"UnsimplifiedFaceProblemAreas","text":"UnsimplifiedFaceProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.UnsimplifiedFaceProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, faces: list[ansys.geometry.core.designer.face.Face])\n\nBases: ProblemArea\n\nRepresents a unsimplified face problem area with unique identifier and associated faces.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nfaces\n\npython:list[Face]\n\nList of faces associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/UnsimplifiedFaceProblemAreas.html#overview","title":"UnsimplifiedFaceProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nfaces\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/UnsimplifiedFaceProblemAreas.html#import-detail","title":"UnsimplifiedFaceProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/UnsimplifiedFaceProblemAreas.html#property-detail","title":"UnsimplifiedFaceProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty UnsimplifiedFaceProblemAreas.faces: list[ansys.geometry.core.designer.face.Face]\n\nThe list of faces connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/UnsimplifiedFaceProblemAreas.html#method-detail","title":"UnsimplifiedFaceProblemAreas > Method detail","text":"Method detail\n\n\n\nUnsimplifiedFaceProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Examples","href":"examples/01_getting_started/02_units.html#pyansys-geometry-101-units","title":"Examples > PyAnsys Geometry 101: Units","text":"PyAnsys Geometry 101: Units\n\nTo handle units inside the source code, PyAnsys Geometry uses Pint, a third-party open source software that other PyAnsys libraries also use.\n\nThe following code examples show how to operate with units inside the PyAnsys Geometry codebase and create objects with different units."},{"objectID":"Examples","href":"examples/01_getting_started/02_units.html#import-units-handler","title":"Examples > PyAnsys Geometry 101: Units > Import units handler","text":"Import units handler\n\nThe following line of code imports the units handler: pint.util.UnitRegistry. For more information on the UnitRegistry class in the pint API, see Most important classes in the Pint documentation.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/02_units.html#create-and-work-with-quantity-objects","title":"Examples > PyAnsys Geometry 101: Units > Create and work with Quantity objects","text":"Create and work with Quantity objects\n\nWith the UnitRegistry object called UNITS, you can create Quantity objects. A Quantity object is simply a container class with two core elements:\n\nA number\n\nA unit\n\nQuantity objects have convenience methods, including those for transforming to different units and comparing magnitudes, values, and units. For more information on the Quantity class in the pint API, see Most important classes in the Pint documentation. You can also step through this Pint tutorial.\n\n\n\n\n\n\n\n\n\nPyAnsys Geometry objects work by returning Quantity objects whenever the property requested has a physical meaning.\n\nReturn Quantity objects for Point3D objects.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/02_units.html#use-default-units","title":"Examples > PyAnsys Geometry 101: Units > Use default units","text":"Use default units\n\nPyAnsys Geometry implements the concept of default units.\n\n\n\n\n\n\n\n\n\nIt is important to differentiate between client-side default units and server-side default units. You are able to control both of them.\n\nPrint the default server unit length.\n\n\n\n\n\n\n\n\n\nUse default units.\n\n\n\n\n\n\n\n\n\nPyAnsys Geometry has certain auxiliary classes implemented that provide proper unit checking when assigning values. Although they are basically intended for internal use of the library, you can define them for use.\n\n\n\n\n\nStart with Distance. The main difference between a Quantity object (that is, from pint import Quantity) and a Distance is that there is an active check on the units passed (in case they are not the default ones). Here are some examples.\n\n\n\n\n\n\n\n\n\nThe next two code examples show how unreasonable operations raise errors.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe same behavior applies to the Angle object. Here are some examples.\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurfaceEvaluation.html#nurbssurfaceevaluation","title":"NURBSSurfaceEvaluation","text":"NURBSSurfaceEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.nurbs.NURBSSurfaceEvaluation(nurbs_surface: NURBSSurface, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nProvides evaluation of a NURBS surface at a given parameter.\n\nParameters\n\nnurbs_surface: ~ansys.geometry.core.shapes.surfaces.nurbs.NURBSSurface\n\nNURBS surface to evaluate.\n\nparameter: Real\n\nParameter to evaluate the NURBS surface at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurfaceEvaluation.html#overview","title":"NURBSSurfaceEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsurface\n\nSurface being evaluated.\n\nparameter\n\nParameter the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nThe second derivative with respect to the U and V parameters.\n\nvv_derivative\n\nThe second derivative with respect to v.\n\nmin_curvature\n\nMinimum curvature.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurfaceEvaluation.html#import-detail","title":"NURBSSurfaceEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/nurbs/NURBSSurfaceEvaluation.html#property-detail","title":"NURBSSurfaceEvaluation > Property detail","text":"Property detail\n\n\n\nproperty NURBSSurfaceEvaluation.surface: NURBSSurface\n\nSurface being evaluated.\n\n\n\nproperty NURBSSurfaceEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter the evaluation is based upon.\n\n\n\nproperty NURBSSurfaceEvaluation.position: ansys.geometry.core.math.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint on the surface at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the surface.\n\nReturns\n\nUnitVector3D\n\nNormal to the surface at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the U parameter at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the V parameter at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U parameter at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nThe second derivative with respect to the U and V parameters.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U and V parameters at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nThe second derivative with respect to v.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the V parameter at this evaluation.\n\n\n\nproperty NURBSSurfaceEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nMinimum curvature.\n\n\n\nproperty NURBSSurfaceEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nAbstractmethod\n\n\n\nMinimum curvature direction.\n\n\n\nproperty NURBSSurfaceEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nMaximum curvature.\n\n\n\nproperty NURBSSurfaceEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nAbstractmethod\n\n\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/index.html#the-tools-package","title":"The tools package","text":"The tools package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/index.html#summary","title":"The tools package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ncheck_geometry\n\nModule for repair tool message.\n\nmeasurement_tools\n\nProvides tools for measurement.\n\nprepare_tools\n\nProvides tools for preparing geometry for use with simulation.\n\nproblem_areas\n\nThe problem area definition.\n\nrepair_tool_message\n\nModule for repair tool message.\n\nrepair_tools\n\nProvides tools for repairing bodies.\n\nunsupported\n\nUnsupported functions for the PyAnsys Geometry library.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/index.html#description","title":"The tools package > Description","text":"Description\n\nPyAnsys Geometry tools subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/index.html#the-edgepy-module","title":"The edge.py module","text":"The edge.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/index.html#summary","title":"The edge.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nEdge\n\nRepresents a single edge of a body within the design assembly.\n\nEnums\n\n\n\n\n\nCurveType\n\nProvides values for the curve types supported.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/edge/index.html#description","title":"The edge.py module > Description","text":"Description\n\nModule for managing an edge."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/CoordinateSystem.html#coordinatesystem","title":"CoordinateSystem","text":"CoordinateSystem\n\n\n\nclass ansys.geometry.core.designer.coordinate_system.CoordinateSystem(name: str, frame: ansys.geometry.core.math.frame.Frame, parent_component: ansys.geometry.core.designer.component.Component, grpc_client: ansys.geometry.core.connection.client.GrpcClient, preexisting_id: str | None = None)\n\nRepresents a user-defined coordinate system within the design assembly.\n\nThis class synchronizes to a design within a supporting Geometry\nservice instance.\n\nParameters\n\nname\n\npython:str\n\nUser-defined label for the coordinate system.\n\nframe\n\nFrame\n\nFrame defining the coordinate system bounds.\n\nparent_component\n\nComponent, default: Component\n\nParent component the coordinate system is assigned against.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting Geometry service instance for design modeling."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/CoordinateSystem.html#overview","title":"CoordinateSystem > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the coordinate system.\n\nname\n\nName of the coordinate system.\n\nframe\n\nFrame of the coordinate system.\n\nparent_component\n\nParent component of the coordinate system.\n\nis_alive\n\nFlag indicating if coordinate system is still alive on the server.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the coordinate system as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/CoordinateSystem.html#import-detail","title":"CoordinateSystem > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/CoordinateSystem.html#property-detail","title":"CoordinateSystem > Property detail","text":"Property detail\n\n\n\nproperty CoordinateSystem.id: str\n\nID of the coordinate system.\n\n\n\nproperty CoordinateSystem.name: str\n\nName of the coordinate system.\n\n\n\nproperty CoordinateSystem.frame: ansys.geometry.core.math.frame.Frame\n\nFrame of the coordinate system.\n\n\n\nproperty CoordinateSystem.parent_component: ansys.geometry.core.designer.component.Component\n\nParent component of the coordinate system.\n\n\n\nproperty CoordinateSystem.is_alive: bool\n\nFlag indicating if coordinate system is still alive on the server."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/coordinate_system/CoordinateSystem.html#method-detail","title":"CoordinateSystem > Method detail","text":"Method detail\n\n\n\nCoordinateSystem.__repr__() -> str\n\nRepresent the coordinate system as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/index.html#the-curvespy-module","title":"The curves.py module","text":"The curves.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/index.html#summary","title":"The curves.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCurvesService\n\nCurves service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/curves/index.html#description","title":"The curves.py module > Description","text":"Description\n\nModule containing the curves service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/SectionAnchorType.html#sectionanchortype","title":"SectionAnchorType","text":"SectionAnchorType\n\n\n\nclass ansys.geometry.core.designer.beam.SectionAnchorType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the section anchor types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/SectionAnchorType.html#overview","title":"SectionAnchorType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCENTROID\n\n\n\nSHEAR_CENTER\n\n\n\nANCHOR_LOCATION\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/SectionAnchorType.html#import-detail","title":"SectionAnchorType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/SectionAnchorType.html#attribute-detail","title":"SectionAnchorType > Attribute detail","text":"Attribute detail\n\n\n\nSectionAnchorType.CENTROID = 0\n\n\n\n\n\nSectionAnchorType.SHEAR_CENTER = 1\n\n\n\n\n\nSectionAnchorType.ANCHOR_LOCATION = 2\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterType.html#parametertype","title":"ParameterType","text":"ParameterType\n\n\n\nclass ansys.geometry.core.parameters.parameter.ParameterType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the parameter types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterType.html#overview","title":"ParameterType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDIMENSIONTYPE_UNKNOWN\n\n\n\nDIMENSIONTYPE_LINEAR\n\n\n\nDIMENSIONTYPE_DIAMETRIC\n\n\n\nDIMENSIONTYPE_RADIAL\n\n\n\nDIMENSIONTYPE_ARC\n\n\n\nDIMENSIONTYPE_AREA\n\n\n\nDIMENSIONTYPE_VOLUME\n\n\n\nDIMENSIONTYPE_MASS\n\n\n\nDIMENSIONTYPE_ANGULAR\n\n\n\nDIMENSIONTYPE_COUNT\n\n\n\nDIMENSIONTYPE_UNITLESS\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterType.html#import-detail","title":"ParameterType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/parameter/ParameterType.html#attribute-detail","title":"ParameterType > Attribute detail","text":"Attribute detail\n\n\n\nParameterType.DIMENSIONTYPE_UNKNOWN = 0\n\n\n\n\n\nParameterType.DIMENSIONTYPE_LINEAR = 1\n\n\n\n\n\nParameterType.DIMENSIONTYPE_DIAMETRIC = 2\n\n\n\n\n\nParameterType.DIMENSIONTYPE_RADIAL = 3\n\n\n\n\n\nParameterType.DIMENSIONTYPE_ARC = 4\n\n\n\n\n\nParameterType.DIMENSIONTYPE_AREA = 5\n\n\n\n\n\nParameterType.DIMENSIONTYPE_VOLUME = 6\n\n\n\n\n\nParameterType.DIMENSIONTYPE_MASS = 7\n\n\n\n\n\nParameterType.DIMENSIONTYPE_ANGULAR = 8\n\n\n\n\n\nParameterType.DIMENSIONTYPE_COUNT = 9\n\n\n\n\n\nParameterType.DIMENSIONTYPE_UNITLESS = 10\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/ProductInstance.html#productinstance","title":"ProductInstance","text":"ProductInstance\n\n\n\nclass ansys.geometry.core.connection.product_instance.ProductInstance(pid: int)\n\nProductInstance class.\n\nThis class is used as a handle for a local session of Ansys Product’s backend: Discovery,\nWindows Geometry Service or SpaceClaim.\n\nParameters\n\npid\n\npython:int\n\nThe local instance’s process identifier. This allows to keep track of the process\nand close it if need be."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/ProductInstance.html#overview","title":"ProductInstance > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nclose\n\nClose the process associated to the pid."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/ProductInstance.html#import-detail","title":"ProductInstance > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/ProductInstance.html#method-detail","title":"ProductInstance > Method detail","text":"Method detail\n\n\n\nProductInstance.close() -> bool\n\nClose the process associated to the pid."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/InspectResult.html#inspectresult","title":"InspectResult","text":"InspectResult\n\n\n\nclass ansys.geometry.core.tools.check_geometry.InspectResult(grpc_client: ansys.geometry.core.connection.client.GrpcClient, body: ansys.geometry.core.designer.body.Body, issues: list[GeometryIssue])\n\nProvides the result of the inspect geometry operation."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/InspectResult.html#overview","title":"InspectResult > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nrepair\n\nRepair the problem area.\n\nProperties\n\n\n\n\n\nbody\n\nThe body for which issues are found.\n\nissues\n\nThe list of issues for the body."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/InspectResult.html#import-detail","title":"InspectResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/InspectResult.html#property-detail","title":"InspectResult > Property detail","text":"Property detail\n\n\n\nproperty InspectResult.body: ansys.geometry.core.designer.body.Body\n\nThe body for which issues are found.\n\n\n\nproperty InspectResult.issues: list[GeometryIssue]\n\nThe list of issues for the body."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/InspectResult.html#method-detail","title":"InspectResult > Method detail","text":"Method detail\n\n\n\nInspectResult.repair() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nRepair the problem area.\n\nReturns\n\nRepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/ExportIdData.html#exportiddata","title":"ExportIdData","text":"ExportIdData\n\n\n\nclass ansys.geometry.core.tools.unsupported.ExportIdData\n\nData for exporting persistent ids."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/ExportIdData.html#overview","title":"ExportIdData > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nmoniker\n\n\n\nid_type\n\n\n\nvalue\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/ExportIdData.html#import-detail","title":"ExportIdData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/ExportIdData.html#attribute-detail","title":"ExportIdData > Attribute detail","text":"Attribute detail\n\n\n\nExportIdData.moniker: str\n\n\n\n\n\nExportIdData.id_type: PersistentIdType\n\n\n\n\n\nExportIdData.value: str\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/index.html#the-commandspy-module","title":"The commands.py module","text":"The commands.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/index.html#summary","title":"The commands.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCommandsService\n\nCommands service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/commands/index.html#description","title":"The commands.py module > Description","text":"Description\n\nModule containing the commands service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/index.html#the-propertypy-module","title":"The property.py module","text":"The property.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/index.html#summary","title":"The property.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterialProperty\n\nProvides the data structure for a material property.\n\nEnums\n\n\n\n\n\nMaterialPropertyType\n\nEnum holding the possible values for MaterialProperty objects.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/materials/property/index.html#description","title":"The property.py module > Description","text":"Description\n\nProvides the MaterialProperty class."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/GRPCNamedSelectionServiceV0.html#grpcnamedselectionservicev0","title":"GRPCNamedSelectionServiceV0","text":"GRPCNamedSelectionServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.named_selection.GRPCNamedSelectionServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.named_selection.GRPCNamedSelectionService\n\nNamed Selection service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nNamed Selection service. It is specifically designed for the v0 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/GRPCNamedSelectionServiceV0.html#overview","title":"GRPCNamedSelectionServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_named_selection\n\nGet the named selection by its id.\n\ncreate_named_selection\n\nCreate a named selection.\n\ndelete_named_selection\n\nDelete a named selection by id.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/GRPCNamedSelectionServiceV0.html#import-detail","title":"GRPCNamedSelectionServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/GRPCNamedSelectionServiceV0.html#attribute-detail","title":"GRPCNamedSelectionServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCNamedSelectionServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/named_selection/GRPCNamedSelectionServiceV0.html#method-detail","title":"GRPCNamedSelectionServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCNamedSelectionServiceV0.get_named_selection(**kwargs)\n\nGet the named selection by its id.\n\n\n\nGRPCNamedSelectionServiceV0.create_named_selection(**kwargs)\n\nCreate a named selection.\n\n\n\nGRPCNamedSelectionServiceV0.delete_named_selection(**kwargs)\n\nDelete a named selection by id."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/index.html#the-repair_toolspy-module","title":"The repair_tools.py module","text":"The repair_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/index.html#summary","title":"The repair_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCRepairToolsService\n\nAbstract base class for gRPC-based repair tools service.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/repair_tools/index.html#description","title":"The repair_tools.py module > Description","text":"Description\n\nModule containing the repair tools service implementation (abstraction layer).\n\nThis module defines an abstract base class for a gRPC-based repair tools service.\nThe class provides a set of abstract methods for identifying and repairing various\ngeometry issues, such as split edges, extra edges, duplicate faces, and more."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCircularProfile.html#beamcircularprofile","title":"BeamCircularProfile","text":"BeamCircularProfile\n\n\n\nclass ansys.geometry.core.designer.beam.BeamCircularProfile(id: str, name: str, radius: ansys.geometry.core.misc.measurements.Distance, center: ansys.geometry.core.math.point.Point3D, direction_x: ansys.geometry.core.math.vector.UnitVector3D, direction_y: ansys.geometry.core.math.vector.UnitVector3D)\n\nBases: BeamProfile\n\nRepresents a single circular beam profile.\n\nThis profile synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the beam profile.\n\nname\n\npython:str\n\nUser-defined label for the beam profile.\n\nradius\n\nDistance\n\nRadius of the circle.\n\ncenter: Point3D\n\n3D point representing the center of the circle.\n\ndirection_x: UnitVector3D\n\nX-axis direction.\n\ndirection_y: UnitVector3D\n\nY-axis direction.\n\nNotes\n\nBeamProfile objects are expected to be created from the Design object.\nThis means that you are not expected to instantiate your own BeamProfile\nobject. You should call the specific Design API for the BeamProfile desired."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCircularProfile.html#overview","title":"BeamCircularProfile > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nradius\n\nRadius of the circular beam profile.\n\ncenter\n\nCenter of the circular beam profile.\n\ndirection_x\n\nX-axis direction of the circular beam profile.\n\ndirection_y\n\nY-axis direction of the circular beam profile.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the BeamCircularProfile as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCircularProfile.html#import-detail","title":"BeamCircularProfile > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCircularProfile.html#property-detail","title":"BeamCircularProfile > Property detail","text":"Property detail\n\n\n\nproperty BeamCircularProfile.radius: ansys.geometry.core.misc.measurements.Distance\n\nRadius of the circular beam profile.\n\n\n\nproperty BeamCircularProfile.center: ansys.geometry.core.math.point.Point3D\n\nCenter of the circular beam profile.\n\n\n\nproperty BeamCircularProfile.direction_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-axis direction of the circular beam profile.\n\n\n\nproperty BeamCircularProfile.direction_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-axis direction of the circular beam profile."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamCircularProfile.html#method-detail","title":"BeamCircularProfile > Method detail","text":"Method detail\n\n\n\nBeamCircularProfile.__repr__() -> str\n\nRepresent the BeamCircularProfile as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/index.html#the-edgespy-module","title":"The edges.py module","text":"The edges.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/index.html#summary","title":"The edges.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCEdgesServiceV0\n\nEdges service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/index.html#description","title":"The edges.py module > Description","text":"Description\n\nModule containing the edges service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/math/constants/index.html#the-constantspy-module","title":"The constants.py module","text":"The constants.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/constants/index.html#summary","title":"The constants.py module > Summary","text":"Summary\n\nConstants\n\n\n\n\n\nDEFAULT_POINT3D\n\nDefault value for a 3D point.\n\nDEFAULT_POINT2D\n\nDefault value for a 2D point.\n\nIDENTITY_MATRIX33\n\nIdentity for a Matrix33 object.\n\nIDENTITY_MATRIX44\n\nIdentity for a Matrix44 object.\n\nUNITVECTOR3D_X\n\nDefault 3D unit vector in the Cartesian traditional X direction.\n\nUNITVECTOR3D_Y\n\nDefault 3D unit vector in the Cartesian traditional Y direction.\n\nUNITVECTOR3D_Z\n\nDefault 3D unit vector in the Cartesian traditional Z direction.\n\nUNITVECTOR2D_X\n\nDefault 2D unit vector in the Cartesian traditional X direction.\n\nUNITVECTOR2D_Y\n\nDefault 2D unit vector  in the Cartesian traditional Y direction.\n\nZERO_VECTOR3D\n\nZero-valued Vector3D object.\n\nZERO_VECTOR2D\n\nZero-valued Vector2D object.\n\nZERO_POINT3D\n\nZero-valued Point3D object.\n\nZERO_POINT2D\n\nZero-valued Point2D object."},{"objectID":"Home","href":"api/ansys/geometry/core/math/constants/index.html#description","title":"The constants.py module > Description","text":"Description\n\nProvides mathematical constants."},{"objectID":"Home","href":"api/ansys/geometry/core/math/constants/index.html#module-detail","title":"The constants.py module > Module detail","text":"Module detail\n\n\n\nconstants.DEFAULT_POINT3D\n\nDefault value for a 3D point.\n\n\n\nconstants.DEFAULT_POINT2D\n\nDefault value for a 2D point.\n\n\n\nconstants.IDENTITY_MATRIX33\n\nIdentity for a Matrix33 object.\n\n\n\nconstants.IDENTITY_MATRIX44\n\nIdentity for a Matrix44 object.\n\n\n\nconstants.UNITVECTOR3D_X\n\nDefault 3D unit vector in the Cartesian traditional X direction.\n\n\n\nconstants.UNITVECTOR3D_Y\n\nDefault 3D unit vector in the Cartesian traditional Y direction.\n\n\n\nconstants.UNITVECTOR3D_Z\n\nDefault 3D unit vector in the Cartesian traditional Z direction.\n\n\n\nconstants.UNITVECTOR2D_X\n\nDefault 2D unit vector in the Cartesian traditional X direction.\n\n\n\nconstants.UNITVECTOR2D_Y\n\nDefault 2D unit vector  in the Cartesian traditional Y direction.\n\n\n\nconstants.ZERO_VECTOR3D\n\nZero-valued Vector3D object.\n\n\n\nconstants.ZERO_VECTOR2D\n\nZero-valued Vector2D object.\n\n\n\nconstants.ZERO_POINT3D\n\nZero-valued Point3D object.\n\n\n\nconstants.ZERO_POINT2D\n\nZero-valued Point2D object."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/index.html#the-repair_tool_messagepy-module","title":"The repair_tool_message.py module","text":"The repair_tool_message.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/index.html#summary","title":"The repair_tool_message.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nRepairToolMessage\n\nProvides return message for the repair tool methods.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/repair_tool_message/index.html#description","title":"The repair_tool_message.py module > Description","text":"Description\n\nModule for repair tool message."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/index.html#the-sketch-package","title":"The sketch package","text":"The sketch package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/index.html#summary","title":"The sketch package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\narc\n\nProvides for creating and managing an arc.\n\nbox\n\nProvides for creating and managing a box (quadrilateral).\n\ncircle\n\nProvides for creating and managing a circle.\n\nedge\n\nProvides for creating and managing an edge.\n\nellipse\n\nProvides for creating and managing an ellipse.\n\nface\n\nProvides for creating and managing a face (closed 2D sketch).\n\ngears\n\nModule for creating and managing gears.\n\nnurbs\n\nProvides for creating and managing a nurbs sketch curve.\n\npolygon\n\nProvides for creating and managing a polygon.\n\nsegment\n\nProvides for creating and managing a segment.\n\nsketch\n\nProvides for creating and managing a sketch.\n\nslot\n\nProvides for creating and managing a slot.\n\ntrapezoid\n\nProvides for creating and managing a trapezoid.\n\ntriangle\n\nProvides for creating and managing a triangle.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/index.html#description","title":"The sketch package > Description","text":"Description\n\nPyAnsys Geometry sketch subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/index.html#the-named_selectionpy-module","title":"The named_selection.py module","text":"The named_selection.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/index.html#summary","title":"The named_selection.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCNamedSelectionService\n\nNamed Selection service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/named_selection/index.html#description","title":"The named_selection.py module > Description","text":"Description\n\nModule containing the Named Selection service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/GRPCBodyServiceV1.html#grpcbodyservicev1","title":"GRPCBodyServiceV1","text":"GRPCBodyServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.bodies.GRPCBodyServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.bodies.GRPCBodyService\n\nBody service for gRPC communication with the Geometry server.\n\nThis class provides methods to create and manipulate bodies in the\nGeometry server using gRPC. It is specifically designed for the v1\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/GRPCBodyServiceV1.html#overview","title":"GRPCBodyServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncreate_sphere_body\n\nCreate a sphere body.\n\ncreate_extruded_body\n\nCreate an extruded body.\n\ncreate_sweeping_profile_body\n\nCreate a sweeping profile body.\n\ncreate_sweeping_chain\n\nCreate a sweeping chain.\n\nsweep_with_guide\n\nSweep with a guide.\n\ncreate_extruded_body_from_face_profile\n\nCreate an extruded body from a face profile.\n\ncreate_extruded_body_from_loft_profiles\n\nCreate an extruded body from loft profiles.\n\ncreate_planar_body\n\nCreate a planar body.\n\ncreate_body_from_face\n\nCreate a body from a face.\n\ncreate_surface_body\n\nCreate a surface body.\n\ncreate_surface_body_from_trimmed_curves\n\nCreate a surface body from trimmed curves.\n\ntranslate\n\nTranslate a body.\n\ndelete\n\nDelete a body.\n\nis_suppressed\n\nCheck if a body is suppressed.\n\nget_color\n\nGet the color of a body.\n\nget_faces\n\nGet the faces of a body.\n\nget_edges\n\nGet the edges of a body.\n\nget_vertices\n\nGet the vertices of a body.\n\nget_volume\n\nGet the volume of a body.\n\nget_bounding_box\n\nGet the bounding box of a body.\n\nset_assigned_material\n\nSet the assigned material of a body.\n\nget_assigned_material\n\nGet the assigned material of a body.\n\nremove_assigned_material\n\nRemove the assigned material of a body.\n\nset_name\n\nSet the name of a body.\n\nset_fill_style\n\nSet the fill style of a body.\n\nset_suppressed\n\nSet the suppressed state of a body.\n\nset_color\n\nSet the color of a body.\n\nrotate\n\nRotate a body.\n\nscale\n\nScale a body.\n\nmirror\n\nMirror a body.\n\nmap\n\nMap a body.\n\nget_collision\n\nGet the collision of a body.\n\ncopy\n\nCopy a body.\n\nget_tesellation\n\nGet the tessellation of a body.\n\nget_tesellation_with_options\n\nGet the tessellation of a body with options.\n\nboolean\n\nBoolean operation.\n\ncombine\n\nBoolean operation through command.\n\nsplit_body\n\nSplit a body.\n\ncreate_body_from_loft_profiles_with_guides\n\nCreate a body from loft profiles with guides.\n\ncombine_merge\n\nCombine and merge bodies.\n\nassign_midsurface_thickness\n\nAssign a thickness to a midsurface body.\n\nassign_midsurface_offset\n\nAssign a offset to a midsurface body.\n\nshell\n\nShell a body.\n\nremove_faces\n\nRemove faces from a body.\n\nimprint_curves\n\nImprint curves on a body.\n\nproject_curves\n\nProject curves on a body.\n\nimprint_projected_curves\n\nImprint projected curves on a body.\n\nget_full_tessellation\n\nGet the full tessellation of a body.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/GRPCBodyServiceV1.html#import-detail","title":"GRPCBodyServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/GRPCBodyServiceV1.html#attribute-detail","title":"GRPCBodyServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCBodyServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/bodies/GRPCBodyServiceV1.html#method-detail","title":"GRPCBodyServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCBodyServiceV1.create_sphere_body(**kwargs) -> dict\n\nCreate a sphere body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_extruded_body(**kwargs) -> dict\n\nCreate an extruded body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_sweeping_profile_body(**kwargs) -> dict\n\nCreate a sweeping profile body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_sweeping_chain(**kwargs) -> dict\n\nCreate a sweeping chain.\n\n\n\nabstractmethod GRPCBodyServiceV1.sweep_with_guide(**kwargs) -> dict\n\nSweep with a guide.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_extruded_body_from_face_profile(**kwargs) -> dict\n\nCreate an extruded body from a face profile.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_extruded_body_from_loft_profiles(**kwargs) -> dict\n\nCreate an extruded body from loft profiles.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_planar_body(**kwargs) -> dict\n\nCreate a planar body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_body_from_face(**kwargs) -> dict\n\nCreate a body from a face.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_surface_body(**kwargs) -> dict\n\nCreate a surface body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_surface_body_from_trimmed_curves(**kwargs) -> dict\n\nCreate a surface body from trimmed curves.\n\n\n\nabstractmethod GRPCBodyServiceV1.translate(**kwargs) -> dict\n\nTranslate a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.delete(**kwargs) -> dict\n\nDelete a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.is_suppressed(**kwargs) -> dict\n\nCheck if a body is suppressed.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_color(**kwargs) -> dict\n\nGet the color of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_faces(**kwargs) -> dict\n\nGet the faces of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_edges(**kwargs) -> dict\n\nGet the edges of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_vertices(**kwargs) -> dict\n\nGet the vertices of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_volume(**kwargs) -> dict\n\nGet the volume of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.set_assigned_material(**kwargs) -> dict\n\nSet the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_assigned_material(**kwargs) -> dict\n\nGet the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.remove_assigned_material(**kwargs)\n\nRemove the assigned material of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.set_name(**kwargs) -> dict\n\nSet the name of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.set_fill_style(**kwargs) -> dict\n\nSet the fill style of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.set_suppressed(**kwargs) -> dict\n\nSet the suppressed state of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.set_color(**kwargs) -> dict\n\nSet the color of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.rotate(**kwargs) -> dict\n\nRotate a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.scale(**kwargs) -> dict\n\nScale a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.mirror(**kwargs) -> dict\n\nMirror a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.map(**kwargs) -> dict\n\nMap a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_collision(**kwargs) -> dict\n\nGet the collision of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.copy(**kwargs) -> dict\n\nCopy a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_tesellation(**kwargs) -> dict\n\nGet the tessellation of a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_tesellation_with_options(**kwargs) -> dict\n\nGet the tessellation of a body with options.\n\n\n\nabstractmethod GRPCBodyServiceV1.boolean(**kwargs) -> dict\n\nBoolean operation.\n\n\n\nabstractmethod GRPCBodyServiceV1.combine(**kwargs) -> dict\n\nBoolean operation through command.\n\n\n\nabstractmethod GRPCBodyServiceV1.split_body(**kwargs) -> dict\n\nSplit a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.create_body_from_loft_profiles_with_guides(**kwargs) -> dict\n\nCreate a body from loft profiles with guides.\n\n\n\nabstractmethod GRPCBodyServiceV1.combine_merge(**kwargs) -> dict\n\nCombine and merge bodies.\n\n\n\nabstractmethod GRPCBodyServiceV1.assign_midsurface_thickness(**kwargs) -> dict\n\nAssign a thickness to a midsurface body.\n\n\n\nabstractmethod GRPCBodyServiceV1.assign_midsurface_offset(**kwargs) -> dict\n\nAssign a offset to a midsurface body.\n\n\n\nabstractmethod GRPCBodyServiceV1.shell(**kwargs) -> dict\n\nShell a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.remove_faces(**kwargs) -> dict\n\nRemove faces from a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.imprint_curves(**kwargs) -> dict\n\nImprint curves on a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.project_curves(**kwargs) -> dict\n\nProject curves on a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.imprint_projected_curves(**kwargs) -> dict\n\nImprint projected curves on a body.\n\n\n\nabstractmethod GRPCBodyServiceV1.get_full_tessellation(**kwargs) -> dict\n\nGet the full tessellation of a body."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/index.html#the-model_toolspy-module","title":"The model_tools.py module","text":"The model_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/index.html#summary","title":"The model_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCModelToolsServiceV0\n\nModel tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/model_tools/index.html#description","title":"The model_tools.py module > Description","text":"Description\n\nModule containing the model tools service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/index.html#the-box_uvpy-module","title":"The box_uv.py module","text":"The box_uv.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/index.html#summary","title":"The box_uv.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBoxUV\n\nProvides the implementation for BoxUV class.\n\nEnums\n\n\n\n\n\nLocationUV\n\nProvides the enumeration for indicating locations for BoxUV.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/box_uv/index.html#description","title":"The box_uv.py module > Description","text":"Description\n\nProvides the BoxUV class."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/GeometryRuntimeError.html#geometryruntimeerror","title":"GeometryRuntimeError","text":"GeometryRuntimeError\n\n\n\nexception ansys.geometry.core.errors.GeometryRuntimeError\n\nBases: RuntimeError\n\nProvides error message when Geometry service passes a runtime error."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/GeometryRuntimeError.html#import-detail","title":"GeometryRuntimeError > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/index.html#the-gearspy-module","title":"The gears.py module","text":"The gears.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/index.html#summary","title":"The gears.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGear\n\nProvides the base class for sketching gears.\n\nDummyGear\n\nProvides the dummy class for sketching gears.\n\nSpurGear\n\nProvides the class for sketching spur gears.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/gears/index.html#description","title":"The gears.py module > Description","text":"Description\n\nModule for creating and managing gears."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/GRPCModelToolsService.html#grpcmodeltoolsservice","title":"GRPCModelToolsService","text":"GRPCModelToolsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.model_tools.GRPCModelToolsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nModel tools service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/GRPCModelToolsService.html#overview","title":"GRPCModelToolsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nchamfer\n\nCreate a chamfer on the specified edges of a body.\n\nfillet\n\nCreate a fillet on the specified edges of a body.\n\nfull_fillet\n\nCreate a full fillet on the specified edges of a body.\n\nmove_rotate\n\nRotate the specified entities.\n\nmove_translate\n\nTranslate the specified entities.\n\ncreate_sketch_line\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/GRPCModelToolsService.html#import-detail","title":"GRPCModelToolsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/GRPCModelToolsService.html#method-detail","title":"GRPCModelToolsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCModelToolsService.chamfer(**kwargs) -> dict\n\nCreate a chamfer on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsService.fillet(**kwargs) -> dict\n\nCreate a fillet on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsService.full_fillet(**kwargs) -> dict\n\nCreate a full fillet on the specified edges of a body.\n\n\n\nabstractmethod GRPCModelToolsService.move_rotate(**kwargs) -> dict\n\nRotate the specified entities.\n\n\n\nabstractmethod GRPCModelToolsService.move_translate(**kwargs) -> dict\n\nTranslate the specified entities.\n\n\n\nabstractmethod GRPCModelToolsService.create_sketch_line(**kwargs) -> dict\n\nCreate a sketch line in the design."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/conversions/index.html#the-conversionspy-module","title":"The conversions.py module","text":"The conversions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/conversions/index.html#summary","title":"The conversions.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nfrom_point3d_to_grpc_point\n\nConvert a Point3D class to a point gRPC message.\n\nfrom_grpc_point_to_point3d\n\nConvert a point gRPC message class to a Point3D class.\n\nfrom_point2d_to_grpc_point\n\nConvert a Point2D class to a point gRPC message.\n\nfrom_unit_vector_to_grpc_direction\n\nConvert a UnitVector3D class to a unit vector gRPC message.\n\nfrom_line_to_grpc_line\n\nConvert a Line to a line gRPC message.\n\nbuild_grpc_id\n\nBuild an EntityIdentifier gRPC message.\n\nfrom_grpc_material_to_material\n\nConvert a material gRPC message to a Material class.\n\nfrom_grpc_material_property_to_material_property\n\nConvert a material property gRPC message to a MaterialProperty class.\n\nfrom_frame_to_grpc_frame\n\nConvert a Frame class to a frame gRPC message.\n\nfrom_grpc_frame_to_frame\n\nConvert a frame gRPC message to a Frame class.\n\nfrom_plane_to_grpc_plane\n\nConvert a Plane class to a plane gRPC message.\n\nfrom_grpc_tess_to_pd\n\nConvert a Tessellation to pyvista.PolyData.\n\nfrom_grpc_tess_to_raw_data\n\nConvert a Tessellation to raw data.\n\nfrom_grpc_edge_tess_to_pd\n\nConvert a EdgeTessellation to pyvista.PolyData.\n\nfrom_grpc_edge_tess_to_raw_data\n\nConvert a EdgeTessellation to raw data.\n\nfrom_tess_options_to_grpc_tess_options\n\nConvert a TessellationOptions class to a tessellation options gRPC message.\n\nfrom_sketch_shapes_to_grpc_geometries\n\nConvert lists of SketchEdge and SketchFace to a gRPC message.\n\nfrom_sketch_edges_to_grpc_geometries\n\nConvert a list of SketchEdge to a gRPC message.\n\nfrom_sketch_arc_to_grpc_arc\n\nConvert an Arc class to an arc gRPC message.\n\nfrom_sketch_nurbs_to_grpc_nurbs_curve\n\nConvert a SketchNurbs class to a NURBS curve gRPC message.\n\nfrom_sketch_ellipse_to_grpc_ellipse\n\nConvert a SketchEllipse class to an ellipse gRPC message.\n\nfrom_sketch_circle_to_grpc_circle\n\nConvert a SketchCircle class to a circle gRPC message.\n\nfrom_sketch_polygon_to_grpc_polygon\n\nConvert a Polygon class to a polygon gRPC message.\n\nfrom_sketch_segment_to_grpc_line\n\nConvert a Segment class to a line gRPC message.\n\nfrom_trimmed_curve_to_grpc_trimmed_curve\n\nConvert a TrimmedCurve to a trimmed curve gRPC message.\n\nfrom_curve_to_grpc_curve\n\nConvert a Curve object to a curve gRPC message.\n\nfrom_nurbs_curve_to_grpc_nurbs_curve\n\nConvert a NURBSCurve to a NURBS curve gRPC message.\n\nfrom_nurbs_surface_to_grpc_nurbs_surface\n\nConvert a NURBSSurface to a NURBS surface gRPC message.\n\nfrom_grpc_nurbs_curve_to_nurbs_curve\n\nConvert a NURBS curve gRPC message to a NURBSCurve.\n\nfrom_knots_to_grpc_knots\n\nConvert a list of knots to a list of gRPC knot messages.\n\nfrom_grpc_curve_to_curve\n\nConvert a curve gRPC message to a Curve.\n\nfrom_trimmed_surface_to_grpc_trimmed_surface\n\nConvert a TrimmedSurface to a trimmed surface gRPC message.\n\nfrom_surface_to_grpc_surface\n\nConvert a Surface object to a surface gRPC message.\n\nfrom_grpc_surface_to_surface\n\nConvert a surface gRPC message to a Surface class.\n\nfrom_grpc_backend_type_to_backend_type\n\nConvert a gRPC backend type to a backend type.\n\nfrom_grpc_driving_dimension_to_driving_dimension\n\nConvert a gRPC driving dimension to a driving dimension object.\n\nfrom_driving_dimension_to_grpc_driving_dimension\n\nConvert a driving dimension object to a gRPC driving dimension.\n\nfrom_grpc_update_status_to_parameter_update_status\n\nConvert a gRPC update status to a parameter update status.\n\nfrom_design_file_format_to_grpc_part_export_format\n\nConvert from a DesignFileFormat object to a gRPC PartExportFormat one.\n\nfrom_material_to_grpc_material\n\nConvert a Material class to a material gRPC message.\n\nfrom_grpc_matrix_to_matrix\n\nConvert a gRPC matrix to a matrix.\n\nserialize_tracker_command_response\n\nSerialize a TrackerCommandResponse object into a dictionary."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/conversions/index.html#description","title":"The conversions.py module > Description","text":"Description\n\nModule containing v0 related conversions from PyAnsys Geometry objects to gRPC messages."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/conversions/index.html#module-detail","title":"The conversions.py module > Module detail","text":"Module detail\n\n\n\nconversions.from_point3d_to_grpc_point(point: ansys.geometry.core.math.point.Point3D) -> ansys.api.geometry.v0.models_pb2.Point\n\nConvert a Point3D class to a point gRPC message.\n\nParameters\n\npoint\n\nPoint3D\n\nSource point data.\n\nReturns\n\nGRPCPoint\n\nGeometry service gRPC point message. The unit is meters.\n\n\n\nconversions.from_grpc_point_to_point3d(point: ansys.api.geometry.v0.models_pb2.Point) -> ansys.geometry.core.math.point.Point3D\n\nConvert a point gRPC message class to a Point3D class.\n\nParameters\n\npoint\n\nGRPCPoint\n\nSource point data.\n\nReturns\n\nPoint3D\n\nConverted point.\n\n\n\nconversions.from_point2d_to_grpc_point(plane: ansys.geometry.core.math.plane.Plane, point2d: ansys.geometry.core.math.point.Point2D) -> ansys.api.geometry.v0.models_pb2.Point\n\nConvert a Point2D class to a point gRPC message.\n\nParameters\n\nplane\n\nPlane\n\nPlane for positioning the 2D point.\n\npoint\n\nPoint2D\n\nSource point data.\n\nReturns\n\nGRPCPoint\n\nGeometry service gRPC point message. The unit is meters.\n\n\n\nconversions.from_unit_vector_to_grpc_direction(unit_vector: ansys.geometry.core.math.vector.UnitVector3D) -> ansys.api.geometry.v0.models_pb2.Direction\n\nConvert a UnitVector3D class to a unit vector gRPC message.\n\nParameters\n\nunit_vector\n\nUnitVector3D\n\nSource vector data.\n\nReturns\n\nGRPCDirection\n\nGeometry service gRPC direction message.\n\n\n\nconversions.from_line_to_grpc_line(line: ansys.geometry.core.shapes.curves.line.Line) -> ansys.api.geometry.v0.models_pb2.Line\n\nConvert a Line to a line gRPC message.\n\nParameters\n\nline\n\nLine\n\nLine to convert.\n\nReturns\n\nGRPCLine\n\nGeometry service gRPC Line message.\n\n\n\nconversions.build_grpc_id(id: str) -> ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier\n\nBuild an EntityIdentifier gRPC message.\n\nParameters\n\nid\n\npython:str\n\nSource ID.\n\nReturns\n\nEntityIdentifier\n\nGeometry service gRPC entity identifier message.\n\n\n\nconversions.from_grpc_material_to_material(material: ansys.api.geometry.v0.models_pb2.Material) -> ansys.geometry.core.materials.material.Material\n\nConvert a material gRPC message to a Material class.\n\nParameters\n\nmaterial\n\nGRPCMaterial\n\nMaterial gRPC message.\n\nReturns\n\nMaterial\n\nConverted material.\n\n\n\nconversions.from_grpc_material_property_to_material_property(material_property: ansys.api.geometry.v0.models_pb2.MaterialProperty) -> ansys.geometry.core.materials.property.MaterialProperty\n\nConvert a material property gRPC message to a MaterialProperty class.\n\nParameters\n\nmaterial_property\n\nGRPCMaterialProperty\n\nMaterial property gRPC message.\n\nReturns\n\nMaterialProperty\n\nConverted material property.\n\n\n\nconversions.from_frame_to_grpc_frame(frame: ansys.geometry.core.math.frame.Frame) -> ansys.api.geometry.v0.models_pb2.Frame\n\nConvert a Frame class to a frame gRPC message.\n\nParameters\n\nframe\n\nFrame\n\nSource frame data.\n\nReturns\n\nGRPCFrame\n\nGeometry service gRPC frame message. The unit for the frame origin is meters.\n\n\n\nconversions.from_grpc_frame_to_frame(frame: ansys.api.geometry.v0.models_pb2.Frame) -> ansys.geometry.core.math.frame.Frame\n\nConvert a frame gRPC message to a Frame class.\n\nParameters\n\nframe\n\nGRPCFrame\n\nSource frame data.\n\nReturns\n\nFrame\n\nConverted frame.\n\n\n\nconversions.from_plane_to_grpc_plane(plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Plane\n\nConvert a Plane class to a plane gRPC message.\n\nParameters\n\nplane\n\nPlane\n\nSource plane data.\n\nReturns\n\nGRPCPlane\n\nGeometry service gRPC plane message. The unit is meters.\n\n\n\nconversions.from_grpc_tess_to_pd(tess: ansys.api.geometry.v0.models_pb2.Tessellation) -> pyvista.PolyData\n\nConvert a Tessellation to pyvista.PolyData.\n\n\n\nconversions.from_grpc_tess_to_raw_data(tess: ansys.api.geometry.v0.models_pb2.Tessellation) -> dict\n\nConvert a Tessellation to raw data.\n\n\n\nconversions.from_grpc_edge_tess_to_pd(tess: ansys.api.geometry.v0.models_pb2.EdgeTessellation) -> pyvista.PolyData\n\nConvert a EdgeTessellation to pyvista.PolyData.\n\n\n\nconversions.from_grpc_edge_tess_to_raw_data(tess: ansys.api.geometry.v0.models_pb2.EdgeTessellation) -> dict\n\nConvert a EdgeTessellation to raw data.\n\n\n\nconversions.from_tess_options_to_grpc_tess_options(options: ansys.geometry.core.misc.options.TessellationOptions) -> ansys.api.geometry.v0.models_pb2.TessellationOptions\n\nConvert a TessellationOptions class to a tessellation options gRPC message.\n\nParameters\n\noptions\n\nTessellationOptions\n\nSource tessellation options data.\n\nReturns\n\nGRPCTessellationOptions\n\nGeometry service gRPC tessellation options message.\n\n\n\nconversions.from_sketch_shapes_to_grpc_geometries(plane: ansys.geometry.core.math.plane.Plane, edges: list[ansys.geometry.core.sketch.edge.SketchEdge], faces: list[ansys.geometry.core.sketch.face.SketchFace], only_one_curve: bool = False) -> ansys.api.geometry.v0.models_pb2.Geometries\n\nConvert lists of SketchEdge and SketchFace to a gRPC message.\n\nParameters\n\nplane\n\nPlane\n\nPlane for positioning the 2D sketches.\n\nedges\n\npython:list[SketchEdge]\n\nSource edge data.\n\nfaces\n\npython:list[SketchFace]\n\nSource face data.\n\nonly_one_curve\n\nbool, default: python:False\n\nWhether to project one curve of the whole set of geometries to\nenhance performance.\n\nReturns\n\nGRPCGeometries\n\nGeometry service gRPC geometries message. The unit is meters.\n\n\n\nconversions.from_sketch_edges_to_grpc_geometries(edges: list[ansys.geometry.core.sketch.edge.SketchEdge], plane: ansys.geometry.core.math.plane.Plane) -> tuple[list[ansys.api.geometry.v0.models_pb2.Line], list[ansys.api.geometry.v0.models_pb2.Arc], list[ansys.api.geometry.v0.models_pb2.NurbsCurve]]\n\nConvert a list of SketchEdge to a gRPC message.\n\nParameters\n\nedges\n\npython:list[SketchEdge]\n\nSource edge data.\n\nplane\n\nPlane\n\nPlane for positioning the 2D sketches.\n\nReturns\n\npython:tuple[python:list[GRPCLine], python:list[GRPCArc], python:list[GRPCNurbsCurve]]\n\nGeometry service gRPC line, arc, and NURBS curve messages. The unit is meters.\n\n\n\nconversions.from_sketch_arc_to_grpc_arc(arc: ansys.geometry.core.sketch.arc.Arc, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Arc\n\nConvert an Arc class to an arc gRPC message.\n\nParameters\n\narc\n\nArc\n\nSource arc data.\n\nplane\n\nPlane\n\nPlane for positioning the arc within.\n\nReturns\n\nGRPCArc\n\nGeometry service gRPC arc message. The unit is meters.\n\n\n\nconversions.from_sketch_nurbs_to_grpc_nurbs_curve(curve: ansys.geometry.core.sketch.nurbs.SketchNurbs, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.NurbsCurve\n\nConvert a SketchNurbs class to a NURBS curve gRPC message.\n\nParameters\n\nnurbs\n\nSketchNurbs\n\nSource NURBS data.\n\nplane\n\nPlane\n\nPlane for positioning the NURBS curve.\n\nReturns\n\nGRPCNurbsCurve\n\nGeometry service gRPC NURBS curve message. The unit is meters.\n\n\n\nconversions.from_sketch_ellipse_to_grpc_ellipse(ellipse: ansys.geometry.core.sketch.ellipse.SketchEllipse, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Ellipse\n\nConvert a SketchEllipse class to an ellipse gRPC message.\n\nParameters\n\nellipse\n\nSketchEllipse\n\nSource ellipse data.\n\nReturns\n\nGRPCEllipse\n\nGeometry service gRPC ellipse message. The unit is meters.\n\n\n\nconversions.from_sketch_circle_to_grpc_circle(circle: ansys.geometry.core.sketch.circle.SketchCircle, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Circle\n\nConvert a SketchCircle class to a circle gRPC message.\n\nParameters\n\ncircle\n\nSketchCircle\n\nSource circle data.\n\nplane\n\nPlane\n\nPlane for positioning the circle.\n\nReturns\n\nGRPCCircle\n\nGeometry service gRPC circle message. The unit is meters.\n\n\n\nconversions.from_sketch_polygon_to_grpc_polygon(polygon: ansys.geometry.core.sketch.polygon.Polygon, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Polygon\n\nConvert a Polygon class to a polygon gRPC message.\n\nParameters\n\npolygon\n\nPolygon\n\nSource polygon data.\n\nReturns\n\nGRPCPolygon\n\nGeometry service gRPC polygon message. The unit is meters.\n\n\n\nconversions.from_sketch_segment_to_grpc_line(segment: ansys.geometry.core.sketch.segment.SketchSegment, plane: ansys.geometry.core.math.plane.Plane) -> ansys.api.geometry.v0.models_pb2.Line\n\nConvert a Segment class to a line gRPC message.\n\nParameters\n\nsegment\n\nSketchSegment\n\nSource segment data.\n\nReturns\n\nGRPCLine\n\nGeometry service gRPC line message. The unit is meters.\n\n\n\nconversions.from_trimmed_curve_to_grpc_trimmed_curve(curve: ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve) -> ansys.api.geometry.v0.models_pb2.TrimmedCurve\n\nConvert a TrimmedCurve to a trimmed curve gRPC message.\n\nParameters\n\ncurve\n\nTrimmedCurve\n\nCurve to convert.\n\nReturns\n\nGRPCTrimmedCurve\n\nGeometry service gRPC TrimmedCurve message.\n\n\n\nconversions.from_curve_to_grpc_curve(curve: ansys.geometry.core.shapes.curves.curve.Curve) -> ansys.api.geometry.v0.models_pb2.CurveGeometry\n\nConvert a Curve object to a curve gRPC message.\n\nParameters\n\ncurve\n\nCurve\n\nCurve to convert.\n\nReturns\n\nGRPCCurve\n\nReturn Curve as a ansys.api.geometry.CurveGeometry message.\n\n\n\nconversions.from_nurbs_curve_to_grpc_nurbs_curve(curve: ansys.geometry.core.shapes.curves.nurbs.NURBSCurve) -> ansys.api.geometry.v0.models_pb2.NurbsCurve\n\nConvert a NURBSCurve to a NURBS curve gRPC message.\n\nParameters\n\ncurve\n\nNURBSCurve\n\nCurve to convert.\n\nReturns\n\nGRPCNurbsCurve\n\nGeometry service gRPC NURBSCurve message.\n\n\n\nconversions.from_nurbs_surface_to_grpc_nurbs_surface(surface: ansys.geometry.core.shapes.surfaces.nurbs.NURBSSurface) -> ansys.api.geometry.v0.models_pb2.NurbsSurface\n\nConvert a NURBSSurface to a NURBS surface gRPC message.\n\nParameters\n\nsurface\n\nNURBSSurface\n\nSurface to convert.\n\nReturns\n\nGRPCNurbsSurface\n\nGeometry service gRPC NURBSSurface message.\n\n\n\nconversions.from_grpc_nurbs_curve_to_nurbs_curve(curve: ansys.api.geometry.v0.models_pb2.NurbsCurve) -> ansys.geometry.core.shapes.curves.nurbs.NURBSCurve\n\nConvert a NURBS curve gRPC message to a NURBSCurve.\n\nParameters\n\ncurve\n\nGRPCNurbsCurve\n\nGeometry service gRPC NURBS curve message.\n\nReturns\n\nNURBSCurve\n\nResulting converted NURBS curve.\n\n\n\nconversions.from_knots_to_grpc_knots(knots: list[float]) -> list[ansys.api.geometry.v0.models_pb2.Knot]\n\nConvert a list of knots to a list of gRPC knot messages.\n\nParameters\n\nknots\n\npython:list[python:float]\n\nSource knots data.\n\nReturns\n\npython:list[GRPCKnot]\n\nGeometry service gRPC knot messages.\n\n\n\nconversions.from_grpc_curve_to_curve(curve: ansys.api.geometry.v0.models_pb2.CurveGeometry) -> ansys.geometry.core.shapes.curves.curve.Curve\n\nConvert a curve gRPC message to a Curve.\n\nParameters\n\ncurve\n\nGRPCCurve\n\nGeometry service gRPC curve message.\n\nReturns\n\nCurve\n\nResulting converted curve.\n\n\n\nconversions.from_trimmed_surface_to_grpc_trimmed_surface(trimmed_surface: ansys.geometry.core.shapes.surfaces.trimmed_surface.TrimmedSurface) -> ansys.api.geometry.v0.models_pb2.TrimmedSurface\n\nConvert a TrimmedSurface to a trimmed surface gRPC message.\n\nParameters\n\ntrimmed_surface\n\nTrimmedSurface\n\nSurface to convert.\n\nReturns\n\nGRPCTrimmedSurface\n\nGeometry service gRPC TrimmedSurface message.\n\n\n\nconversions.from_surface_to_grpc_surface(surface: ansys.geometry.core.shapes.surfaces.surface.Surface) -> tuple[ansys.api.geometry.v0.models_pb2.Surface, ansys.api.geometry.v0.models_pb2.SurfaceType]\n\nConvert a Surface object to a surface gRPC message.\n\nParameters\n\nsurface\n\nSurface\n\nSurface to convert.\n\nReturns\n\nGRPCSurface\n\nReturn Surface as a ansys.api.geometry.Surface message.\n\nGRPCSurfaceType\n\nReturn the grpc surface type of Surface.\n\n\n\nconversions.from_grpc_surface_to_surface(surface: ansys.api.geometry.v0.models_pb2.Surface, surface_type: ansys.geometry.core.designer.face.SurfaceType) -> ansys.geometry.core.shapes.surfaces.surface.Surface\n\nConvert a surface gRPC message to a Surface class.\n\nParameters\n\nsurface\n\nGRPCSurface\n\nGeometry service gRPC surface message.\n\nReturns\n\nSurface\n\nResulting converted surface.\n\n\n\nconversions.from_grpc_backend_type_to_backend_type(grpc_backend_type: ansys.api.dbu.v0.admin_pb2.BackendType) -> ansys.geometry.core.connection.backend.BackendType\n\nConvert a gRPC backend type to a backend type.\n\nParameters\n\nbackend_type\n\nGRPCBackendType\n\nSource backend type.\n\nReturns\n\nBackendType\n\nConverted backend type.\n\n\n\nconversions.from_grpc_driving_dimension_to_driving_dimension(driving_dimension: ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension) -> ansys.geometry.core.parameters.parameter.Parameter\n\nConvert a gRPC driving dimension to a driving dimension object.\n\nParameters\n\ndriving_dimension\n\nGRPCDrivingDimension\n\nSource driving dimension type.\n\nReturns\n\nParameter\n\nConverted driving dimension.\n\n\n\nconversions.from_driving_dimension_to_grpc_driving_dimension(driving_dimension: ansys.geometry.core.parameters.parameter.Parameter) -> ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension\n\nConvert a driving dimension object to a gRPC driving dimension.\n\nParameters\n\ndriving_dimension\n\nParameter\n\nSource driving dimension type.\n\nReturns\n\nGRPCDrivingDimension\n\nConverted driving dimension.\n\n\n\nconversions.from_grpc_update_status_to_parameter_update_status(update_status: ansys.api.dbu.v0.drivingdimensions_pb2.UpdateStatus) -> ansys.geometry.core.parameters.parameter.ParameterUpdateStatus\n\nConvert a gRPC update status to a parameter update status.\n\nParameters\n\nupdate_status\n\nGRPCUpdateStatus\n\nSource update status.\n\nReturns\n\nParameterUpdateStatus\n\nConverted update status.\n\n\n\nconversions.from_design_file_format_to_grpc_part_export_format(design_file_format: ansys.geometry.core.designer.design.DesignFileFormat) -> ansys.api.dbu.v0.dbumodels_pb2.PartExportFormat\n\nConvert from a DesignFileFormat object to a gRPC PartExportFormat one.\n\nParameters\n\ndesign_file_format\n\nDesignFileFormat\n\nThe file format desired\n\nReturns\n\nGRPCPartExportFormat\n\nConverted gRPC Part format\n\n\n\nconversions.from_material_to_grpc_material(material: ansys.geometry.core.materials.material.Material) -> ansys.api.geometry.v0.models_pb2.Material\n\nConvert a Material class to a material gRPC message.\n\nParameters\n\nmaterial\n\nMaterial\n\nSource material data.\n\nReturns\n\nGRPCMaterial\n\nGeometry service gRPC material message.\n\n\n\nconversions.from_grpc_matrix_to_matrix(matrix: ansys.api.geometry.v0.models_pb2.Matrix) -> ansys.geometry.core.math.matrix.Matrix44\n\nConvert a gRPC matrix to a matrix.\n\nParameters\n\nmatrix\n\nGRPCMatrix\n\nSource gRPC matrix data.\n\nReturns\n\nMatrix44\n\nConverted matrix.\n\n\n\nconversions.serialize_tracker_command_response(**kwargs) -> dict\n\nSerialize a TrackerCommandResponse object into a dictionary.\n\nParameters\n\nresponse\n\nTrackerCommandResponse\n\nThe gRPC TrackerCommandResponse object to serialize.\n\nReturns\n\npython:dict\n\nA dictionary representation of the TrackerCommandResponse object."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/index.html#the-pointspy-module","title":"The points.py module","text":"The points.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/index.html#summary","title":"The points.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPointsServiceV0\n\nPoints service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/points/index.html#description","title":"The points.py module > Description","text":"Description\n\nModule containing the points service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/GRPCRepairToolsServiceV0.html#grpcrepairtoolsservicev0","title":"GRPCRepairToolsServiceV0","text":"GRPCRepairToolsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.repair_tools.GRPCRepairToolsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.repair_tools.GRPCRepairToolsService\n\nRepair tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nRepair Tools service. It is specifically designed for the v0 version\nof the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/GRPCRepairToolsServiceV0.html#overview","title":"GRPCRepairToolsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfind_split_edges\n\nIdentify split edges in the geometry.\n\nfind_extra_edges\n\nIdentify extra edges in the geometry.\n\nfind_inexact_edges\n\nIdentify inexact edges in the geometry.\n\nfind_short_edges\n\nIdentify short edges in the geometry.\n\nfind_duplicate_faces\n\nIdentify duplicate faces in the geometry.\n\nfind_missing_faces\n\nIdentify missing faces in the geometry.\n\nfind_small_faces\n\nIdentify small faces in the geometry.\n\nfind_stitch_faces\n\nIdentify faces that can be stitched together in the geometry.\n\nfind_simplify\n\nIdentify areas in the geometry that can be simplified.\n\nfind_interferences\n\nIdentify interferences in the geometry.\n\nfind_and_fix_short_edges\n\nIdentify and fix short edges in the geometry.\n\nfind_and_fix_extra_edges\n\nIdentify and fix extra edges in the geometry.\n\nfind_and_fix_split_edges\n\nIdentify and fix split edges in the geometry.\n\nfind_and_fix_simplify\n\nIdentify and simplify areas in the geometry.\n\nfind_and_fix_stitch_faces\n\nIdentify and stitch faces in the geometry.\n\ninspect_geometry\n\nInspect the geometry for issues.\n\nrepair_geometry\n\nRepair the geometry by addressing identified issues.\n\nfix_duplicate_faces\n\nFix duplicate faces in the geometry.\n\nfix_missing_faces\n\nFix missing faces in the geometry.\n\nfix_inexact_edges\n\nFix inexact edges in the geometry.\n\nfix_extra_edges\n\nFix extra edges in the geometry.\n\nfix_short_edges\n\nFix short edges in the geometry.\n\nfix_small_faces\n\nFix small faces in the geometry.\n\nfix_split_edges\n\nFix split edges in the geometry.\n\nfix_stitch_faces\n\nFix stitch faces in the geometry.\n\nfix_unsimplified_faces\n\nFix areas to simplify in the geometry.\n\nfix_interference\n\nFix interferences in the geometry.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/GRPCRepairToolsServiceV0.html#import-detail","title":"GRPCRepairToolsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/GRPCRepairToolsServiceV0.html#attribute-detail","title":"GRPCRepairToolsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCRepairToolsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/repair_tools/GRPCRepairToolsServiceV0.html#method-detail","title":"GRPCRepairToolsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCRepairToolsServiceV0.find_split_edges(**kwargs) -> dict\n\nIdentify split edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_extra_edges(**kwargs) -> dict\n\nIdentify extra edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_inexact_edges(**kwargs) -> dict\n\nIdentify inexact edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_short_edges(**kwargs) -> dict\n\nIdentify short edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_duplicate_faces(**kwargs) -> dict\n\nIdentify duplicate faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_missing_faces(**kwargs) -> dict\n\nIdentify missing faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_small_faces(**kwargs) -> dict\n\nIdentify small faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_stitch_faces(**kwargs) -> dict\n\nIdentify faces that can be stitched together in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_simplify(**kwargs) -> dict\n\nIdentify areas in the geometry that can be simplified.\n\n\n\nGRPCRepairToolsServiceV0.find_interferences(**kwargs) -> dict\n\nIdentify interferences in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_and_fix_short_edges(**kwargs)\n\nIdentify and fix short edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_and_fix_extra_edges(**kwargs) -> dict\n\nIdentify and fix extra edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_and_fix_split_edges(**kwargs) -> dict\n\nIdentify and fix split edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_and_fix_simplify(**kwargs) -> dict\n\nIdentify and simplify areas in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.find_and_fix_stitch_faces(**kwargs) -> dict\n\nIdentify and stitch faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.inspect_geometry(**kwargs) -> dict\n\nInspect the geometry for issues.\n\n\n\nGRPCRepairToolsServiceV0.repair_geometry(**kwargs) -> dict\n\nRepair the geometry by addressing identified issues.\n\n\n\nGRPCRepairToolsServiceV0.fix_duplicate_faces(**kwargs) -> dict\n\nFix duplicate faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_missing_faces(**kwargs) -> dict\n\nFix missing faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_inexact_edges(**kwargs) -> dict\n\nFix inexact edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_extra_edges(**kwargs) -> dict\n\nFix extra edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_short_edges(**kwargs) -> dict\n\nFix short edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_small_faces(**kwargs) -> dict\n\nFix small faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_split_edges(**kwargs) -> dict\n\nFix split edges in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_stitch_faces(**kwargs) -> dict\n\nFix stitch faces in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_unsimplified_faces(**kwargs) -> dict\n\nFix areas to simplify in the geometry.\n\n\n\nGRPCRepairToolsServiceV0.fix_interference(**kwargs) -> dict\n\nFix interferences in the geometry."},{"objectID":"Examples","href":"examples/01_getting_started/03_sketching.html#pyansys-geometry-101-sketching","title":"Examples > PyAnsys Geometry 101: Sketching","text":"PyAnsys Geometry 101: Sketching\n\nWith PyAnsys Geometry, you can build powerful dynamic sketches without communicating with the Geometry service. This example shows how to build some simple sketches."},{"objectID":"Examples","href":"examples/01_getting_started/03_sketching.html#perform-required-imports","title":"Examples > PyAnsys Geometry 101: Sketching > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/03_sketching.html#add-a-box-to-sketch","title":"Examples > PyAnsys Geometry 101: Sketching > Add a box to sketch","text":"Add a box to sketch\n\nThe Sketch object is the starting point. Once it is created, you can dynamically add various curves to the sketch. Here are some of the curves that are available:\n\narc\n\nbox\n\ncircle\n\nellipse\n\ngear\n\npolygon\n\nsegment\n\nslot\n\ntrapezoid\n\ntriangle\n\nAdd a box to the sketch.\n\n\n\n\n\n\n\n\n\n\n\n\n\nA functional-style sketching API is also implemented. It allows you to append curves to the sketch with the idea of never picking up your pen.\n\nUse the functional-style sketching API to add a box.\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Sketch object uses the XY plane by default. You can define your own custom plane using three parameters: origin, direction_x, and direction_y.\n\nAdd a box on a custom plane.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/03_sketching.html#combine-concepts-to-create-powerful-sketches","title":"Examples > PyAnsys Geometry 101: Sketching > Combine concepts to create powerful sketches","text":"Combine concepts to create powerful sketches\n\nCombine these simple concepts to create powerful sketches.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/index.html#the-parameters-package","title":"The parameters package","text":"The parameters package\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/index.html#summary","title":"The parameters package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nparameter\n\nProvides get and set methods for parameters.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/parameters/index.html#description","title":"The parameters package > Description","text":"Description\n\nPyAnsys Geometry parameters subpackage."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/index.html#the-model_toolspy-module","title":"The model_tools.py module","text":"The model_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/index.html#summary","title":"The model_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCModelToolsService\n\nModel tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/model_tools/index.html#description","title":"The model_tools.py module > Description","text":"Description\n\nModule containing the model tools service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/index.html#the-check_geometrypy-module","title":"The check_geometry.py module","text":"The check_geometry.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/index.html#summary","title":"The check_geometry.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGeometryIssue\n\nProvides return message for the repair tool methods.\n\nInspectResult\n\nProvides the result of the inspect geometry operation.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/check_geometry/index.html#description","title":"The check_geometry.py module > Description","text":"Description\n\nModule for repair tool message."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/Polygon.html#polygon","title":"Polygon","text":"Polygon\n\n\n\nclass ansys.geometry.core.sketch.polygon.Polygon(center: ansys.geometry.core.math.point.Point2D, inner_radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, sides: int, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0)\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling regular polygons.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the circle.\n\ninner_radius\n\nQuantity | Distance | Real\n\nInner radius (apothem) of the polygon.\n\nsides\n\npython:int\n\nNumber of sides of the polygon.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/Polygon.html#overview","title":"Polygon > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenter\n\nCenter point of the polygon.\n\ninner_radius\n\nInner radius (apothem) of the polygon.\n\nn_sides\n\nNumber of sides of the polygon.\n\nangle\n\nOrientation angle of the polygon.\n\nlength\n\nSide length of the polygon.\n\nouter_radius\n\nOuter radius of the polygon.\n\nperimeter\n\nPerimeter of the polygon.\n\narea\n\nArea of the polygon.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/Polygon.html#import-detail","title":"Polygon > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/polygon/Polygon.html#property-detail","title":"Polygon > Property detail","text":"Property detail\n\n\n\nproperty Polygon.center: ansys.geometry.core.math.point.Point2D\n\nCenter point of the polygon.\n\n\n\nproperty Polygon.inner_radius: pint.Quantity\n\nInner radius (apothem) of the polygon.\n\n\n\nproperty Polygon.n_sides: int\n\nNumber of sides of the polygon.\n\n\n\nproperty Polygon.angle: pint.Quantity\n\nOrientation angle of the polygon.\n\n\n\nproperty Polygon.length: pint.Quantity\n\nSide length of the polygon.\n\n\n\nproperty Polygon.outer_radius: pint.Quantity\n\nOuter radius of the polygon.\n\n\n\nproperty Polygon.perimeter: pint.Quantity\n\nPerimeter of the polygon.\n\n\n\nproperty Polygon.area: pint.Quantity\n\nArea of the polygon.\n\n\n\nproperty Polygon.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamForm.html#paramform","title":"ParamForm","text":"ParamForm\n\n\n\nclass ansys.geometry.core.shapes.parameterization.ParamForm(*args, **kwds)\n\nBases: enum.Enum\n\nParamForm enum class that defines the form of a Parameterization."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamForm.html#overview","title":"ParamForm > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nOPEN\n\n\n\nCLOSED\n\n\n\nPERIODIC\n\n\n\nOTHER\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamForm.html#import-detail","title":"ParamForm > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/parameterization/ParamForm.html#attribute-detail","title":"ParamForm > Attribute detail","text":"Attribute detail\n\n\n\nParamForm.OPEN = 1\n\n\n\n\n\nParamForm.CLOSED = 2\n\n\n\n\n\nParamForm.PERIODIC = 3\n\n\n\n\n\nParamForm.OTHER = 4\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/index.html#the-surfacepy-module","title":"The surface.py module","text":"The surface.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/index.html#summary","title":"The surface.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurface\n\nProvides the abstract base class for a 3D surface.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface/index.html#description","title":"The surface.py module > Description","text":"Description\n\nProvides the Surface class."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProfile.html#beamprofile","title":"BeamProfile","text":"BeamProfile\n\n\n\nclass ansys.geometry.core.designer.beam.BeamProfile(id: str, name: str)\n\nRepresents a single beam profile organized within the design assembly.\n\nThis profile synchronizes to a design within a supporting Geometry service instance.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the beam profile.\n\nname\n\npython:str\n\nUser-defined label for the beam profile.\n\nNotes\n\nBeamProfile objects are expected to be created from the Design object.\nThis means that you are not expected to instantiate your own BeamProfile\nobject. You should call the specific Design API for the BeamProfile desired."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProfile.html#overview","title":"BeamProfile > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the beam profile.\n\nname\n\nName of the beam profile."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProfile.html#import-detail","title":"BeamProfile > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamProfile.html#property-detail","title":"BeamProfile > Property detail","text":"Property detail\n\n\n\nproperty BeamProfile.id: str\n\nID of the beam profile.\n\n\n\nproperty BeamProfile.name: str\n\nName of the beam profile."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/index.html#the-adminpy-module","title":"The admin.py module","text":"The admin.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/index.html#summary","title":"The admin.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAdminServiceV1\n\nAdmin service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/index.html#description","title":"The admin.py module > Description","text":"Description\n\nModule containing the admin service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/index.html#the-measurement_toolspy-module","title":"The measurement_tools.py module","text":"The measurement_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/index.html#summary","title":"The measurement_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMeasurementToolsService\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/measurement_tools/index.html#description","title":"The measurement_tools.py module > Description","text":"Description\n\nModule containing the measurement tools service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ProblemArea.html#problemarea","title":"ProblemArea","text":"ProblemArea\n\n\n\nclass ansys.geometry.core.tools.problem_areas.ProblemArea(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient)\n\nRepresents problem areas.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ProblemArea.html#overview","title":"ProblemArea > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nfix\n\nFix problem area.\n\nMethods\n\n\n\n\n\nbuild_repair_tool_message\n\nBuild a repair tool message from the service response.\n\nProperties\n\n\n\n\n\nid\n\nThe id of the problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ProblemArea.html#import-detail","title":"ProblemArea > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ProblemArea.html#property-detail","title":"ProblemArea > Property detail","text":"Property detail\n\n\n\nproperty ProblemArea.id: str\n\nThe id of the problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ProblemArea.html#method-detail","title":"ProblemArea > Method detail","text":"Method detail\n\n\n\nabstractmethod ProblemArea.fix()\n\nFix problem area.\n\n\n\nProblemArea.build_repair_tool_message(response: dict) -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nBuild a repair tool message from the service response.\n\nParameters\n\nresponse\n\npython:dict\n\nThe response from the service containing information about the repair operation.\n\nReturns\n\nRepairToolMessage\n\nA message containing the success status, created bodies, modified bodies,\nnumber of found problem areas, and number of repaired problem areas."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/Slot.html#slot","title":"Slot","text":"Slot\n\n\n\nclass ansys.geometry.core.sketch.slot.Slot(center: ansys.geometry.core.math.point.Point2D, width: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, angle: pint.Quantity | ansys.geometry.core.misc.measurements.Angle | ansys.geometry.core.typing.Real = 0)\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling a 2D slot.\n\nParameters\n\ncenter: :class:`Point2D <ansys.geometry.core.math.point.Point2D>`\n\nCenter point of the slot.\n\nwidth\n\nQuantity | Distance | Real\n\nWidth of the slot main body.\n\nheight\n\nQuantity | Distance | Real\n\nHeight of the slot.\n\nangle\n\nQuantity | Angle | Real, default: 0\n\nPlacement angle for orientation alignment."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/Slot.html#overview","title":"Slot > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenter\n\nCenter of the slot.\n\nwidth\n\nWidth of the slot.\n\nheight\n\nHeight of the slot.\n\nperimeter\n\nPerimeter of the slot.\n\narea\n\nArea of the slot.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/Slot.html#import-detail","title":"Slot > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/slot/Slot.html#property-detail","title":"Slot > Property detail","text":"Property detail\n\n\n\nproperty Slot.center: ansys.geometry.core.math.point.Point2D\n\nCenter of the slot.\n\n\n\nproperty Slot.width: pint.Quantity\n\nWidth of the slot.\n\n\n\nproperty Slot.height: pint.Quantity\n\nHeight of the slot.\n\n\n\nproperty Slot.perimeter: pint.Quantity\n\nPerimeter of the slot.\n\n\n\nproperty Slot.area: pint.Quantity\n\nArea of the slot.\n\n\n\nproperty Slot.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector3D.html#unitvector3d","title":"UnitVector3D","text":"UnitVector3D\n\n\n\nclass ansys.geometry.core.math.vector.UnitVector3D(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: Vector3D\n\nProvides for creating and managing a 3D unit vector.\n\nParameters\n\ninput\n\nndarray | RealSequence | Vector3D\n\n1D numpy.ndarray class with shape(X,)\n\nVector3D"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector3D.html#overview","title":"UnitVector3D > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_points\n\nCreate a 3D unit vector from two distinct 3D points."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector3D.html#import-detail","title":"UnitVector3D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/UnitVector3D.html#method-detail","title":"UnitVector3D > Method detail","text":"Method detail\n\n\n\nclassmethod UnitVector3D.from_points(point_a: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, point_b: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D)\n\nCreate a 3D unit vector from two distinct 3D points.\n\nParameters\n\npoint_a\n\nndarray | RealSequence | Point3D\n\nPoint3D\nclass representing the first point.\n\npoint_b\n\nndarray | RealSequence | Point3D\n\nPoint3D\nclass representing the second point.\n\nReturns\n\nUnitVector3D\n\n3D unit vector from point_a to point_b."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/GRPCFacesServiceV0.html#grpcfacesservicev0","title":"GRPCFacesServiceV0","text":"GRPCFacesServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.faces.GRPCFacesServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.faces.GRPCFacesService\n\nFaces service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nfaces service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/GRPCFacesServiceV0.html#overview","title":"GRPCFacesServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_surface\n\nGet the surface of a face.\n\nget_box_uv\n\nGet the UV box of a face.\n\nget_area\n\nGet the area of a face.\n\nget_edges\n\nGet the edges of a face.\n\nget_vertices\n\nGet the vertices of a face.\n\nget_loops\n\nGet the loops of a face.\n\nget_color\n\nGet the color of a face.\n\nget_bounding_box\n\nGet the bounding box of a face.\n\nset_color\n\nSet the color of a face.\n\nget_normal\n\nGet the normal of a face.\n\nevaluate\n\nEvaluate a face at a given parameter.\n\ncreate_iso_parametric_curve\n\nCreate an iso-parametric curve on a face.\n\nextrude_faces\n\nExtrude a selection of faces.\n\nextrude_faces_up_to\n\nExtrude a selection of faces up to another object.\n\noffset_faces_set_radius\n\nOffset a selection of faces by a given radius.\n\nrevolve_faces\n\nRevolve a selection of faces around an axis.\n\nrevolve_faces_up_to\n\nRevolve a selection of faces around an axis up to another object.\n\nrevolve_faces_by_helix\n\nRevolve a selection of faces around an axis by a helix.\n\nreplace_faces\n\nReplace a selection of faces with new faces.\n\nthicken_faces\n\nThicken a selection of faces.\n\ndraft_faces\n\nDraft a selection of faces.\n\nget_round_info\n\nGet round information for a selection of faces.\n\noffset_faces\n\nOffset a selection of faces.\n\nsetup_offset_relationship\n\nSet up an offset relationship between two faces.\n\nAttributes\n\n\n\n\n\nstub\n\n\n\ncommands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/GRPCFacesServiceV0.html#import-detail","title":"GRPCFacesServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/GRPCFacesServiceV0.html#attribute-detail","title":"GRPCFacesServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCFacesServiceV0.stub\n\n\n\n\n\nGRPCFacesServiceV0.commands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/faces/GRPCFacesServiceV0.html#method-detail","title":"GRPCFacesServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCFacesServiceV0.get_surface(**kwargs) -> dict\n\nGet the surface of a face.\n\n\n\nGRPCFacesServiceV0.get_box_uv(**kwargs) -> dict\n\nGet the UV box of a face.\n\n\n\nGRPCFacesServiceV0.get_area(**kwargs) -> dict\n\nGet the area of a face.\n\n\n\nGRPCFacesServiceV0.get_edges(**kwargs) -> dict\n\nGet the edges of a face.\n\n\n\nGRPCFacesServiceV0.get_vertices(**kwargs) -> dict\n\nGet the vertices of a face.\n\n\n\nGRPCFacesServiceV0.get_loops(**kwargs) -> dict\n\nGet the loops of a face.\n\n\n\nGRPCFacesServiceV0.get_color(**kwargs) -> dict\n\nGet the color of a face.\n\n\n\nGRPCFacesServiceV0.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of a face.\n\n\n\nGRPCFacesServiceV0.set_color(**kwargs) -> dict\n\nSet the color of a face.\n\n\n\nGRPCFacesServiceV0.get_normal(**kwargs) -> dict\n\nGet the normal of a face.\n\n\n\nGRPCFacesServiceV0.evaluate(**kwargs) -> dict\n\nEvaluate a face at a given parameter.\n\n\n\nGRPCFacesServiceV0.create_iso_parametric_curve(**kwargs) -> dict\n\nCreate an iso-parametric curve on a face.\n\n\n\nGRPCFacesServiceV0.extrude_faces(**kwargs) -> dict\n\nExtrude a selection of faces.\n\n\n\nGRPCFacesServiceV0.extrude_faces_up_to(**kwargs) -> dict\n\nExtrude a selection of faces up to another object.\n\n\n\nGRPCFacesServiceV0.offset_faces_set_radius(**kwargs) -> dict\n\nOffset a selection of faces by a given radius.\n\n\n\nGRPCFacesServiceV0.revolve_faces(**kwargs) -> dict\n\nRevolve a selection of faces around an axis.\n\n\n\nGRPCFacesServiceV0.revolve_faces_up_to(**kwargs) -> dict\n\nRevolve a selection of faces around an axis up to another object.\n\n\n\nGRPCFacesServiceV0.revolve_faces_by_helix(**kwargs) -> dict\n\nRevolve a selection of faces around an axis by a helix.\n\n\n\nGRPCFacesServiceV0.replace_faces(**kwargs) -> dict\n\nReplace a selection of faces with new faces.\n\n\n\nGRPCFacesServiceV0.thicken_faces(**kwargs) -> dict\n\nThicken a selection of faces.\n\n\n\nGRPCFacesServiceV0.draft_faces(**kwargs) -> dict\n\nDraft a selection of faces.\n\n\n\nGRPCFacesServiceV0.get_round_info(**kwargs) -> dict\n\nGet round information for a selection of faces.\n\n\n\nGRPCFacesServiceV0.offset_faces(**kwargs) -> dict\n\nOffset a selection of faces.\n\n\n\nGRPCFacesServiceV0.setup_offset_relationship(**kwargs) -> dict\n\nSet up an offset relationship between two faces."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#point2d","title":"Point2D","text":"Point2D\n\n\n\nclass ansys.geometry.core.math.point.Point2D(input: numpy.ndarray | ansys.geometry.core.typing.RealSequence = DEFAULT_POINT2D_VALUES, unit: pint.Unit | None = None)\n\nBases: numpy.ndarray, ansys.geometry.core.misc.units.PhysicalQuantity\n\nProvides geometry primitive representation for a 2D point.\n\nParameters\n\ninput\n\nndarray | RealSequence, default: DEFAULT_POINT2D_VALUES\n\nDirection arguments, either as a numpy.ndarray class\nor as a RealSequence.\n\nunit\n\nUnit | python:None, default: DEFAULT_UNITS.LENGTH\n\nUnits for defining 2D point values. If not specified, the default unit is\nDEFAULT_UNITS.LENGTH."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#overview","title":"Point2D > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nunit\n\nGet the unit of the object.\n\nbase_unit\n\nGet the base unit of the object.\n\nProperties\n\n\n\n\n\nx\n\nX plane component value.\n\ny\n\nY plane component value.\n\nAttributes\n\n\n\n\n\nflat\n\n\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Point2D class.\n\n__ne__\n\nNot equals operator for the Point2D class.\n\n__add__\n\nAdd operation for the Point2D class.\n\n__sub__\n\nSubtraction operation for the Point2D class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#import-detail","title":"Point2D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#property-detail","title":"Point2D > Property detail","text":"Property detail\n\n\n\nproperty Point2D.x: pint.Quantity\n\nX plane component value.\n\n\n\nproperty Point2D.y: pint.Quantity\n\nY plane component value."},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#attribute-detail","title":"Point2D > Attribute detail","text":"Attribute detail\n\n\n\nPoint2D.flat\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/point/Point2D.html#method-detail","title":"Point2D > Method detail","text":"Method detail\n\n\n\nPoint2D.__eq__(other: Point2D) -> bool\n\nEquals operator for the Point2D class.\n\n\n\nPoint2D.__ne__(other: Point2D) -> bool\n\nNot equals operator for the Point2D class.\n\n\n\nPoint2D.__add__(other: Point2D | ansys.geometry.core.math.vector.Vector2D) -> Point2D\n\nAdd operation for the Point2D class.\n\n\n\nPoint2D.__sub__(other: Point2D) -> Point2D\n\nSubtraction operation for the Point2D class.\n\n\n\nPoint2D.unit() -> pint.Unit\n\nGet the unit of the object.\n\n\n\nPoint2D.base_unit() -> pint.Unit\n\nGet the base unit of the object."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/GRPCMeasurementToolsServiceV0.html#grpcmeasurementtoolsservicev0","title":"GRPCMeasurementToolsServiceV0","text":"GRPCMeasurementToolsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.measurement_tools.GRPCMeasurementToolsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.measurement_tools.GRPCMeasurementToolsService\n\nMeasurement tools service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmeasurement tools service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/GRPCMeasurementToolsServiceV0.html#overview","title":"GRPCMeasurementToolsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmin_distance_between_objects\n\nCalculate the minimum distance between two objects.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/GRPCMeasurementToolsServiceV0.html#import-detail","title":"GRPCMeasurementToolsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/GRPCMeasurementToolsServiceV0.html#attribute-detail","title":"GRPCMeasurementToolsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCMeasurementToolsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/measurement_tools/GRPCMeasurementToolsServiceV0.html#method-detail","title":"GRPCMeasurementToolsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCMeasurementToolsServiceV0.min_distance_between_objects(**kwargs) -> dict\n\nCalculate the minimum distance between two objects."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/index.html#the-curvespy-module","title":"The curves.py module","text":"The curves.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/index.html#summary","title":"The curves.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCurvesServiceV1\n\nCurves service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/curves/index.html#description","title":"The curves.py module > Description","text":"Description\n\nModule containing the curves service implementation for v1."},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#pyansys-geometry-101-modeling","title":"Examples > PyAnsys Geometry 101: Modeling","text":"PyAnsys Geometry 101: Modeling\n\nOnce you understand PyAnsys Geometry’s mathematical constructs, units, and sketching capabilities, you can dive into its modeling capabilities.\n\nPyAnsys Geometry is a Python client that connects to a modeling service. Here are the modeling services that are available for connection:\n\nDMS: Windows-based modeling service that has been containerized to ease distribution, execution, and remotability operations.\n\nGeometry service: Linux-based approach of DMS that is currently under development.\n\nAnsys Discovery and SpaceClaim: PyAnsys Geometry is capable of connecting to a running session of Ansys Discovery or SpaceClaim. Although this is not the main use case for PyAnsys Geometry, a connection to one of these Ansys products is possible. Because these products have graphical user interfaces, performance is not as high with this option as with the previous options. However, connecting to a running instance of Discovery or SpaceClaim might be useful for some users."},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#launch-a-modeling-service","title":"Examples > PyAnsys Geometry 101: Modeling > Launch a modeling service","text":"Launch a modeling service\n\nWhile the PyAnsys Geometry operations in earlier examples did not require communication with a modeling service, this example requires that a modeling service is available. All subsequent examples also require that a modeling service is available.\n\nLaunch a modeling service session.\n\n\n\n\n\n\n\n\n\nYou can also launch your own services and connect to them. For information on connecting to an existing service, see the Modeler API documentation.\n\nHere is how the class architecture is implemented:\n\nModeler: Handler object for the active service session. This object allows you to connect to an existing service by passing in a host and a port. It also allows you to create Design objects, which is where the modeling takes place. For more information, see the Modeler API documentation.\n\nDesign: Root object of your assembly (tree). While a Design object is also a Component object, it has enhanced capabilities, including creating named selections, adding materials, and handling beam profiles. For more information, see the Design API documentation.\n\nComponent: One of the main objects for modeling purposes. Component objects allow you to create bodies, subcomponents, beams, design points, planar surfaces, and more. For more information, see the Component API documentation.\n\nThe following code examples show how you use these objects. More capabilities of these objects are shown in the specific example sections for sketching and modeling."},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#create-and-plot-a-sketch","title":"Examples > PyAnsys Geometry 101: Modeling > Create and plot a sketch","text":"Create and plot a sketch\n\nCreate a Sketch object and plot it.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#perform-some-modeling-operations","title":"Examples > PyAnsys Geometry 101: Modeling > Perform some modeling operations","text":"Perform some modeling operations\n\nNow that the sketch is ready to be extruded, perform some modeling operations, including creating the design, creating the body directly on the design, and plotting the body.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#perform-some-operations-on-the-body","title":"Examples > PyAnsys Geometry 101: Modeling > Perform some operations on the body","text":"Perform some operations on the body\n\nPerform some operations on the body.\n\n\n\n\n\n\n\n\n\nOther operations that can be performed include adding a midsurface offset and thickness (only for planar bodies), imprinting curves, assigning materials, copying, and translating.\n\nCopy the body on a new subcomponent and translate it.\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate and assign materials to the bodies that were created.\n\n\n\n\n\nCurrently materials do not have any impact on the visualization when plotting is requested, although this could be a future feature. If the final assembly is open in Discovery or SpaceClaim, you can observe the changes."},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#create-a-named-selection","title":"Examples > PyAnsys Geometry 101: Modeling > Create a named selection","text":"Create a named selection\n\nPyAnsys Geometry supports the creation of a named selection via the Design object.\n\nCreate a named selection with some of the faces of the previous body and the body itself.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#perform-deletions","title":"Examples > PyAnsys Geometry 101: Modeling > Perform deletions","text":"Perform deletions\n\nDeletion operations for bodies, named selections, and components are possible, always from the scope expected. For example, if you attempted to delete the original body from a component that has no ownership over it (such as your comp object), the deletion would fail. If you attempted to perform this deletion from the design object, the deletion would succeed.\n\nThe next two code examples show how deletion works.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#export-files","title":"Examples > PyAnsys Geometry 101: Modeling > Export files","text":"Export files\n\nOnce modeling operations are finalized, you can export files in different formats. For the formats supported by DMS, see the DesignFileFormat class in the Design module documentation.\n\nExport files in SCDOCX and FMD formats.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/04_modeling.html#close-session","title":"Examples > PyAnsys Geometry 101: Modeling > Close session","text":"Close session\n\nWhen you finish interacting with your modeling service, you should close the active server session. This frees resources wherever the service is running.\n\nClose the server session.\n\n\n\n\n\nIf the server session already existed (that is, it was not launched by the current client session), you cannot use this method to close the server session. You must manually close the server serssion instead. This is a safeguard for user-spawned services."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Angle.html#angle","title":"Angle","text":"Angle\n\n\n\nclass ansys.geometry.core.misc.measurements.Angle(value: ansys.geometry.core.typing.Real | pint.Quantity, unit: pint.Unit | None = None)\n\nBases: Measurement\n\nProvides the Measurement subclass for holding an angle.\n\nParameters\n\nvalue\n\nReal | Quantity\n\nValue of the angle.\n\nunit\n\nUnit, default: DEFAULT_UNITS.ANGLE\n\nUnits for the distance."},{"objectID":"Home","href":"api/ansys/geometry/core/misc/measurements/Angle.html#import-detail","title":"Angle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/misc/index.html#the-miscpy-module","title":"The misc.py module","text":"The misc.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/misc/index.html#summary","title":"The misc.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nget_two_circle_intersections\n\nGet the intersection points of two circles.\n\nintersect_interval\n\nFind the intersection of two intervals."},{"objectID":"Home","href":"api/ansys/geometry/core/math/misc/index.html#description","title":"The misc.py module > Description","text":"Description\n\nProvides auxiliary math functions for PyAnsys Geometry."},{"objectID":"Home","href":"api/ansys/geometry/core/math/misc/index.html#module-detail","title":"The misc.py module > Module detail","text":"Module detail\n\n\n\nmisc.get_two_circle_intersections(x0: ansys.geometry.core.typing.Real, y0: ansys.geometry.core.typing.Real, r0: ansys.geometry.core.typing.Real, x1: ansys.geometry.core.typing.Real, y1: ansys.geometry.core.typing.Real, r1: ansys.geometry.core.typing.Real) -> tuple[tuple[ansys.geometry.core.typing.Real, ansys.geometry.core.typing.Real], tuple[ansys.geometry.core.typing.Real, ansys.geometry.core.typing.Real]] | None\n\nGet the intersection points of two circles.\n\nParameters\n\nx0\n\nReal\n\nx coordinate of the first circle.\n\ny0\n\nReal\n\ny coordinate of the first circle.\n\nr0\n\nReal\n\nRadius of the first circle.\n\nx1\n\nReal\n\nx coordinate of the second circle.\n\ny1\n\nReal\n\ny coordinate of the second circle.\n\nr1\n\nReal\n\nRadius of the second circle.\n\nReturns\n\npython:tuple[python:tuple[Real, Real], python:tuple[Real, Real]] | python:None\n\nIntersection points of the two circles if they intersect.\nThe points are returned as ((x3, y3), (x4, y4)), where (x3, y3) and (x4, y4)\nare the intersection points of the two circles. If the circles do not\nintersect, then None is returned.\n\nNotes\n\nThis function is based on the following StackOverflow post:\nhttps://stackoverflow.com/questions/55816902/finding-the-intersection-of-two-circles\n\nThat post is based on the following implementation:\nhttps://paulbourke.net/geometry/circlesphere/\n\n\n\nmisc.intersect_interval(first_min, second_min, first_max, second_max) -> tuple[bool, ansys.geometry.core.typing.Real, ansys.geometry.core.typing.Real]\n\nFind the intersection of two intervals.\n\nParameters\n\nfirst_min\n\nReal\n\nThe minimum value of the first interval.\n\nsecond_min\n\nReal\n\nThe minimum value of the second interval.\n\nfirst_max\n\nReal\n\nThe maximum value of the first interval.\n\nsecond_max\n\nReal\n\nThe maximum value of the second interval.\n\nReturns\n\npython:tuple[bool, Real, Real]\n\nTuple with a boolean to indicate whether the intervals intersect,\nthe minimum value of the intersection interval,\nand the maximum value of the intersection interval.\nIf they do not intersect, then the boolean is False and the other values are 0."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/SketchNurbs.html#sketchnurbs","title":"SketchNurbs","text":"SketchNurbs\n\n\n\nclass ansys.geometry.core.sketch.nurbs.SketchNurbs\n\nBases: ansys.geometry.core.sketch.edge.SketchEdge\n\nRepresents a NURBS sketch curve.\n\nNURBS sketching is only supported in 26R1 and later versions of Ansys.\n\nNotes\n\nThis class is a wrapper around the NURBS curve class from the geomdl library.\nBy leveraging the geomdl library, this class provides a high-level interface\nto create and manipulate NURBS curves. The geomdl library is a powerful\nlibrary for working with NURBS curves and surfaces. For more information, see\nhttps://pypi.org/project/geomdl/."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/SketchNurbs.html#overview","title":"SketchNurbs > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfit_curve_from_points\n\nFit a NURBS curve to a set of points.\n\nMethods\n\n\n\n\n\ncontains_point\n\nCheck if the curve contains a given point within a specified tolerance.\n\nProperties\n\n\n\n\n\ngeomdl_nurbs_curve\n\nGet the underlying NURBS curve.\n\ncontrol_points\n\nGet the control points of the curve.\n\ndegree\n\nGet the degree of the curve.\n\nknots\n\nGet the knot vector of the curve.\n\nweights\n\nGet the weights of the control points.\n\nstart\n\nGet the start point of the curve.\n\nend\n\nGet the end point of the curve.\n\nvisualization_polydata\n\nGet the VTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/SketchNurbs.html#import-detail","title":"SketchNurbs > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/SketchNurbs.html#property-detail","title":"SketchNurbs > Property detail","text":"Property detail\n\n\n\nproperty SketchNurbs.geomdl_nurbs_curve: geomdl.NURBS.Curve\n\nGet the underlying NURBS curve.\n\nNotes\n\nThis property gives access to the full functionality of the NURBS curve\ncoming from the geomdl library. Use with caution.\n\n\n\nproperty SketchNurbs.control_points: list[ansys.geometry.core.math.point.Point2D]\n\nGet the control points of the curve.\n\n\n\nproperty SketchNurbs.degree: int\n\nGet the degree of the curve.\n\n\n\nproperty SketchNurbs.knots: list[ansys.geometry.core.typing.Real]\n\nGet the knot vector of the curve.\n\n\n\nproperty SketchNurbs.weights: list[ansys.geometry.core.typing.Real]\n\nGet the weights of the control points.\n\n\n\nproperty SketchNurbs.start: ansys.geometry.core.math.point.Point2D\n\nGet the start point of the curve.\n\n\n\nproperty SketchNurbs.end: ansys.geometry.core.math.point.Point2D\n\nGet the end point of the curve.\n\n\n\nproperty SketchNurbs.visualization_polydata: pyvista.PolyData\n\nGet the VTK polydata representation for PyVista visualization.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration.\n\nNotes\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/nurbs/SketchNurbs.html#method-detail","title":"SketchNurbs > Method detail","text":"Method detail\n\n\n\nSketchNurbs.contains_point(point: ansys.geometry.core.math.point.Point2D, tolerance: ansys.geometry.core.typing.Real = 1e-06) -> bool\n\nCheck if the curve contains a given point within a specified tolerance.\n\nParameters\n\npoint\n\nPoint2D\n\nThe point to check.\n\ntolerance\n\nReal, optional\n\nThe tolerance for the containment check, by default 1e-6.\n\nReturns\n\nbool\n\nTrue if the curve contains the point within the tolerance, False otherwise.\n\n\n\nclassmethod SketchNurbs.fit_curve_from_points(points: list[ansys.geometry.core.math.point.Point2D], degree: int = 3) -> SketchNurbs\n\nFit a NURBS curve to a set of points.\n\nParameters\n\npoints\n\npython:list[Point2D]\n\nThe points to fit the curve to.\n\ndegree\n\npython:int, optional\n\nThe degree of the NURBS curve, by default 3.\n\nReturns\n\nSketchNurbs\n\nA new instance of SketchNurbs fitted to the given points."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/index.html#the-matrixpy-module","title":"The matrix.py module","text":"The matrix.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/index.html#summary","title":"The matrix.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMatrix\n\nProvides matrix representation.\n\nMatrix33\n\nProvides 3x3 matrix representation.\n\nMatrix44\n\nProvides 4x4 matrix representation.\n\nConstants\n\n\n\n\n\nDEFAULT_MATRIX33\n\nDefault value of the 3x3 identity matrix for the Matrix33 class.\n\nDEFAULT_MATRIX44\n\nDefault value of the 4x4 identity matrix for the Matrix44 class.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/index.html#description","title":"The matrix.py module > Description","text":"Description\n\nProvides matrix primitive representations."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/index.html#module-detail","title":"The matrix.py module > Module detail","text":"Module detail\n\n\n\nmatrix.DEFAULT_MATRIX33\n\nDefault value of the 3x3 identity matrix for the Matrix33 class.\n\n\n\nmatrix.DEFAULT_MATRIX44\n\nDefault value of the 4x4 identity matrix for the Matrix44 class."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoop.html#faceloop","title":"FaceLoop","text":"FaceLoop\n\n\n\nclass ansys.geometry.core.designer.face.FaceLoop(type: FaceLoopType, length: pint.Quantity, min_bbox: ansys.geometry.core.math.point.Point3D, max_bbox: ansys.geometry.core.math.point.Point3D, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nProvides an internal class holding the face loops defined.\n\nParameters\n\ntype\n\nFaceLoopType\n\nType of loop.\n\nlength\n\nQuantity\n\nLength of the loop.\n\nmin_bbox\n\nPoint3D\n\nMinimum point of the bounding box containing the loop.\n\nmax_bbox\n\nPoint3D\n\nMaximum point of the bounding box containing the loop.\n\nedges\n\npython:list[Edge]\n\nEdges contained in the loop.\n\nNotes\n\nThis class is to be used only when parsing server side results. It is not\nintended to be instantiated by a user."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoop.html#overview","title":"FaceLoop > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntype\n\nType of the loop.\n\nlength\n\nLength of the loop.\n\nmin_bbox\n\nMinimum point of the bounding box containing the loop.\n\nmax_bbox\n\nMaximum point of the bounding box containing the loop.\n\nedges\n\nEdges contained in the loop."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoop.html#import-detail","title":"FaceLoop > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/face/FaceLoop.html#property-detail","title":"FaceLoop > Property detail","text":"Property detail\n\n\n\nproperty FaceLoop.type: FaceLoopType\n\nType of the loop.\n\n\n\nproperty FaceLoop.length: pint.Quantity\n\nLength of the loop.\n\n\n\nproperty FaceLoop.min_bbox: ansys.geometry.core.math.point.Point3D\n\nMinimum point of the bounding box containing the loop.\n\n\n\nproperty FaceLoop.max_bbox: ansys.geometry.core.math.point.Point3D\n\nMaximum point of the bounding box containing the loop.\n\n\n\nproperty FaceLoop.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nEdges contained in the loop."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/index.html#the-errorspy-module","title":"The errors.py module","text":"The errors.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/errors/index.html#summary","title":"The errors.py module > Summary","text":"Summary\n\nExceptions\n\n\n\n\n\nGeometryRuntimeError\n\nProvides error message when Geometry service passes a runtime error.\n\nGeometryExitedError\n\nProvides error message to raise when Geometry service has exited.\n\nFunctions\n\n\n\n\n\nhandler\n\nPass signal to the custom interrupt handler.\n\nprotect_grpc\n\nCapture gRPC exceptions and raise a more succinct error message.\n\nConstants\n\n\n\n\n\nSIGINT_TRACKER\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/errors/index.html#description","title":"The errors.py module > Description","text":"Description\n\nProvides PyAnsys Geometry-specific errors."},{"objectID":"Home","href":"api/ansys/geometry/core/errors/index.html#module-detail","title":"The errors.py module > Module detail","text":"Module detail\n\n\n\nerrors.handler(sig, frame)\n\nPass signal to the custom interrupt handler.\n\n\n\nerrors.protect_grpc(func)\n\nCapture gRPC exceptions and raise a more succinct error message.\n\nThis method captures the KeyboardInterrupt exception to avoid\nsegfaulting the Geometry service.\n\nWhile this works some of the time, it does not work all of the time. For some\nreason, gRPC still captures SIGINT.\n\n\n\nerrors.SIGINT_TRACKER = []\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/index.html#the-patternspy-module","title":"The patterns.py module","text":"The patterns.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/index.html#summary","title":"The patterns.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPatternsServiceV0\n\nPatterns service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/patterns/index.html#description","title":"The patterns.py module > Description","text":"Description\n\nModule containing the patterns service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/GRPCAdminServiceV1.html#grpcadminservicev1","title":"GRPCAdminServiceV1","text":"GRPCAdminServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.admin.GRPCAdminServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.admin.GRPCAdminService\n\nAdmin service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nadmin service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/GRPCAdminServiceV1.html#overview","title":"GRPCAdminServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_backend\n\nGet server information.\n\nget_logs\n\nGet server logs.\n\nget_service_status\n\nGet server status (i.e. healthy or not).\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/GRPCAdminServiceV1.html#import-detail","title":"GRPCAdminServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/GRPCAdminServiceV1.html#attribute-detail","title":"GRPCAdminServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCAdminServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/admin/GRPCAdminServiceV1.html#method-detail","title":"GRPCAdminServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCAdminServiceV1.get_backend(**kwargs) -> dict\n\nGet server information.\n\n\n\nabstractmethod GRPCAdminServiceV1.get_logs(**kwargs) -> dict\n\nGet server logs.\n\n\n\nabstractmethod GRPCAdminServiceV1.get_service_status(**kwargs) -> dict\n\nGet server status (i.e. healthy or not)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/index.html#the-model_toolspy-module","title":"The model_tools.py module","text":"The model_tools.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/index.html#summary","title":"The model_tools.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCModelToolsServiceV1\n\nModel tools service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/model_tools/index.html#description","title":"The model_tools.py module > Description","text":"Description\n\nModule containing the model tools service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/index.html#the-trianglepy-module","title":"The triangle.py module","text":"The triangle.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/index.html#summary","title":"The triangle.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTriangle\n\nProvides for modeling 2D triangles.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/index.html#description","title":"The triangle.py module > Description","text":"Description\n\nProvides for creating and managing a triangle."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/index.html#the-driving_dimensionspy-module","title":"The driving_dimensions.py module","text":"The driving_dimensions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/index.html#summary","title":"The driving_dimensions.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDrivingDimensionsServiceV1\n\nDriving Dimensions service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/driving_dimensions/index.html#description","title":"The driving_dimensions.py module > Description","text":"Description\n\nModule containing the Driving Dimension service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/Modeler.html#modeler","title":"Modeler","text":"Modeler\n\n\n\nclass ansys.geometry.core.modeler.Modeler(host: str = pygeom_defaults.DEFAULT_HOST, port: str | int = pygeom_defaults.DEFAULT_PORT, channel: grpc.Channel | None = None, remote_instance: ansys.platform.instancemanagement.Instance | None = None, docker_instance: ansys.geometry.core.connection.docker_instance.LocalDockerInstance | None = None, product_instance: ansys.geometry.core.connection.product_instance.ProductInstance | None = None, timeout: ansys.geometry.core.typing.Real = 120, logging_level: int = logging.INFO, logging_file: pathlib.Path | str | None = None)\n\nProvides for interacting with an open session of the Geometry service.\n\nParameters\n\nhost\n\npython:str,  default: DEFAULT_HOST\n\nHost where the server is running.\n\nport\n\npython:str | python:int, default: DEFAULT_PORT\n\nPort number where the server is running.\n\nchannel\n\nChannel, default: python:None\n\ngRPC channel for server communication.\n\nremote_instance\n\nansys.platform.instancemanagement.Instance, default: python:None\n\nCorresponding remote instance when the Geometry service\nis launched using PyPIM. This instance\nis deleted when the GrpcClient.close\nmethod is called.\n\ndocker_instance\n\nLocalDockerInstance, default: python:None\n\nCorresponding local Docker instance when the Geometry service is launched using the\nlaunch_docker_modeler\nmethod. This instance is deleted when the\nGrpcClient.close\nmethod is called.\n\nproduct_instance\n\nProductInstance, default: python:None\n\nCorresponding local product instance when the product (Discovery or SpaceClaim)\nis launched through the launch_modeler_with_geometry_service(),\nlaunch_modeler_with_discovery() or the launch_modeler_with_spaceclaim()\ninterface. This instance will be deleted\nwhen the GrpcClient.close\nmethod is called.\n\ntimeout\n\nReal, default: 120\n\nTime in seconds for trying to achieve the connection.\n\nlogging_level\n\npython:int, default: INFO\n\nLogging level to apply to the client.\n\nlogging_file\n\npython:str, Path, default: python:None\n\nFile to output the log to, if requested."},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/Modeler.html#overview","title":"Modeler > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_design\n\nInitialize a new design with the connected client.\n\nget_active_design\n\nGet the active design on the modeler object.\n\nread_existing_design\n\nRead the existing design on the service with the connected client.\n\nclose\n\nAccess the client’s close method.\n\nexit\n\nAccess the client’s close method.\n\nopen_file\n\nOpen a file.\n\nrun_discovery_script_file\n\nRun a Discovery script file.\n\nget_service_logs\n\nGet the service logs.\n\nProperties\n\n\n\n\n\nclient\n\nModeler instance client.\n\ndesign\n\nRetrieve the design within the modeler workspace.\n\ndesigns\n\nRetrieve the design within the modeler workspace.\n\nrepair_tools\n\nAccess to repair tools.\n\nprepare_tools\n\nAccess to prepare tools.\n\nmeasurement_tools\n\nAccess to measurement tools.\n\ngeometry_commands\n\nAccess to geometry commands.\n\nunsupported\n\nAccess to unsupported commands.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the modeler as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/Modeler.html#import-detail","title":"Modeler > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/Modeler.html#property-detail","title":"Modeler > Property detail","text":"Property detail\n\n\n\nproperty Modeler.client: ansys.geometry.core.connection.client.GrpcClient\n\nModeler instance client.\n\n\n\nproperty Modeler.design: ansys.geometry.core.designer.design.Design\n\nRetrieve the design within the modeler workspace.\n\n\n\nproperty Modeler.designs: dict[str, ansys.geometry.core.designer.design.Design]\n\nRetrieve the design within the modeler workspace.\n\nNotes\n\nThis method is deprecated. Use the design() property instead.\n\n\n\nproperty Modeler.repair_tools: ansys.geometry.core.tools.repair_tools.RepairTools\n\nAccess to repair tools.\n\n\n\nproperty Modeler.prepare_tools: ansys.geometry.core.tools.prepare_tools.PrepareTools\n\nAccess to prepare tools.\n\n\n\nproperty Modeler.measurement_tools: ansys.geometry.core.tools.measurement_tools.MeasurementTools\n\nAccess to measurement tools.\n\nNotes\n\nThis property is only available starting on Ansys release 24R2.\n\n\n\nproperty Modeler.geometry_commands: ansys.geometry.core.designer.geometry_commands.GeometryCommands\n\nAccess to geometry commands.\n\n\n\nproperty Modeler.unsupported: ansys.geometry.core.tools.unsupported.UnsupportedCommands\n\nAccess to unsupported commands."},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/Modeler.html#method-detail","title":"Modeler > Method detail","text":"Method detail\n\n\n\nModeler.create_design(name: str) -> ansys.geometry.core.designer.design.Design\n\nInitialize a new design with the connected client.\n\nParameters\n\nname\n\npython:str\n\nName for the new design.\n\nReturns\n\nDesign\n\nDesign object created on the server.\n\n\n\nModeler.get_active_design(sync_with_backend: bool = True) -> ansys.geometry.core.designer.design.Design\n\nGet the active design on the modeler object.\n\nParameters\n\nsync_with_backend\n\nbool, default: python:True\n\nWhether to sync the active design with the remote service. If set to False,\nthe active design may be out-of-sync with the remote service. This is useful\nwhen the active design is known to be up-to-date.\n\nReturns\n\nDesign\n\nDesign object already existing on the modeler.\n\n\n\nModeler.read_existing_design() -> ansys.geometry.core.designer.design.Design\n\nRead the existing design on the service with the connected client.\n\nReturns\n\nDesign\n\nDesign object already existing on the server.\n\n\n\nModeler.close(close_design: bool = True) -> None\n\nAccess the client’s close method.\n\nParameters\n\nclose_design\n\nbool, default: python:True\n\nWhether to close the design before closing the client.\n\n\n\nModeler.exit(close_design: bool = True) -> None\n\nAccess the client’s close method.\n\nParameters\n\nclose_design\n\nbool, default: python:True\n\nWhether to close the design before closing the client.\n\nNotes\n\nThis method is calling the same method as\nclose().\n\n\n\nModeler.open_file(file_path: str | pathlib.Path, upload_to_server: bool = True, import_options: ansys.geometry.core.misc.options.ImportOptions = ImportOptions()) -> ansys.geometry.core.designer.design.Design\n\nOpen a file.\n\nThis method imports a design into the service. On Windows and Linux, .scdocx, .dsco,\nand reader formats are supported. Please see notes for supported reader formats.\n\nIf the file is a shattered assembly with external references, the whole containing folder\nwill need to be uploaded. Ensure proper folder structure in order to prevent the uploading\nof unnecessary files.\n\nParameters\n\nfile_path\n\npython:str, Path\n\nPath of the file to open. The extension of the file must be included.\n\nupload_to_server\n\nbool\n\nTrue if the service is running on a remote machine. If service is running on the local\nmachine, set to False, as there is no reason to upload the file.\n\nimport_options\n\nImportOptions\n\nImport options that toggle certain features when opening a file.\n\nReturns\n\nDesign\n\nNewly imported design.\n\nNotes\n\nFormat and latest supported version\n\nAutoCAD 2024\n\nCATIA V5 2024\n\nCATIA V6 2024\n\nCreo Parametric 11\n\nIGES 5.3\n\nInventor 2025\n\nJT 10.10\n\nNX 2412\n\nRhino 8\n\nSolid Edge 2025\n\nSOLIDWORKS 2025\n\nSTEP AP242\n\n\n\nModeler.__repr__() -> str\n\nRepresent the modeler as a string.\n\n\n\nModeler.run_discovery_script_file(file_path: str | pathlib.Path, script_args: dict[str, str] | None = None, import_design: bool = False, api_version: int | str | ansys.geometry.core.connection.backend.ApiVersions = None) -> tuple[dict[str, str], ansys.geometry.core.designer.design.Design | None]\n\nRun a Discovery script file.\n\nIf arguments are passed to the script, they must be in the form of a dictionary.\nOn the server side, the script will receive the arguments as a dictionary of strings,\nunder the variable name argsDict. For example, if the script is called with the\narguments run_discovery_script_file(..., script_args = {\"length\": \"20\"}, ...),\nthe script will receive the dictionary argsDict with the key-value pair\n{\"length\": \"20\"}.\n\nIf an output is expected from the script, it will be returned as a dictionary of\nstrings. The keys and values of the dictionary are the variables and their values\nthat the script returns. However, it is necessary that the script creates a\ndictionary called result with the variables and their values that are expected\nto be returned. For example, if the script is expected to return the number of bodies\nin the design, the script should create a dictionary called result with the\nkey-value pair {\"numBodies\": numBodies}, where numBodies is the number of\nbodies in the design.\n\nThe implied API version of the script should match the API version of the running\nGeometry Service. DMS API versions 24.1 and later are supported. DMS is a\nWindows-based modeling service that has been containerized to ease distribution,\nexecution, and remotability operations.\n\nParameters\n\nfile_path\n\npython:str | Path\n\nPath of the file. The extension of the file must be included.\n\nscript_args\n\npython:dict[python:str, python:str], optional.\n\nArguments to pass to the script. By default, None.\n\nimport_design\n\nbool, optional.\n\nWhether to refresh the current design from the service. When the script\nis expected to modify the existing design, set this to True to retrieve\nup-to-date design data. When this is set to False (default) and the\nscript modifies the current design, the design may be out-of-sync. By default,\nFalse.\n\napi_version\n\npython:int | python:str | ApiVersions, optional\n\nThe scripting API version to use. For example, version 24.1 can be passed as\nan integer 241, a string “241” or using the\nansys.geometry.core.connection.backend.ApiVersions enum class.\nBy default, None. When specified, the service will attempt to run the script with\nthe specified API version. If the API version is not supported, the service will raise\nan error. If you are using Discovery or SpaceClaim, the product will determine the API\nversion to use, so there is no need to specify this parameter.\n\nReturns\n\npython:dict[python:str, python:str]\n\nValues returned from the script.\n\nDesign, optional\n\nUp-to-date current design. This is only returned if import_design=True.\n\nRaises\n\nGeometryRuntimeError\n\nIf the Discovery script fails to run. Otherwise, assume that the script\nran successfully.\n\nNotes\n\nThe Ansys Geometry Service only supports scripts that are of the\nsame version as the running service. Any api_version input will\nbe ignored.\n\n\n\nModeler.get_service_logs(all_logs: bool = False, dump_to_file: bool = False, logs_folder: str | pathlib.Path | None = None) -> str | dict[str, str] | pathlib.Path\n\nGet the service logs.\n\nParameters\n\nall_logs\n\nbool, default: python:False\n\nFlag indicating whether all logs should be retrieved. By default,\nonly the current logs are retrieved.\n\ndump_to_file\n\nbool, default: python:False\n\nFlag indicating whether the logs should be dumped to a file.\nBy default, the logs are not dumped to a file.\n\nlogs_folder\n\npython:str,  Path or python:None, default: python:None\n\nName of the folder where the logs should be dumped. This parameter\nis only used if the dump_to_file parameter is set to True.\n\nReturns\n\npython:str\n\nService logs as a string. This is returned if the dump_to_file parameter\nis set to False.\n\npython:dict[python:str, python:str]\n\nDictionary containing the logs. The keys are the logs names,\nand the values are the logs as strings. This is returned if the all_logs\nparameter is set to True and the dump_to_file parameter\nis set to False.\n\nPath\n\nPath to the folder containing the logs (if the all_logs\nparameter is set to True) or the path to the log file (if only\nthe current logs are retrieved). The dump_to_file parameter\nmust be set to True.\n\nNotes\n\nThis property is only available starting on Ansys release 25R1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/GRPCEdgesServiceV0.html#grpcedgesservicev0","title":"GRPCEdgesServiceV0","text":"GRPCEdgesServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.edges.GRPCEdgesServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.edges.GRPCEdgesService\n\nEdges service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nedges service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/GRPCEdgesServiceV0.html#overview","title":"GRPCEdgesServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_edge\n\nGet edge.\n\nget_curve\n\nGet curve information for the edge.\n\nget_start_and_end_points\n\nGet start and end points for the edge.\n\nget_length\n\nGet the length of the edge.\n\nget_interval\n\nGet the interval of the edge.\n\nget_faces\n\nGet the faces that are connected to the edge.\n\nget_vertices\n\nGet the vertices that are connected to the edge.\n\nget_bounding_box\n\nGet the bounding box of the edge.\n\nextrude_edges\n\nExtrude edges.\n\nextrude_edges_up_to\n\nExtrude edges up to a face.\n\nmove_imprint_edges\n\nMove imprint edges.\n\noffset_edges\n\nOffset edges.\n\nAttributes\n\n\n\n\n\nstub\n\n\n\ncommands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/GRPCEdgesServiceV0.html#import-detail","title":"GRPCEdgesServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/GRPCEdgesServiceV0.html#attribute-detail","title":"GRPCEdgesServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCEdgesServiceV0.stub\n\n\n\n\n\nGRPCEdgesServiceV0.commands_stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/edges/GRPCEdgesServiceV0.html#method-detail","title":"GRPCEdgesServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCEdgesServiceV0.get_edge(**kwargs) -> dict\n\nGet edge.\n\n\n\nGRPCEdgesServiceV0.get_curve(**kwargs) -> dict\n\nGet curve information for the edge.\n\n\n\nGRPCEdgesServiceV0.get_start_and_end_points(**kwargs) -> dict\n\nGet start and end points for the edge.\n\n\n\nGRPCEdgesServiceV0.get_length(**kwargs) -> dict\n\nGet the length of the edge.\n\n\n\nGRPCEdgesServiceV0.get_interval(**kwargs) -> dict\n\nGet the interval of the edge.\n\n\n\nGRPCEdgesServiceV0.get_faces(**kwargs) -> dict\n\nGet the faces that are connected to the edge.\n\n\n\nGRPCEdgesServiceV0.get_vertices(**kwargs) -> dict\n\nGet the vertices that are connected to the edge.\n\n\n\nGRPCEdgesServiceV0.get_bounding_box(**kwargs) -> dict\n\nGet the bounding box of the edge.\n\n\n\nGRPCEdgesServiceV0.extrude_edges(**kwargs) -> dict\n\nExtrude edges.\n\n\n\nGRPCEdgesServiceV0.extrude_edges_up_to(**kwargs) -> dict\n\nExtrude edges up to a face.\n\n\n\nGRPCEdgesServiceV0.move_imprint_edges(**kwargs) -> dict\n\nMove imprint edges.\n\n\n\nGRPCEdgesServiceV0.offset_edges(**kwargs) -> dict\n\nOffset edges."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/index.html#the-coordinate_systemspy-module","title":"The coordinate_systems.py module","text":"The coordinate_systems.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/index.html#summary","title":"The coordinate_systems.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCoordinateSystemServiceV0\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/coordinate_systems/index.html#description","title":"The coordinate_systems.py module > Description","text":"Description\n\nModule containing the coordinate systems service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamType.html#beamtype","title":"BeamType","text":"BeamType\n\n\n\nclass ansys.geometry.core.designer.beam.BeamType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for the beam types supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamType.html#overview","title":"BeamType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBEAM\n\n\n\nSPRING\n\n\n\nLINK_TRUSS\n\n\n\nCABLE\n\n\n\nPIPE\n\n\n\nTHERMALFLUID\n\n\n\nUNKNOWN\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamType.html#import-detail","title":"BeamType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/beam/BeamType.html#attribute-detail","title":"BeamType > Attribute detail","text":"Attribute detail\n\n\n\nBeamType.BEAM = 0\n\n\n\n\n\nBeamType.SPRING = 1\n\n\n\n\n\nBeamType.LINK_TRUSS = 2\n\n\n\n\n\nBeamType.CABLE = 3\n\n\n\n\n\nBeamType.PIPE = 4\n\n\n\n\n\nBeamType.THERMALFLUID = 5\n\n\n\n\n\nBeamType.UNKNOWN = 6\n\n"},{"objectID":"Home","href":"user_guide/designer.html#designer","title":"Designer","text":"Designer\n\nThe PyAnsys Geometry designer subpackage organizes geometry assemblies\nand synchronizes to a supporting Geometry service instance."},{"objectID":"Home","href":"user_guide/designer.html#create-the-model","title":"Designer > Create the model","text":"Create the model\n\nThis code create the Modeler() object which owns the whole designs\ntools and data."},{"objectID":"Home","href":"user_guide/designer.html#define-the-model","title":"Designer > Define the model","text":"Define the model\n\nThe following code define the model by creating a sketch with a circle on the client.\nIt then creates the model on the server."},{"objectID":"Home","href":"user_guide/designer.html#add-materials-to-model","title":"Designer > Add materials to model","text":"Add materials to model\n\nThis code adds the data structure and properties for individual materials:"},{"objectID":"Home","href":"user_guide/designer.html#create-bodies-by-extruding-the-sketch","title":"Designer > Create bodies by extruding the sketch","text":"Create bodies by extruding the sketch\n\nExtruding a sketch projects all of the specified geometries onto the body. To create a solid body,\nthis code extrudes the sketch profile by a given distance."},{"objectID":"Home","href":"user_guide/designer.html#create-bodies-by-extruding-the-face","title":"Designer > Create bodies by extruding the face","text":"Create bodies by extruding the face\n\nThe following code shows how you can also extrude a face profile by a given distance to create a solid body.\nThere are no modifications against the body containing the source face.\n\nYou can also translate and tessellate design bodies and project curves onto them. For\nmore information, see these classes:\n\nBody()\n\nComponent()"},{"objectID":"Home","href":"user_guide/designer.html#download-and-save-design","title":"Designer > Download and save design","text":"Download and save design\n\nYou can save your design to disk or download the design of the active Geometry server instance.\nThe following code shows how to download and save the design.\n\nFor more information, see the Design submodule."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/GRPCDrivingDimensionsService.html#grpcdrivingdimensionsservice","title":"GRPCDrivingDimensionsService","text":"GRPCDrivingDimensionsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.driving_dimensions.GRPCDrivingDimensionsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nDriving Dimension service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/GRPCDrivingDimensionsService.html#overview","title":"GRPCDrivingDimensionsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nget_all_parameters\n\nGet driving dimensions.\n\nset_parameter\n\nSet driving dimensions."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/GRPCDrivingDimensionsService.html#import-detail","title":"GRPCDrivingDimensionsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/driving_dimensions/GRPCDrivingDimensionsService.html#method-detail","title":"GRPCDrivingDimensionsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCDrivingDimensionsService.get_all_parameters(**kwargs) -> dict\n\nGet driving dimensions.\n\n\n\nabstractmethod GRPCDrivingDimensionsService.set_parameter(**kwargs) -> dict\n\nSet driving dimensions."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/index.html#the-materialspy-module","title":"The materials.py module","text":"The materials.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/index.html#summary","title":"The materials.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCMaterialsService\n\nMaterials service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/materials/index.html#description","title":"The materials.py module > Description","text":"Description\n\nModule containing the materials service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/GRPCPartsServiceV0.html#grpcpartsservicev0","title":"GRPCPartsServiceV0","text":"GRPCPartsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.parts.GRPCPartsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.parts.GRPCPartsService\n\nParts service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nparts service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/GRPCPartsServiceV0.html#overview","title":"GRPCPartsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nexport\n\nExport a part to a file.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/GRPCPartsServiceV0.html#import-detail","title":"GRPCPartsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/GRPCPartsServiceV0.html#attribute-detail","title":"GRPCPartsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCPartsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/parts/GRPCPartsServiceV0.html#method-detail","title":"GRPCPartsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCPartsServiceV0.export(**kwargs) -> dict\n\nExport a part to a file."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/GRPCAssemblyControlsServiceV0.html#grpcassemblycontrolsservicev0","title":"GRPCAssemblyControlsServiceV0","text":"GRPCAssemblyControlsServiceV0\n\n\n\nclass ansys.geometry.core._grpc._services.v0.assembly_controls.GRPCAssemblyControlsServiceV0(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.assembly_controls.GRPCAssemblyControlsService\n\nAssembly controls service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nassembly controls service. It is specifically designed for the v0 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/GRPCAssemblyControlsServiceV0.html#overview","title":"GRPCAssemblyControlsServiceV0 > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_align_condition\n\nCreate an align condition between two geometry objects.\n\ncreate_tangent_condition\n\nCreate a tangent condition between two geometry objects.\n\ncreate_orient_condition\n\nCreate an orient condition between two geometry objects.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/GRPCAssemblyControlsServiceV0.html#import-detail","title":"GRPCAssemblyControlsServiceV0 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/GRPCAssemblyControlsServiceV0.html#attribute-detail","title":"GRPCAssemblyControlsServiceV0 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCAssemblyControlsServiceV0.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/assembly_controls/GRPCAssemblyControlsServiceV0.html#method-detail","title":"GRPCAssemblyControlsServiceV0 > Method detail","text":"Method detail\n\n\n\nGRPCAssemblyControlsServiceV0.create_align_condition(**kwargs) -> dict\n\nCreate an align condition between two geometry objects.\n\n\n\nGRPCAssemblyControlsServiceV0.create_tangent_condition(**kwargs) -> dict\n\nCreate a tangent condition between two geometry objects.\n\n\n\nGRPCAssemblyControlsServiceV0.create_orient_condition(**kwargs) -> dict\n\nCreate an orient condition between two geometry objects."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/index.html#the-mating_conditionspy-module","title":"The mating_conditions.py module","text":"The mating_conditions.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/index.html#summary","title":"The mating_conditions.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMatingCondition\n\nMatingCondition dataclass.\n\nAlignCondition\n\nAlignCondition dataclass.\n\nTangentCondition\n\nTangentCondition dataclass.\n\nOrientCondition\n\nOrientCondition dataclass.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/mating_conditions/index.html#description","title":"The mating_conditions.py module > Description","text":"Description\n\nProvides dataclasses for mating conditions."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/index.html#the-plotterpy-module","title":"The plotter.py module","text":"The plotter.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/index.html#summary","title":"The plotter.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGeometryPlotter\n\nPlotter for PyAnsys Geometry objects.\n\nConstants\n\n\n\n\n\nPOLYDATA_COLOR_CYCLER\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/index.html#description","title":"The plotter.py module > Description","text":"Description\n\nProvides plotting for various PyAnsys Geometry objects."},{"objectID":"Home","href":"api/ansys/geometry/core/plotting/plotter/index.html#module-detail","title":"The plotter.py module > Module detail","text":"Module detail\n\n\n\nplotter.POLYDATA_COLOR_CYCLER\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/GRPCCommandsServiceV1.html#grpccommandsservicev1","title":"GRPCCommandsServiceV1","text":"GRPCCommandsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.commands.GRPCCommandsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.commands.GRPCCommandsService\n\nCommands service for gRPC communication with the Geometry server.\n\nThis class provides methods to call commands in the\nGeometry server using gRPC. It is specifically designed for the v1\nversion of the Geometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/GRPCCommandsServiceV1.html#overview","title":"GRPCCommandsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nset_name\n\nSet the name of an object.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/GRPCCommandsServiceV1.html#import-detail","title":"GRPCCommandsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/GRPCCommandsServiceV1.html#attribute-detail","title":"GRPCCommandsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCCommandsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/GRPCCommandsServiceV1.html#method-detail","title":"GRPCCommandsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCCommandsServiceV1.set_name(**kwargs) -> dict\n\nSet the name of an object."},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/index.html#the-modelerpy-module","title":"The modeler.py module","text":"The modeler.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/index.html#summary","title":"The modeler.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nModeler\n\nProvides for interacting with an open session of the Geometry service.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/modeler/index.html#description","title":"The modeler.py module > Description","text":"Description\n\nProvides for interacting with the Geometry service."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/index.html#the-dbuapplicationpy-module","title":"The dbuapplication.py module","text":"The dbuapplication.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/index.html#summary","title":"The dbuapplication.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCDbuApplicationServiceV1\n\nDBU Application service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/dbuapplication/index.html#description","title":"The dbuapplication.py module > Description","text":"Description\n\nModule containing the DBU Application service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/ConeEvaluation.html#coneevaluation","title":"ConeEvaluation","text":"ConeEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.cone.ConeEvaluation(cone: Cone, parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nBases: ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation\n\nEvaluate the cone at given parameters.\n\nParameters\n\ncone: ~ansys.geometry.core.shapes.surfaces.cone.Cone\n\nCone to evaluate.\n\nparameter: ParamUV\n\nPparameters (u, v) to evaluate the cone at."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/ConeEvaluation.html#overview","title":"ConeEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncone\n\nCone being evaluated.\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPosition of the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nSecond derivative with respect to the U and V parameters.\n\nvv_derivative\n\nSecond derivative with respect to the V parameter.\n\nmin_curvature\n\nMinimum curvature of the cone.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature of the cone.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/ConeEvaluation.html#import-detail","title":"ConeEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cone/ConeEvaluation.html#property-detail","title":"ConeEvaluation > Property detail","text":"Property detail\n\n\n\nproperty ConeEvaluation.cone: Cone\n\nCone being evaluated.\n\n\n\nproperty ConeEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nParameter that the evaluation is based upon.\n\n\n\nproperty ConeEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nPosition of the evaluation.\n\nReturns\n\nPoint3D\n\nPoint that lies on the cone at this evaluation.\n\n\n\nproperty ConeEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nNormal to the surface.\n\nReturns\n\nUnitVector3D\n\nNormal unit vector to the cone at this evaluation.\n\n\n\nproperty ConeEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the U parameter.\n\n\n\nproperty ConeEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nFirst derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nFirst derivative with respect to the V parameter.\n\n\n\nproperty ConeEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the U parameter.\n\n\n\nproperty ConeEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the U and V parameters.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to U and V parameters.\n\n\n\nproperty ConeEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nSecond derivative with respect to the V parameter.\n\nReturns\n\nVector3D\n\nSecond derivative with respect to the V parameter.\n\n\n\nproperty ConeEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nMinimum curvature of the cone.\n\nReturns\n\nReal\n\nMinimum curvature of the cone.\n\n\n\nproperty ConeEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMinimum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMinimum curvature direction.\n\n\n\nproperty ConeEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nMaximum curvature of the cone.\n\nReturns\n\nReal\n\nMaximum curvature of the cone.\n\n\n\nproperty ConeEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nMaximum curvature direction.\n\nReturns\n\nUnitVector3D\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/index.html#the-partspy-module","title":"The parts.py module","text":"The parts.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/index.html#summary","title":"The parts.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCPartsServiceV1\n\nParts service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/parts/index.html#description","title":"The parts.py module > Description","text":"Description\n\nModule containing the parts service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/index.html#the-commandspy-module","title":"The commands.py module","text":"The commands.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/index.html#summary","title":"The commands.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCommandsServiceV1\n\nCommands service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/commands/index.html#description","title":"The commands.py module > Description","text":"Description\n\nModule containing the commands service implementation for v1."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix.html#matrix","title":"Matrix","text":"Matrix\n\n\n\nclass ansys.geometry.core.math.matrix.Matrix(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: numpy.ndarray\n\nProvides matrix representation.\n\nParameters\n\ninput\n\nndarray | RealSequence\n\nMatrix arguments as a np.ndarray class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix.html#overview","title":"Matrix > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndeterminant\n\nGet the determinant of the matrix.\n\ninverse\n\nProvide the inverse of the matrix.\n\nSpecial methods\n\n\n\n\n\n__mul__\n\nGet the multiplication of the matrix.\n\n__eq__\n\nEquals operator for the Matrix class.\n\n__ne__\n\nNot equals operator for the Matrix class."},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix.html#import-detail","title":"Matrix > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/matrix/Matrix.html#method-detail","title":"Matrix > Method detail","text":"Method detail\n\n\n\nMatrix.determinant() -> ansys.geometry.core.typing.Real\n\nGet the determinant of the matrix.\n\n\n\nMatrix.inverse() -> Matrix\n\nProvide the inverse of the matrix.\n\n\n\nMatrix.__mul__(other: Matrix | numpy.ndarray) -> Matrix\n\nGet the multiplication of the matrix.\n\n\n\nMatrix.__eq__(other: Matrix) -> bool\n\nEquals operator for the Matrix class.\n\n\n\nMatrix.__ne__(other: Matrix) -> bool\n\nNot equals operator for the Matrix class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/TrimmedCurve.html#trimmedcurve","title":"TrimmedCurve","text":"TrimmedCurve\n\n\n\nclass ansys.geometry.core.shapes.curves.trimmed_curve.TrimmedCurve(geometry: ansys.geometry.core.shapes.curves.curve.Curve, start: ansys.geometry.core.math.point.Point3D, end: ansys.geometry.core.math.point.Point3D, interval: ansys.geometry.core.shapes.parameterization.Interval, length: pint.Quantity, grpc_client: ansys.geometry.core.connection.client.GrpcClient = None)\n\nRepresents a trimmed curve.\n\nA trimmed curve is a curve that has a boundary. This boundary comes in the form of an interval.\n\nParameters\n\ngeometry\n\nCurve\n\nUnderlying mathematical representation of the curve.\n\nstart\n\nPoint3D\n\nStart point of the curve.\n\nend\n\nPoint3D\n\nEnd point of the curve.\n\ninterval\n\nInterval\n\nParametric interval that bounds the curve.\n\nlength\n\nQuantity\n\nLength of the curve.\n\ngrpc_client\n\nGrpcClient, default: python:None\n\ngRPC client that is required for advanced functions such as intersect_curve()."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/TrimmedCurve.html#overview","title":"TrimmedCurve > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nevaluate_proportion\n\nEvaluate the curve at a proportional value.\n\nintersect_curve\n\nGet the intersect points of this trimmed curve with another one.\n\ntransformed_copy\n\nReturn a copy of the trimmed curve transformed by the given matrix.\n\ntranslate\n\nTranslate the trimmed curve by a given vector and distance.\n\nrotate\n\nRotate the trimmed curve around a given axis centered at a given point.\n\nProperties\n\n\n\n\n\ngeometry\n\nUnderlying mathematical curve.\n\nstart\n\nStart point of the curve.\n\nend\n\nEnd point of the curve.\n\nlength\n\nCalculated length of the edge.\n\ninterval\n\nInterval of the curve that provides its boundary.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the trimmed curve as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/TrimmedCurve.html#import-detail","title":"TrimmedCurve > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/TrimmedCurve.html#property-detail","title":"TrimmedCurve > Property detail","text":"Property detail\n\n\n\nproperty TrimmedCurve.geometry: ansys.geometry.core.shapes.curves.curve.Curve\n\nUnderlying mathematical curve.\n\n\n\nproperty TrimmedCurve.start: ansys.geometry.core.math.point.Point3D\n\nStart point of the curve.\n\n\n\nproperty TrimmedCurve.end: ansys.geometry.core.math.point.Point3D\n\nEnd point of the curve.\n\n\n\nproperty TrimmedCurve.length: pint.Quantity\n\nCalculated length of the edge.\n\n\n\nproperty TrimmedCurve.interval: ansys.geometry.core.shapes.parameterization.Interval\n\nInterval of the curve that provides its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/trimmed_curve/TrimmedCurve.html#method-detail","title":"TrimmedCurve > Method detail","text":"Method detail\n\n\n\nTrimmedCurve.evaluate_proportion(param: ansys.geometry.core.typing.Real) -> ansys.geometry.core.shapes.curves.curve_evaluation.CurveEvaluation\n\nEvaluate the curve at a proportional value.\n\nA parameter of 0 corresponds to the start of the curve, while a parameter of 1\ncorresponds to the end of the curve.\n\nParameters\n\nparam\n\nReal\n\nParameter in the proportional range [0,1].\n\nReturns\n\nCurveEvaluation\n\nResulting curve evaluation.\n\n\n\nTrimmedCurve.intersect_curve(other: TrimmedCurve) -> list[ansys.geometry.core.math.point.Point3D]\n\nGet the intersect points of this trimmed curve with another one.\n\nIf the two trimmed curves do not intersect, an empty list is returned.\n\nParameters\n\nother\n\nTrimmedCurve\n\nTrimmed curve to intersect with.\n\nReturns\n\npython:list[Point3D]\n\nAll points of intersection between the curves.\n\n\n\nTrimmedCurve.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> TrimmedCurve\n\nReturn a copy of the trimmed curve transformed by the given matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\nTransformation matrix to apply to the curve.\n\nReturns\n\nTrimmedCurve\n\nA new trimmed curve with the transformation applied.\n\n\n\nTrimmedCurve.translate(direction: ansys.geometry.core.math.vector.UnitVector3D, distance: ansys.geometry.core.typing.Real | pint.Quantity | ansys.geometry.core.misc.measurements.Distance) -> None\n\nTranslate the trimmed curve by a given vector and distance.\n\nParameters\n\ndirection\n\nUnitVector3D\n\nDirection of translation.\n\ndistance\n\nReal | Quantity | Distance\n\nDistance to translate.\n\n\n\nTrimmedCurve.rotate(origin: ansys.geometry.core.math.point.Point3D, axis: ansys.geometry.core.math.vector.UnitVector3D, angle: ansys.geometry.core.typing.Real | pint.Quantity | ansys.geometry.core.misc.measurements.Angle) -> None\n\nRotate the trimmed curve around a given axis centered at a given point.\n\nParameters\n\norigin\n\nPoint3D\n\nOrigin point of the rotation.\n\naxis\n\nUnitVector3D\n\nAxis of rotation.\n\nangle\n\nReal | Quantity | Angle\n\nAngle to rotate in radians.\n\n\n\nTrimmedCurve.__repr__() -> str\n\nRepresent the trimmed curve as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/DesignPoint.html#designpoint","title":"DesignPoint","text":"DesignPoint\n\n\n\nclass ansys.geometry.core.designer.designpoint.DesignPoint(id: str, name: str, point: ansys.geometry.core.math.point.Point3D, parent_component: ansys.geometry.core.designer.component.Component | None = None)\n\nProvides for creating design points in components.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the design points.\n\nname\n\npython:str\n\nUser-defined label for the design points.\n\npoints\n\nPoint3D\n\n3D point constituting the design points.\n\nparent_component\n\nComponent | python:None\n\nParent component to place the new design point under within the design assembly.\nIts default value is None."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/DesignPoint.html#overview","title":"DesignPoint > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nID of the design point.\n\nname\n\nName of the design point.\n\nvalue\n\nValue of the design point.\n\nparent_component\n\nComponent node that the design point is under.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\nRepresent the design points as a string."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/DesignPoint.html#import-detail","title":"DesignPoint > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/DesignPoint.html#property-detail","title":"DesignPoint > Property detail","text":"Property detail\n\n\n\nproperty DesignPoint.id: str\n\nID of the design point.\n\n\n\nproperty DesignPoint.name: str\n\nName of the design point.\n\n\n\nproperty DesignPoint.value: ansys.geometry.core.math.point.Point3D\n\nValue of the design point.\n\n\n\nproperty DesignPoint.parent_component: ansys.geometry.core.designer.component.Component\n\nComponent node that the design point is under."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/designpoint/DesignPoint.html#method-detail","title":"DesignPoint > Method detail","text":"Method detail\n\n\n\nDesignPoint.__repr__() -> str\n\nRepresent the design points as a string."},{"objectID":"Examples","href":"examples/01_getting_started/01_math.html#pyansys-geometry-101-math","title":"Examples > PyAnsys Geometry 101: Math","text":"PyAnsys Geometry 101: Math\n\nThe math module is the foundation of PyAnsys Geometry. This module is built on top of NumPy, one of the most renowned mathematical Python libraries.\n\nThis example shows some of the main PyAnsys Geometry math objects and demonstrates why they are important prior to doing more exciting things in PyAnsys Geometry."},{"objectID":"Examples","href":"examples/01_getting_started/01_math.html#perform-required-imports","title":"Examples > PyAnsys Geometry 101: Math > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/01_math.html#create-points-and-vectors","title":"Examples > PyAnsys Geometry 101: Math > Create points and vectors","text":"Create points and vectors\n\nEverything starts with Point and Vector objects, which can each be defined in a 2D or 3D form. These objects inherit from NumPy’s ndarray, providing them with enhanced functionalities. When creating these objects, you must remember to pass in the arguments as a list (that is, with brackets [ ]).\n\nCreate 2D and 3D point and vectors.\n\nYou can perform standard mathematical operations on points and vectors.\n\nPerform some standard operations on vectors.\n\n\n\n\n\n\n\n\n\nCreate a vector from two points.\n\n\n\n\n\n\n\n\n\nNormalize a vector to create a unit vector, which is also known as a direction.\n\n\n\n\n\n\n\n\n\nUse the UnitVector class to automatically normalize the input for the unit vector.\n\n\n\n\n\n\n\n\n\nPerform a few more mathematical operations on vectors.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/01_math.html#create-planes","title":"Examples > PyAnsys Geometry 101: Math > Create planes","text":"Create planes\n\nOnce you begin creating sketches and bodies, Plane objects become very important. A plane is defined by these items:\n\nAn origin, which consists of a 3D point\n\nTwo directions (direction_x and direction_y), which are both UnitVector3Dobjects\n\nIf no direction vectors are provided, the plane defaults to the XY plane.\n\nCreate two planes.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/01_getting_started/01_math.html#perform-parametric-evaluations","title":"Examples > PyAnsys Geometry 101: Math > Perform parametric evaluations","text":"Perform parametric evaluations\n\nPyAnsys Geometry implements parametric evaluations for some curves and surfaces.\n\nEvaluate a sphere.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"getting_started/remote/index.html#launch-a-remote-session","title":"Launch a remote session","text":"Launch a remote session\n\nIf a remote server is running Ansys 2024 R1 or later and is also running PIM (Product\nInstance Manager), you can use PIM to start a Discovery or SpaceClaim session\nthat PyAnsys Geometry can connect to.\n\nThis option is only available for Ansys employees.\n\nOnly Ansys employees with credentials to the Artifact Repository Browser\ncan download ZIP files for PIM."},{"objectID":"Home","href":"getting_started/remote/index.html#set-up-the-client-machine","title":"Launch a remote session > Set up the client machine","text":"Set up the client machine\n\nTo establish a connection to the existing session from your client machine, open\nPython and run these commands:\n\nThe preceding commands launch a Discovery (version 24.1) session with the API server.\nYou receive a model object back from Discovery that you then use as a PyAnsys Geometry client.\n\nStart SpaceClaim or the Geometry service remotely using commands like these:\n\nPerforming all these operations remotely eliminates the need to worry about the\nstarting endpoint or managing the session."},{"objectID":"Home","href":"getting_started/remote/index.html#end-the-session","title":"Launch a remote session > End the session","text":"End the session\n\nTo end the session, run the corresponding command:\n\nGo to Getting started"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/index.html#the-adminpy-module","title":"The admin.py module","text":"The admin.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/index.html#summary","title":"The admin.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAdminService\n\nAdmin service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/admin/index.html#description","title":"The admin.py module > Description","text":"Description\n\nModule containing the admin service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/index.html#the-nurbspy-module","title":"The nurbs.py module","text":"The nurbs.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/index.html#summary","title":"The nurbs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nNURBSCurve\n\nRepresents a NURBS curve.\n\nNURBSCurveEvaluation\n\nProvides evaluation of a NURBS curve at a given parameter.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/curves/nurbs/index.html#description","title":"The nurbs.py module > Description","text":"Description\n\nProvides for creating and managing a NURBS curve."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/index.html#the-clientpy-module","title":"The client.py module","text":"The client.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/index.html#summary","title":"The client.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGrpcClient\n\nWraps the gRPC connection for the Geometry service.\n\nFunctions\n\n\n\n\n\nwait_until_healthy\n\nWait until a channel is healthy before returning.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/index.html#description","title":"The client.py module > Description","text":"Description\n\nModule providing a wrapped abstraction of the gRPC stubs."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/client/index.html#module-detail","title":"The client.py module > Module detail","text":"Module detail\n\n\n\nclient.wait_until_healthy(channel: grpc.Channel | str, timeout: float) -> grpc.Channel\n\nWait until a channel is healthy before returning.\n\nParameters\n\nchannel\n\nChannel | python:str\n\nChannel that must be established and healthy. The target can also be\npassed in. In that case, a channel is created using the default insecure channel.\n\ntimeout\n\npython:float\n\nTimeout in seconds. Attempts are made with the following backoff strategy:\n\nStarts with 0.1 seconds.\n\nIf the attempt fails, double the timeout.\n\nThis is repeated until the next timeoff exceeds the\nvalue for the remaining time. In that case, a final attempt\nis made with the remaining time.\n\nIf the total elapsed time exceeds the value for the timeout parameter,\na TimeoutError is raised.\n\nReturns\n\ngrpc.Channel\n\nThe channel that was passed in. This channel is guaranteed to be healthy.\nIf a string was passed in, a channel is created using the default insecure channel.\n\nRaises\n\nTimeoutError\n\nRaised when the total elapsed time exceeds the value for the timeout parameter."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/index.html#the-product_instancepy-module","title":"The product_instance.py module","text":"The product_instance.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/index.html#summary","title":"The product_instance.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nProductInstance\n\nProductInstance class.\n\nFunctions\n\n\n\n\n\nprepare_and_start_backend\n\nStart the requested service locally using the ProductInstance class.\n\nget_available_port\n\nReturn an available port to be used.\n\nConstants\n\n\n\n\n\nWINDOWS_GEOMETRY_SERVICE_FOLDER\n\nDefault Geometry Service’s folder name into the unified installer (DMS).\n\nCORE_GEOMETRY_SERVICE_FOLDER\n\nDefault Geometry Service’s folder name into the unified installer (Core Service).\n\nDISCOVERY_FOLDER\n\nDefault Discovery’s folder name into the unified installer.\n\nSPACECLAIM_FOLDER\n\nDefault SpaceClaim’s folder name into the unified installer.\n\nADDINS_SUBFOLDER\n\nDefault global Addins’s folder name into the unified installer.\n\nBACKEND_SUBFOLDER\n\nDefault backend’s folder name into the ADDINS_SUBFOLDER folder.\n\nMANIFEST_FILENAME\n\nDefault backend’s add-in filename.\n\nGEOMETRY_SERVICE_EXE\n\nThe Windows Geometry Service’s filename (DMS).\n\nCORE_GEOMETRY_SERVICE_EXE\n\nThe Windows Geometry Service’s filename (Core Service).\n\nDISCOVERY_EXE\n\nThe Ansys Discovery’s filename.\n\nSPACECLAIM_EXE\n\nThe Ansys SpaceClaim’s filename.\n\nBACKEND_LOG_LEVEL_VARIABLE\n\nThe backend’s log level environment variable for local start.\n\nBACKEND_TRACE_VARIABLE\n\nThe backend’s enable trace environment variable for local start.\n\nBACKEND_HOST_VARIABLE\n\nThe backend’s ip address environment variable for local start.\n\nBACKEND_PORT_VARIABLE\n\nThe backend’s port number environment variable for local start.\n\nBACKEND_LOGS_FOLDER_VARIABLE\n\nThe backend’s logs folder path to be used.\n\nBACKEND_API_VERSION_VARIABLE\n\nThe backend’s api version environment variable for local start.\n\nBACKEND_SPACECLAIM_OPTIONS\n\nThe additional argument for local Ansys Discovery start.\n\nBACKEND_ADDIN_MANIFEST_ARGUMENT\n\nThe argument to specify the backend’s add-in manifest file’s path.\n\nBACKEND_SPACECLAIM_HIDDEN\n\nThe argument to hide SpaceClaim’s UI on the backend.\n\nBACKEND_SPACECLAIM_HIDDEN_ENVVAR_KEY\n\nSpaceClaim hidden backend’s environment variable key.\n\nBACKEND_SPACECLAIM_HIDDEN_ENVVAR_VALUE\n\nSpaceClaim hidden backend’s environment variable value.\n\nBACKEND_DISCOVERY_HIDDEN\n\nThe argument to hide Discovery’s UI on the backend.\n\nBACKEND_SPLASH_OFF\n\nThe argument to specify the backend’s add-in manifest file’s path.\n\nANSYS_GEOMETRY_SERVICE_ROOT\n\nLocal Geometry Service install location. This is for GeometryService and CoreGeometryService.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/index.html#description","title":"The product_instance.py module > Description","text":"Description\n\nModule containing the ProductInstance class."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/product_instance/index.html#module-detail","title":"The product_instance.py module > Module detail","text":"Module detail\n\n\n\nproduct_instance.prepare_and_start_backend(backend_type: ansys.geometry.core.connection.backend.BackendType, version: str | int = None, host: str = 'localhost', port: int = None, enable_trace: bool = False, api_version: ansys.geometry.core.connection.backend.ApiVersions = ApiVersions.LATEST, timeout: int = 150, manifest_path: str = None, hidden: bool = False, server_log_level: int = 2, client_log_level: int = logging.INFO, server_logs_folder: str = None, client_log_file: str = None, specific_minimum_version: int = None, product_version: int | None = None) -> ansys.geometry.core.modeler.Modeler\n\nStart the requested service locally using the ProductInstance class.\n\nWhen calling this method, a standalone service or product session is started.\nBy default, if an endpoint is specified (by defining host and port parameters)\nbut the endpoint is not available, the startup will fail. Otherwise, it will try to\nlaunch its own service.\n\nParameters\n\nversion\n\npython:str | python:int, optional\n\nThe product version to be started. Goes from v24.1 to\nthe latest. Default is None.\nIf a specific product version is requested but not installed locally,\na SystemError will be raised.\n\nhost: str, optional\n\nIP address at which the Geometry service will be deployed. By default,\nits value will be localhost.\n\nport\n\npython:int, optional\n\nPort at which the Geometry service will be deployed. By default, its\nvalue will be None.\n\nenable_trace\n\nbool, optional\n\nBoolean enabling the logs trace on the Geometry service console window.\nBy default its value is False.\n\napi_version: ``ApiVersions``, optional\n\nThe backend’s API version to be used at runtime. Goes from API v21 to\nthe latest. Default is ApiVersions.LATEST.\n\ntimeout\n\npython:int, optional\n\nTimeout for starting the backend startup process. The default is 150.\n\nmanifest_path\n\npython:str, optional\n\nUsed to specify a manifest file path for the ApiServerAddin. This way,\nit is possible to run an ApiServerAddin from a version an older product\nversion. Only applicable for Ansys Discovery and Ansys SpaceClaim.\n\nhidden\n\nstarts the product hiding its UI. Default is False.\n\n\n\nserver_log_level\n\npython:int, optional\n\nBackend’s log level from 0 to 3:\n\n0: Chatterbox\n1: Debug\n2: Warning\n3: Error\n\nThe default is 2 (Warning).\n\nclient_log_level\n\npython:int, optional\n\nLogging level to apply to the client. By default, INFO level is used.\nUse the logging module’s levels: DEBUG, INFO, WARNING, ERROR, CRITICAL.\n\nserver_logs_folder\n\npython:str, optional\n\nSets the backend’s logs folder path. If nothing is defined,\nthe backend will use its default path.\n\nclient_log_file\n\npython:str, optional\n\nSets the client’s log file path. If nothing is defined,\nthe client will log to the console.\n\nspecific_minimum_version\n\npython:int, optional\n\nSets a specific minimum version to be checked. If this is not defined,\nthe minimum version will be set to 24.1.0.\n\nproduct_version: ``int``, optional\n\nThe product version to be started. Deprecated, use version instead.\n\nReturns\n\nModeler\n\nInstance of the Geometry service.\n\nRaises\n\nConnectionError\n\nIf the specified endpoint is already in use, a connection error will be raised.\n\nSystemError\n\nIf there is not an Ansys product 24.1 version or later installed\nor if a specific product’s version is requested but not installed locally then\na SystemError will be raised.\n\n\n\nproduct_instance.get_available_port() -> int\n\nReturn an available port to be used.\n\nReturns\n\npython:int\n\nThe available port.\n\n\n\nproduct_instance.WINDOWS_GEOMETRY_SERVICE_FOLDER = 'GeometryService'\n\nDefault Geometry Service’s folder name into the unified installer (DMS).\n\n\n\nproduct_instance.CORE_GEOMETRY_SERVICE_FOLDER = 'GeometryService'\n\nDefault Geometry Service’s folder name into the unified installer (Core Service).\n\n\n\nproduct_instance.DISCOVERY_FOLDER = 'Discovery'\n\nDefault Discovery’s folder name into the unified installer.\n\n\n\nproduct_instance.SPACECLAIM_FOLDER = 'scdm'\n\nDefault SpaceClaim’s folder name into the unified installer.\n\n\n\nproduct_instance.ADDINS_SUBFOLDER = 'Addins'\n\nDefault global Addins’s folder name into the unified installer.\n\n\n\nproduct_instance.BACKEND_SUBFOLDER = 'ApiServer'\n\nDefault backend’s folder name into the ADDINS_SUBFOLDER folder.\n\n\n\nproduct_instance.MANIFEST_FILENAME = 'Presentation.ApiServerAddIn.Manifest.xml'\n\nDefault backend’s add-in filename.\n\nTo be used only for local start of Ansys Discovery or Ansys SpaceClaim.\n\n\n\nproduct_instance.GEOMETRY_SERVICE_EXE = 'Presentation.ApiServerDMS.exe'\n\nThe Windows Geometry Service’s filename (DMS).\n\n\n\nproduct_instance.CORE_GEOMETRY_SERVICE_EXE = 'Presentation.ApiServerCoreService.exe'\n\nThe Windows Geometry Service’s filename (Core Service).\n\n\n\nproduct_instance.DISCOVERY_EXE = 'Discovery.exe'\n\nThe Ansys Discovery’s filename.\n\n\n\nproduct_instance.SPACECLAIM_EXE = 'SpaceClaim.exe'\n\nThe Ansys SpaceClaim’s filename.\n\n\n\nproduct_instance.BACKEND_LOG_LEVEL_VARIABLE = 'LOG_LEVEL'\n\nThe backend’s log level environment variable for local start.\n\n\n\nproduct_instance.BACKEND_TRACE_VARIABLE = 'ENABLE_TRACE'\n\nThe backend’s enable trace environment variable for local start.\n\n\n\nproduct_instance.BACKEND_HOST_VARIABLE = 'API_ADDRESS'\n\nThe backend’s ip address environment variable for local start.\n\n\n\nproduct_instance.BACKEND_PORT_VARIABLE = 'API_PORT'\n\nThe backend’s port number environment variable for local start.\n\n\n\nproduct_instance.BACKEND_LOGS_FOLDER_VARIABLE = 'ANS_DSCO_REMOTE_LOGS_FOLDER'\n\nThe backend’s logs folder path to be used.\n\nOnly applicable to the Ansys Geometry Service.\n\n\n\nproduct_instance.BACKEND_API_VERSION_VARIABLE = 'API_VERSION'\n\nThe backend’s api version environment variable for local start.\n\nTo be used only with Ansys Discovery and Ansys SpaceClaim.\n\n\n\nproduct_instance.BACKEND_SPACECLAIM_OPTIONS = '--spaceclaim-options'\n\nThe additional argument for local Ansys Discovery start.\n\nTo be used only with Ansys Discovery.\n\n\n\nproduct_instance.BACKEND_ADDIN_MANIFEST_ARGUMENT = '/ADDINMANIFESTFILE='\n\nThe argument to specify the backend’s add-in manifest file’s path.\n\nTo be used only with Ansys Discovery and Ansys SpaceClaim.\n\n\n\nproduct_instance.BACKEND_SPACECLAIM_HIDDEN = '/Headless=True'\n\nThe argument to hide SpaceClaim’s UI on the backend.\n\nTo be used only with Ansys SpaceClaim.\n\n\n\nproduct_instance.BACKEND_SPACECLAIM_HIDDEN_ENVVAR_KEY = 'SPACECLAIM_MODE'\n\nSpaceClaim hidden backend’s environment variable key.\n\nTo be used only with Ansys SpaceClaim.\n\n\n\nproduct_instance.BACKEND_SPACECLAIM_HIDDEN_ENVVAR_VALUE = '2'\n\nSpaceClaim hidden backend’s environment variable value.\n\nTo be used only with Ansys SpaceClaim.\n\n\n\nproduct_instance.BACKEND_DISCOVERY_HIDDEN = '--hidden'\n\nThe argument to hide Discovery’s UI on the backend.\n\nTo be used only with Ansys Discovery.\n\n\n\nproduct_instance.BACKEND_SPLASH_OFF = '/Splash=False'\n\nThe argument to specify the backend’s add-in manifest file’s path.\n\nTo be used only with Ansys Discovery and Ansys SpaceClaim.\n\n\n\nproduct_instance.ANSYS_GEOMETRY_SERVICE_ROOT = 'ANSYS_GEOMETRY_SERVICE_ROOT'\n\nLocal Geometry Service install location. This is for GeometryService and CoreGeometryService."},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#modeling-body-color-assignment-and-usage","title":"Examples > Modeling: Body color assignment and usage","text":"Modeling: Body color assignment and usage\n\nIn PyAnsys Geometry, a body represents solids or surfaces organized within the Design assembly. As users might be already familiar with, Ansys CAD products (like SpaceClaim, Ansys Discovery and the Geometry Service), allow to assign colors to bodies. This example shows how to assign colors to a body, retrieve their value and how to use them in the client-side visualization."},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#perform-required-imports","title":"Examples > Modeling: Body color assignment and usage > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#create-a-box-sketch","title":"Examples > Modeling: Body color assignment and usage > Create a box sketch","text":"Create a box sketch\n\nCreate a Sketch instance and insert a box sketch with a width and height of 10 in the default plane.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#initiate-design-on-server","title":"Examples > Modeling: Body color assignment and usage > Initiate design on server","text":"Initiate design on server\n\nEstablish a server connection and initiate a design on the server.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#extrude-the-box-sketch-to-create-the-matrix-style-design","title":"Examples > Modeling: Body color assignment and usage > Extrude the box sketch to create the matrix style design","text":"Extrude the box sketch to create the matrix style design\n\nGiven the initial sketch, you can extrude it to create a matrix style design. In this example, you can create a 2x3 matrix of bodies. Each body is separated by 30 units in the X direction and 30 units in the Y direction. You have a total of 6 bodies.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#assign-colors-to-the-bodies","title":"Examples > Modeling: Body color assignment and usage > Assign colors to the bodies","text":"Assign colors to the bodies\n\nGiven the previous design, you can assign a color to each body. You could have done this assignment while creating the bodies, but for the sake of encapsulating the color assignment logic, it is done in its own code cell.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#plotting-the-design-with-colors","title":"Examples > Modeling: Body color assignment and usage > Plotting the design with colors","text":"Plotting the design with colors\n\nBy default, the plot method does not use the colors assigned to the bodies. To plot the design with the assigned colors, you need to specifically request it.\n\nUsers have two options for plotting with the assigned colors:\n\nPass the parameter use_service_colors=True to the plot method.\n\nSet the global parameter USE_SERVICE_COLORS to True.\n\nIt is important to note that the usage of colors when plotting might slow down the plotting process, as it requires additional information to be sent from the server to the client and processed in the client side.\n\nIf you just request the plot without setting the global parameter, the plot will be displayed without the colors, as shown below.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs stated previously, if you pass the parameter use_service_colors=True to the plot method, the plot is displayed with the assigned colors.\n\n\n\n\n\n\n\n\n\n\n\n\n\nHowever, if you set the global parameter to True, the plot is displayed with the assigned colors without the need to pass the parameter to the plot method.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis last method is useful when the user wants to plot all the designs with the assigned colors without the need to pass the parameter to the plot method in every call."},{"objectID":"Examples","href":"examples/03_modeling/service_colors.html#plotting-specific-bodies-or-components-with-colors","title":"Examples > Modeling: Body color assignment and usage > Plotting specific bodies or components with colors","text":"Plotting specific bodies or components with colors\n\nIf the user wants to plot specific bodies with the assigned colors, the user can follow the same approach as before. The user can pass the parameter use_service_colors=True to the plot method or set the global parameter USE_SERVICE_COLORS to True.\n\nIn the following examples, you are shown how to do this using the use_service_colors=True parameter.\n\nLet’s plot the first body of the first component with the assigned colors.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow, let’s plot the second component with the assigned colors.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MidSurfaceOffsetType.html#midsurfaceoffsettype","title":"MidSurfaceOffsetType","text":"MidSurfaceOffsetType\n\n\n\nclass ansys.geometry.core.designer.body.MidSurfaceOffsetType(*args, **kwds)\n\nBases: enum.Enum\n\nProvides values for mid-surface offsets supported."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MidSurfaceOffsetType.html#overview","title":"MidSurfaceOffsetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nMIDDLE\n\n\n\nTOP\n\n\n\nBOTTOM\n\n\n\nVARIABLE\n\n\n\nCUSTOM\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MidSurfaceOffsetType.html#import-detail","title":"MidSurfaceOffsetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/body/MidSurfaceOffsetType.html#attribute-detail","title":"MidSurfaceOffsetType > Attribute detail","text":"Attribute detail\n\n\n\nMidSurfaceOffsetType.MIDDLE = 0\n\n\n\n\n\nMidSurfaceOffsetType.TOP = 1\n\n\n\n\n\nMidSurfaceOffsetType.BOTTOM = 2\n\n\n\n\n\nMidSurfaceOffsetType.VARIABLE = 3\n\n\n\n\n\nMidSurfaceOffsetType.CUSTOM = 4\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/Triangle.html#triangle","title":"Triangle","text":"Triangle\n\n\n\nclass ansys.geometry.core.sketch.triangle.Triangle(point1: ansys.geometry.core.math.point.Point2D, point2: ansys.geometry.core.math.point.Point2D, point3: ansys.geometry.core.math.point.Point2D)\n\nBases: ansys.geometry.core.sketch.face.SketchFace\n\nProvides for modeling 2D triangles.\n\nParameters\n\npoint1: Point2D\n\nPoint that represents a triangle vertex.\n\npoint2: Point2D\n\nPoint that represents a triangle vertex.\n\npoint3: Point2D\n\nPoint that represents a triangle vertex."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/Triangle.html#overview","title":"Triangle > Overview","text":"Overview\n\nProperties\n\n\n\n\n\npoint1\n\nTriangle vertex 1.\n\npoint2\n\nTriangle vertex 2.\n\npoint3\n\nTriangle vertex 3.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/Triangle.html#import-detail","title":"Triangle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/triangle/Triangle.html#property-detail","title":"Triangle > Property detail","text":"Property detail\n\n\n\nproperty Triangle.point1: ansys.geometry.core.math.point.Point2D\n\nTriangle vertex 1.\n\n\n\nproperty Triangle.point2: ansys.geometry.core.math.point.Point2D\n\nTriangle vertex 2.\n\n\n\nproperty Triangle.point3: ansys.geometry.core.math.point.Point2D\n\nTriangle vertex 3.\n\n\n\nproperty Triangle.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/index.html#the-coordinate_systemspy-module","title":"The coordinate_systems.py module","text":"The coordinate_systems.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/index.html#summary","title":"The coordinate_systems.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCCoordinateSystemService\n\nCoordinate systems service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/coordinate_systems/index.html#description","title":"The coordinate_systems.py module > Description","text":"Description\n\nModule containing the coordinate systems service implementation (abstraction layer)."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector2D.html#vector2d","title":"Vector2D","text":"Vector2D\n\n\n\nclass ansys.geometry.core.math.vector.Vector2D(shape, dtype=float, buffer=None, offset=0, strides=None, order=None)\n\nBases: numpy.ndarray\n\nProvides for creating and managing a 2D vector.\n\nParameters\n\ninput\n\nndarray | RealSequence\n\n2D numpy.ndarray class with shape(X,)."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector2D.html#overview","title":"Vector2D > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_points\n\nCreate a 2D vector from two distinct 2D points.\n\nMethods\n\n\n\n\n\ncross\n\nReturn the cross product of Vector2D objects.\n\nis_perpendicular_to\n\nCheck if this 2D vector and another 2D vector are perpendicular.\n\nis_parallel_to\n\nCheck if this vector and another vector are parallel.\n\nis_opposite\n\nCheck if this vector and another vector are opposite.\n\nnormalize\n\nReturn a normalized version of the 2D vector.\n\nget_angle_between\n\nGet the angle between this 2D vector and another 2D vector.\n\nProperties\n\n\n\n\n\nx\n\nX coordinate of the 2D vector.\n\ny\n\nY coordinate of the 2D vector.\n\nnorm\n\nNorm of the 2D vector.\n\nmagnitude\n\nNorm of the 2D vector.\n\nis_zero\n\nCheck if values for all components of the 2D vector are zero.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Vector2D class.\n\n__ne__\n\nNot equals operator for the Vector2D class.\n\n__mul__\n\nOverload * operator with dot product.\n\n__add__\n\nAddition operation overload for 2D vectors.\n\n__sub__\n\nSubtraction operation overload for 2D vectors.\n\n__mod__\n\nOverload % operator with cross product."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector2D.html#import-detail","title":"Vector2D > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector2D.html#property-detail","title":"Vector2D > Property detail","text":"Property detail\n\n\n\nproperty Vector2D.x: ansys.geometry.core.typing.Real\n\nX coordinate of the 2D vector.\n\n\n\nproperty Vector2D.y: ansys.geometry.core.typing.Real\n\nY coordinate of the 2D vector.\n\n\n\nproperty Vector2D.norm: float\n\nNorm of the 2D vector.\n\n\n\nproperty Vector2D.magnitude: float\n\nNorm of the 2D vector.\n\n\n\nproperty Vector2D.is_zero: bool\n\nCheck if values for all components of the 2D vector are zero."},{"objectID":"Home","href":"api/ansys/geometry/core/math/vector/Vector2D.html#method-detail","title":"Vector2D > Method detail","text":"Method detail\n\n\n\nVector2D.cross(v: Vector2D) -> ansys.geometry.core.typing.Real\n\nReturn the cross product of Vector2D objects.\n\n\n\nVector2D.is_perpendicular_to(other_vector: Vector2D) -> bool\n\nCheck if this 2D vector and another 2D vector are perpendicular.\n\n\n\nVector2D.is_parallel_to(other_vector: Vector2D) -> bool\n\nCheck if this vector and another vector are parallel.\n\n\n\nVector2D.is_opposite(other_vector: Vector2D) -> bool\n\nCheck if this vector and another vector are opposite.\n\n\n\nVector2D.normalize() -> Vector2D\n\nReturn a normalized version of the 2D vector.\n\n\n\nVector2D.get_angle_between(v: Vector2D) -> pint.Quantity\n\nGet the angle between this 2D vector and another 2D vector.\n\nParameters\n\nv\n\nVector2D\n\nOther 2D vector to compute the angle with.\n\nReturns\n\nQuantity\n\nAngle between these two 2D vectors.\n\n\n\nVector2D.__eq__(other: Vector2D) -> bool\n\nEquals operator for the Vector2D class.\n\n\n\nVector2D.__ne__(other: Vector2D) -> bool\n\nNot equals operator for the Vector2D class.\n\n\n\nVector2D.__mul__(other: Vector2D | ansys.geometry.core.typing.Real) -> Vector2D | ansys.geometry.core.typing.Real\n\nOverload * operator with dot product.\n\nNotes\n\nThis method also admits scalar multiplication.\n\n\n\nVector2D.__add__(other: Vector2D | ansys.geometry.core.math.point.Point2D) -> Vector2D | ansys.geometry.core.math.point.Point2D\n\nAddition operation overload for 2D vectors.\n\n\n\nVector2D.__sub__(other: Vector2D) -> Vector2D\n\nSubtraction operation overload for 2D vectors.\n\n\n\nVector2D.__mod__(other: Vector2D) -> ansys.geometry.core.typing.Real\n\nOverload % operator with cross product.\n\n\n\nclassmethod Vector2D.from_points(point_a: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point2D, point_b: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point2D)\n\nCreate a 2D vector from two distinct 2D points.\n\nParameters\n\npoint_a\n\nndarray | RealSequence | Point2D\n\nPoint2D\nclass representing the first point.\n\npoint_b\n\nndarray | RealSequence | Point2D\n\nPoint2D\nclass representing the second point.\n\nReturns\n\nVector2D\n\n2D vector from point_a to point_b.\n\nNotes\n\nThe resulting 2D vector is always expressed in Point2D\nbase units."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/SurfaceEvaluation.html#surfaceevaluation","title":"SurfaceEvaluation","text":"SurfaceEvaluation\n\n\n\nclass ansys.geometry.core.shapes.surfaces.surface_evaluation.SurfaceEvaluation(parameter: ansys.geometry.core.shapes.parameterization.ParamUV)\n\nProvides for evaluating a surface."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/SurfaceEvaluation.html#overview","title":"SurfaceEvaluation > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nparameter\n\nParameter that the evaluation is based upon.\n\nposition\n\nPoint on the surface, based on the evaluation.\n\nnormal\n\nNormal to the surface.\n\nu_derivative\n\nFirst derivative with respect to the U parameter.\n\nv_derivative\n\nFirst derivative with respect to the V parameter.\n\nuu_derivative\n\nSecond derivative with respect to the U parameter.\n\nuv_derivative\n\nThe second derivative with respect to the U and V parameters.\n\nvv_derivative\n\nThe second derivative with respect to v.\n\nmin_curvature\n\nMinimum curvature.\n\nmin_curvature_direction\n\nMinimum curvature direction.\n\nmax_curvature\n\nMaximum curvature.\n\nmax_curvature_direction\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/SurfaceEvaluation.html#import-detail","title":"SurfaceEvaluation > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/surface_evaluation/SurfaceEvaluation.html#property-detail","title":"SurfaceEvaluation > Property detail","text":"Property detail\n\n\n\nproperty SurfaceEvaluation.parameter: ansys.geometry.core.shapes.parameterization.ParamUV\n\nAbstractmethod\n\n\n\nParameter that the evaluation is based upon.\n\n\n\nproperty SurfaceEvaluation.position: ansys.geometry.core.math.point.Point3D\n\nAbstractmethod\n\n\n\nPoint on the surface, based on the evaluation.\n\n\n\nproperty SurfaceEvaluation.normal: ansys.geometry.core.math.vector.UnitVector3D\n\nAbstractmethod\n\n\n\nNormal to the surface.\n\n\n\nproperty SurfaceEvaluation.u_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nFirst derivative with respect to the U parameter.\n\n\n\nproperty SurfaceEvaluation.v_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nFirst derivative with respect to the V parameter.\n\n\n\nproperty SurfaceEvaluation.uu_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nSecond derivative with respect to the U parameter.\n\n\n\nproperty SurfaceEvaluation.uv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nThe second derivative with respect to the U and V parameters.\n\n\n\nproperty SurfaceEvaluation.vv_derivative: ansys.geometry.core.math.vector.Vector3D\n\nAbstractmethod\n\n\n\nThe second derivative with respect to v.\n\n\n\nproperty SurfaceEvaluation.min_curvature: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nMinimum curvature.\n\n\n\nproperty SurfaceEvaluation.min_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nAbstractmethod\n\n\n\nMinimum curvature direction.\n\n\n\nproperty SurfaceEvaluation.max_curvature: ansys.geometry.core.typing.Real\n\nAbstractmethod\n\n\n\nMaximum curvature.\n\n\n\nproperty SurfaceEvaluation.max_curvature_direction: ansys.geometry.core.math.vector.UnitVector3D\n\nAbstractmethod\n\n\n\nMaximum curvature direction."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ExtraEdgeProblemAreas.html#extraedgeproblemareas","title":"ExtraEdgeProblemAreas","text":"ExtraEdgeProblemAreas\n\n\n\nclass ansys.geometry.core.tools.problem_areas.ExtraEdgeProblemAreas(id: str, grpc_client: ansys.geometry.core.connection.GrpcClient, edges: list[ansys.geometry.core.designer.edge.Edge])\n\nBases: ProblemArea\n\nRepresents a extra edge problem area with unique identifier and associated edges.\n\nParameters\n\nid\n\npython:str\n\nServer-defined ID for the problem area.\n\ngrpc_client\n\nGrpcClient\n\nActive supporting geometry service instance for design modeling.\n\nedges\n\npython:list[Edge]\n\nList of edges associated with the design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ExtraEdgeProblemAreas.html#overview","title":"ExtraEdgeProblemAreas > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfix\n\nFix the problem area.\n\nProperties\n\n\n\n\n\nedges\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ExtraEdgeProblemAreas.html#import-detail","title":"ExtraEdgeProblemAreas > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ExtraEdgeProblemAreas.html#property-detail","title":"ExtraEdgeProblemAreas > Property detail","text":"Property detail\n\n\n\nproperty ExtraEdgeProblemAreas.edges: list[ansys.geometry.core.designer.edge.Edge]\n\nThe list of edges connected to this problem area."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/problem_areas/ExtraEdgeProblemAreas.html#method-detail","title":"ExtraEdgeProblemAreas > Method detail","text":"Method detail\n\n\n\nExtraEdgeProblemAreas.fix() -> ansys.geometry.core.tools.repair_tool_message.RepairToolMessage\n\nFix the problem area.\n\nReturns\n\nmessage: RepairToolMessage\n\nMessage containing created and/or modified bodies."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/Cylinder.html#cylinder","title":"Cylinder","text":"Cylinder\n\n\n\nclass ansys.geometry.core.shapes.surfaces.cylinder.Cylinder(origin: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.point.Point3D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, reference: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_X, axis: numpy.ndarray | ansys.geometry.core.typing.RealSequence | ansys.geometry.core.math.vector.UnitVector3D | ansys.geometry.core.math.vector.Vector3D = UNITVECTOR3D_Z)\n\nBases: ansys.geometry.core.shapes.surfaces.surface.Surface\n\nProvides 3D cylinder representation.\n\nParameters\n\norigin\n\nndarray | RealSequence | Point3D\n\nOrigin of the cylinder.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the cylinder.\n\nreference\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nX-axis direction.\n\naxis\n\nndarray | RealSequence | UnitVector3D | Vector3D\n\nZ-axis direction."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/Cylinder.html#overview","title":"Cylinder > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\ncontains_param\n\nCheck a parameter is within the parametric range of the surface.\n\ncontains_point\n\nCheck a point is contained by the surface.\n\nMethods\n\n\n\n\n\nsurface_area\n\nGet the surface area of the cylinder.\n\nvolume\n\nGet the volume of the cylinder.\n\ntransformed_copy\n\nCreate a transformed copy of the cylinder from a transformation matrix.\n\nmirrored_copy\n\nCreate a mirrored copy of the cylinder along the y-axis.\n\nevaluate\n\nEvaluate the cylinder at the given parameters.\n\nproject_point\n\nProject a point onto the cylinder and evaluate the cylinder.\n\nparameterization\n\nParameterize the cylinder surface as a tuple (U and V respectively).\n\nProperties\n\n\n\n\n\norigin\n\nOrigin of the cylinder.\n\nradius\n\nRadius of the cylinder.\n\ndir_x\n\nX-direction of the cylinder.\n\ndir_y\n\nY-direction of the cylinder.\n\ndir_z\n\nZ-direction of the cylinder.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\nEquals operator for the Cylinder class."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/Cylinder.html#import-detail","title":"Cylinder > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/Cylinder.html#property-detail","title":"Cylinder > Property detail","text":"Property detail\n\n\n\nproperty Cylinder.origin: ansys.geometry.core.math.point.Point3D\n\nOrigin of the cylinder.\n\n\n\nproperty Cylinder.radius: pint.Quantity\n\nRadius of the cylinder.\n\n\n\nproperty Cylinder.dir_x: ansys.geometry.core.math.vector.UnitVector3D\n\nX-direction of the cylinder.\n\n\n\nproperty Cylinder.dir_y: ansys.geometry.core.math.vector.UnitVector3D\n\nY-direction of the cylinder.\n\n\n\nproperty Cylinder.dir_z: ansys.geometry.core.math.vector.UnitVector3D\n\nZ-direction of the cylinder."},{"objectID":"Home","href":"api/ansys/geometry/core/shapes/surfaces/cylinder/Cylinder.html#method-detail","title":"Cylinder > Method detail","text":"Method detail\n\n\n\nCylinder.surface_area(height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> pint.Quantity\n\nGet the surface area of the cylinder.\n\nParameters\n\nheight\n\nQuantity | Distance | Real\n\nHeight to bound the cylinder at.\n\nReturns\n\nQuantity\n\nSurface area of the temporarily bounded cylinder.\n\nNotes\n\nBy nature, a cylinder is infinite. If you want to get the surface area,\nyou must bound it by a height. Normally a cylinder surface is not closed\n(does not have “caps” on the ends). This method assumes that the cylinder\nis closed for the purpose of getting the surface area.\n\n\n\nCylinder.volume(height: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real) -> pint.Quantity\n\nGet the volume of the cylinder.\n\nParameters\n\nheight\n\nQuantity | Distance | Real\n\nHeight to bound the cylinder at.\n\nReturns\n\nQuantity\n\nVolume of the temporarily bounded cylinder.\n\nNotes\n\nBy nature, a cylinder is infinite. If you want to get the surface area,\nyou must bound it by a height. Normally a cylinder surface is not closed\n(does not have “caps” on the ends). This method assumes that the cylinder\nis closed for the purpose of getting the surface area.\n\n\n\nCylinder.transformed_copy(matrix: ansys.geometry.core.math.matrix.Matrix44) -> Cylinder\n\nCreate a transformed copy of the cylinder from a transformation matrix.\n\nParameters\n\nmatrix\n\nMatrix44\n\n4X4 transformation matrix to apply to the cylinder.\n\nReturns\n\nCylinder\n\nNew cylinder that is the transformed copy of the original cylinder.\n\n\n\nCylinder.mirrored_copy() -> Cylinder\n\nCreate a mirrored copy of the cylinder along the y-axis.\n\nReturns\n\nCylinder\n\nNew cylinder that is a mirrored copy of the original cylinder.\n\n\n\nCylinder.__eq__(other: Cylinder) -> bool\n\nEquals operator for the Cylinder class.\n\n\n\nCylinder.evaluate(parameter: ansys.geometry.core.shapes.parameterization.ParamUV) -> CylinderEvaluation\n\nEvaluate the cylinder at the given parameters.\n\nParameters\n\nparameter\n\nParamUV\n\nParameters (u,v) to evaluate the cylinder at.\n\nReturns\n\nCylinderEvaluation\n\nResulting evaluation.\n\n\n\nCylinder.project_point(point: ansys.geometry.core.math.point.Point3D) -> CylinderEvaluation\n\nProject a point onto the cylinder and evaluate the cylinder.\n\nParameters\n\npoint\n\nPoint3D\n\nPoint to project onto the cylinder.\n\nReturns\n\nCylinderEvaluation\n\nResulting evaluation.\n\n\n\nCylinder.parameterization() -> tuple[ansys.geometry.core.shapes.parameterization.Parameterization, ansys.geometry.core.shapes.parameterization.Parameterization]\n\nParameterize the cylinder surface as a tuple (U and V respectively).\n\nThe U parameter specifies the clockwise angle around the axis (right-hand\ncorkscrew law), with a zero parameter at dir_x and a period of 2*pi.\n\nThe V parameter specifies the distance along the axis, with a zero parameter at\nthe XY plane of the cylinder.\n\nReturns\n\npython:tuple[Parameterization, Parameterization]\n\nInformation about how a cylinder’s u and v parameters are parameterized, respectively.\n\n\n\nabstractmethod Cylinder.contains_param(param_uv: ansys.geometry.core.shapes.parameterization.ParamUV) -> bool\n\nCheck a parameter is within the parametric range of the surface.\n\n\n\nabstractmethod Cylinder.contains_point(point: ansys.geometry.core.math.point.Point3D) -> bool\n\nCheck a point is contained by the surface.\n\nThe point can either lie within the surface or on its boundary."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/index.html#the-adminpy-module","title":"The admin.py module","text":"The admin.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/index.html#summary","title":"The admin.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGRPCAdminServiceV0\n\nAdmin service for gRPC communication with the Geometry server.\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v0/admin/index.html#description","title":"The admin.py module > Description","text":"Description\n\nModule containing the admin service implementation for v0."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/DesignFileFormat.html#designfileformat","title":"DesignFileFormat","text":"DesignFileFormat\n\n\n\nclass ansys.geometry.core.designer.design.DesignFileFormat(*args, **kwds)\n\nBases: enum.Enum\n\nProvides supported file formats that can be downloaded for designs."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/DesignFileFormat.html#overview","title":"DesignFileFormat > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSCDOCX\n\n\n\nPARASOLID_TEXT\n\n\n\nPARASOLID_BIN\n\n\n\nFMD\n\n\n\nSTEP\n\n\n\nIGES\n\n\n\nPMDB\n\n\n\nSTRIDE\n\n\n\nDISCO\n\n\n\nINVALID\n\n\n\nSpecial methods\n\n\n\n\n\n__str__\n\nRepresent object in string format."},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/DesignFileFormat.html#import-detail","title":"DesignFileFormat > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/DesignFileFormat.html#attribute-detail","title":"DesignFileFormat > Attribute detail","text":"Attribute detail\n\n\n\nDesignFileFormat.SCDOCX = 'SCDOCX'\n\n\n\n\n\nDesignFileFormat.PARASOLID_TEXT = 'PARASOLID_TEXT'\n\n\n\n\n\nDesignFileFormat.PARASOLID_BIN = 'PARASOLID_BIN'\n\n\n\n\n\nDesignFileFormat.FMD = 'FMD'\n\n\n\n\n\nDesignFileFormat.STEP = 'STEP'\n\n\n\n\n\nDesignFileFormat.IGES = 'IGES'\n\n\n\n\n\nDesignFileFormat.PMDB = 'PMDB'\n\n\n\n\n\nDesignFileFormat.STRIDE = 'STRIDE'\n\n\n\n\n\nDesignFileFormat.DISCO = 'DISCO'\n\n\n\n\n\nDesignFileFormat.INVALID = 'INVALID'\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/designer/design/DesignFileFormat.html#method-detail","title":"DesignFileFormat > Method detail","text":"Method detail\n\n\n\nDesignFileFormat.__str__()\n\nRepresent object in string format."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/SketchCircle.html#sketchcircle","title":"SketchCircle","text":"SketchCircle\n\n\n\nclass ansys.geometry.core.sketch.circle.SketchCircle(center: ansys.geometry.core.math.point.Point2D, radius: pint.Quantity | ansys.geometry.core.misc.measurements.Distance | ansys.geometry.core.typing.Real, plane: ansys.geometry.core.math.plane.Plane = Plane())\n\nBases: ansys.geometry.core.sketch.face.SketchFace, ansys.geometry.core.shapes.curves.circle.Circle\n\nProvides for modeling a circle.\n\nParameters\n\ncenter: Point2D\n\nCenter point of the circle.\n\nradius\n\nQuantity | Distance | Real\n\nRadius of the circle.\n\nplane\n\nPlane, optional\n\nPlane containing the sketched circle, which is the global XY plane\nby default."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/SketchCircle.html#overview","title":"SketchCircle > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nplane_change\n\nRedefine the plane containing the SketchCircle objects.\n\nProperties\n\n\n\n\n\ncenter\n\nCenter of the circle.\n\nperimeter\n\nPerimeter of the circle.\n\nvisualization_polydata\n\nVTK polydata representation for PyVista visualization."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/SketchCircle.html#import-detail","title":"SketchCircle > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/SketchCircle.html#property-detail","title":"SketchCircle > Property detail","text":"Property detail\n\n\n\nproperty SketchCircle.center: ansys.geometry.core.math.point.Point2D\n\nCenter of the circle.\n\n\n\nproperty SketchCircle.perimeter: pint.Quantity\n\nPerimeter of the circle.\n\nNotes\n\nThis property resolves the dilemma between using the SkethFace.perimeter\nproperty and the Circle.perimeter property.\n\n\n\nproperty SketchCircle.visualization_polydata: pyvista.PolyData\n\nVTK polydata representation for PyVista visualization.\n\nThe representation lies in the X/Y plane within\nthe standard global Cartesian coordinate system.\n\nReturns\n\npyvista.PolyData\n\nVTK pyvista.Polydata configuration."},{"objectID":"Home","href":"api/ansys/geometry/core/sketch/circle/SketchCircle.html#method-detail","title":"SketchCircle > Method detail","text":"Method detail\n\n\n\nSketchCircle.plane_change(plane: ansys.geometry.core.math.plane.Plane) -> None\n\nRedefine the plane containing the SketchCircle objects.\n\nParameters\n\nplane\n\nPlane\n\nDesired new plane that is to contain the sketched circle.\n\nNotes\n\nThis implies that their 3D definition might suffer changes."},{"objectID":"Examples","href":"examples.html#examples","title":"Examples","text":"Examples\n\nThese examples demonstrate the behavior and usage of PyAnsys Geometry."},{"objectID":"Examples","href":"examples.html#pyansys-geometry-101-examples","title":"Examples > PyAnsys Geometry 101 examples","text":"PyAnsys Geometry 101 examples\n\nThese examples demonstrate basic operations you can perform\nwith PyAnsys Geometry.\n\n"},{"objectID":"Examples","href":"examples.html#sketching-examples","title":"Examples > Sketching examples","text":"Sketching examples\n\nThese examples demonstrate math operations on geometric objects\nand sketching capabilities, combined with server-based operations.\n\n"},{"objectID":"Examples","href":"examples.html#modeling-examples","title":"Examples > Modeling examples","text":"Modeling examples\n\nThese examples demonstrate service-based modeling operations.\n\n"},{"objectID":"Examples","href":"examples.html#applied-examples","title":"Examples > Applied examples","text":"Applied examples\n\nThese examples demonstrate the usage of PyAnsys Geometry for real-world\napplications.\n\n"},{"objectID":"Examples","href":"examples.html#miscellaneous-examples","title":"Examples > Miscellaneous examples","text":"Miscellaneous examples\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/validate/index.html#the-validatepy-module","title":"The validate.py module","text":"The validate.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/validate/index.html#summary","title":"The validate.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nvalidate\n\nCreate a client using the default settings and validate it."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/validate/index.html#description","title":"The validate.py module > Description","text":"Description\n\nModule to perform a connection validation check.\n\nThe method in this module is only used for testing the default Docker service on\nGitHub and can safely be skipped within testing.\n\nThis command shows how this method is typically used:"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/validate/index.html#module-detail","title":"The validate.py module > Module detail","text":"Module detail\n\n\n\nvalidate.validate(*args, **kwargs)\n\nCreate a client using the default settings and validate it."},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#modeling-single-body-with-material-assignment","title":"Examples > Modeling: Single body with material assignment","text":"Modeling: Single body with material assignment\n\nIn PyAnsys Geometry, a body represents solids or surfaces organized within the Design assembly. The current state of sketch, which is a client-side execution, can be used for the operations of the geometric design assembly.\n\nThe Geometry service provides data structures to create individual materials and their properties. These data structures are exposed through PyAnsys Geometry.\n\nThis example shows how to create a single body from a sketch by requesting its extrusion. It then shows how to assign a material to this body."},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#perform-required-imports","title":"Examples > Modeling: Single body with material assignment > Perform required imports","text":"Perform required imports\n\nPerform the required imports.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#create-sketch","title":"Examples > Modeling: Single body with material assignment > Create sketch","text":"Create sketch\n\nCreate a Sketch instance and insert a circle with a radius of 10 millimeters in the default plane.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#initiate-design-on-server","title":"Examples > Modeling: Single body with material assignment > Initiate design on server","text":"Initiate design on server\n\nLaunch a modeling service session and initiate a design on the server.\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#add-materials-to-design","title":"Examples > Modeling: Single body with material assignment > Add materials to design","text":"Add materials to design\n\nAdd materials and their properties to the design. Material properties can be added when creating the Material object or after its creation. This code adds material properties after creating the Material object.\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#extrude-sketch-to-create-body","title":"Examples > Modeling: Single body with material assignment > Extrude sketch to create body","text":"Extrude sketch to create body\n\nExtrude the sketch to create the body and then assign a material to it.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Examples","href":"examples/03_modeling/add_design_material.html#close-session","title":"Examples > Modeling: Single body with material assignment > Close session","text":"Close session\n\nWhen you finish interacting with your modeling service, you should close the active server session. This frees resources wherever the service is running.\n\nClose the server session.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/GRPCMaterialsServiceV1.html#grpcmaterialsservicev1","title":"GRPCMaterialsServiceV1","text":"GRPCMaterialsServiceV1\n\n\n\nclass ansys.geometry.core._grpc._services.v1.materials.GRPCMaterialsServiceV1(channel: grpc.Channel)\n\nBases: ansys.geometry.core._grpc._services.base.materials.GRPCMaterialsService\n\nMaterials service for gRPC communication with the Geometry server.\n\nThis class provides methods to interact with the Geometry server’s\nmaterials service. It is specifically designed for the v1 version of the\nGeometry API.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/GRPCMaterialsServiceV1.html#overview","title":"GRPCMaterialsServiceV1 > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nadd_material\n\nAdd material to the service design.\n\nremove_material\n\nRemove material from the service design.\n\nAttributes\n\n\n\n\n\nstub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/GRPCMaterialsServiceV1.html#import-detail","title":"GRPCMaterialsServiceV1 > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/GRPCMaterialsServiceV1.html#attribute-detail","title":"GRPCMaterialsServiceV1 > Attribute detail","text":"Attribute detail\n\n\n\nGRPCMaterialsServiceV1.stub\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/v1/materials/GRPCMaterialsServiceV1.html#method-detail","title":"GRPCMaterialsServiceV1 > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCMaterialsServiceV1.add_material(**kwargs) -> dict\n\nAdd material to the service design.\n\n\n\nabstractmethod GRPCMaterialsServiceV1.remove_material(**kwargs) -> dict\n\nRemove material from the service design."},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/index.html#the-unsupportedpy-module","title":"The unsupported.py module","text":"The unsupported.py module\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/index.html#summary","title":"The unsupported.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nExportIdData\n\nData for exporting persistent ids.\n\nUnsupportedCommands\n\nProvides unsupported commands for PyAnsys Geometry.\n\nEnums\n\n\n\n\n\nPersistentIdType\n\nType of persistent id.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/tools/unsupported/index.html#description","title":"The unsupported.py module > Description","text":"Description\n\nUnsupported functions for the PyAnsys Geometry library."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/GRPCPartsService.html#grpcpartsservice","title":"GRPCPartsService","text":"GRPCPartsService\n\n\n\nclass ansys.geometry.core._grpc._services.base.parts.GRPCPartsService(channel: grpc.Channel)\n\nBases: abc.ABC\n\nParts service for gRPC communication with the Geometry server.\n\nParameters\n\nchannel\n\ngrpc.Channel\n\nThe gRPC channel to the server."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/GRPCPartsService.html#overview","title":"GRPCPartsService > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nexport\n\nExport a part to a file."},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/GRPCPartsService.html#import-detail","title":"GRPCPartsService > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/_grpc/_services/base/parts/GRPCPartsService.html#method-detail","title":"GRPCPartsService > Method detail","text":"Method detail\n\n\n\nabstractmethod GRPCPartsService.export(**kwargs) -> dict\n\nExport a part to a file."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/GeometryContainers.html#geometrycontainers","title":"GeometryContainers","text":"GeometryContainers\n\n\n\nclass ansys.geometry.core.connection.docker_instance.GeometryContainers(*args, **kwds)\n\nBases: enum.Enum\n\nProvides an enum holding the available Geometry services."},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/GeometryContainers.html#overview","title":"GeometryContainers > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCORE_WINDOWS_LATEST\n\n\n\nCORE_LINUX_LATEST\n\n\n\nCORE_WINDOWS_LATEST_UNSTABLE\n\n\n\nCORE_LINUX_LATEST_UNSTABLE\n\n\n\nWINDOWS_LATEST\n\n\n\nWINDOWS_LATEST_UNSTABLE\n\n\n\nWINDOWS_24_1\n\n\n\nWINDOWS_24_2\n\n\n\nWINDOWS_25_1\n\n\n\nWINDOWS_25_2\n\n\n\nCORE_WINDOWS_25_2\n\n\n\nCORE_LINUX_25_2\n\n\n\nCORE_WINDOWS_26_1\n\n\n\nCORE_LINUX_26_1\n\n"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/GeometryContainers.html#import-detail","title":"GeometryContainers > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/geometry/core/connection/docker_instance/GeometryContainers.html#attribute-detail","title":"GeometryContainers > Attribute detail","text":"Attribute detail\n\n\n\nGeometryContainers.CORE_WINDOWS_LATEST = (0, 'windows', 'core-windows-latest')\n\n\n\n\n\nGeometryContainers.CORE_LINUX_LATEST = (1, 'linux', 'core-linux-latest')\n\n\n\n\n\nGeometryContainers.CORE_WINDOWS_LATEST_UNSTABLE = (2, 'windows', 'core-windows-latest-unstable')\n\n\n\n\n\nGeometryContainers.CORE_LINUX_LATEST_UNSTABLE = (3, 'linux', 'core-linux-latest-unstable')\n\n\n\n\n\nGeometryContainers.WINDOWS_LATEST = (4, 'windows', 'windows-latest')\n\n\n\n\n\nGeometryContainers.WINDOWS_LATEST_UNSTABLE = (5, 'windows', 'windows-latest-unstable')\n\n\n\n\n\nGeometryContainers.WINDOWS_24_1 = (6, 'windows', 'windows-24.1')\n\n\n\n\n\nGeometryContainers.WINDOWS_24_2 = (7, 'windows', 'windows-24.2')\n\n\n\n\n\nGeometryContainers.WINDOWS_25_1 = (8, 'windows', 'windows-25.1')\n\n\n\n\n\nGeometryContainers.WINDOWS_25_2 = (9, 'windows', 'windows-25.2')\n\n\n\n\n\nGeometryContainers.CORE_WINDOWS_25_2 = (10, 'windows', 'core-windows-25.2')\n\n\n\n\n\nGeometryContainers.CORE_LINUX_25_2 = (11, 'linux', 'core-linux-25.2')\n\n\n\n\n\nGeometryContainers.CORE_WINDOWS_26_1 = (10, 'windows', 'core-windows-26.1')\n\n\n\n\n\nGeometryContainers.CORE_LINUX_26_1 = (11, 'linux', 'core-linux-26.1')\n\n"}]