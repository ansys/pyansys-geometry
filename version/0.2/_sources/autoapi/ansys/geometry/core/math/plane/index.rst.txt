:py:mod:`ansys.geometry.core.math.plane`
========================================

.. py:module:: ansys.geometry.core.math.plane

.. autoapi-nested-parse::

   Provides the ``Plane`` class.

   ..
       !! processed by numpydoc !!


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ansys.geometry.core.math.plane.Plane




.. py:class:: Plane(origin: beartype.typing.Union[numpy.ndarray, ansys.geometry.core.typing.RealSequence, ansys.geometry.core.math.point.Point3D] = ZERO_POINT3D, direction_x: beartype.typing.Union[numpy.ndarray, ansys.geometry.core.typing.RealSequence, ansys.geometry.core.math.vector.UnitVector3D, ansys.geometry.core.math.vector.Vector3D] = UNITVECTOR3D_X, direction_y: beartype.typing.Union[numpy.ndarray, ansys.geometry.core.typing.RealSequence, ansys.geometry.core.math.vector.UnitVector3D, ansys.geometry.core.math.vector.Vector3D] = UNITVECTOR3D_Y)


   Bases: :py:obj:`ansys.geometry.core.math.frame.Frame`

   
   Provides primitive representation of a 2D plane in 3D space.


   :Parameters:

       **origin** : :obj:`Union`\[:obj:`~numpy.ndarray`, :obj:`RealSequence`, :obj:`Point3D`], default: :obj:`ZERO_POINT3D`
           Centered origin of the frame. The default is the Cartesian origin.

       **direction_x** : :obj:`Union`\[:obj:`~numpy.ndarray`, :obj:`RealSequence`, :obj:`UnitVector3D`, :obj:`Vector3D`], default: :obj:`UNITVECTOR3D_X`
           X-axis direction.

       **direction_y** : :obj:`Union`\[:obj:`~numpy.ndarray`, :obj:`RealSequence`, :obj:`UnitVector3D`, :obj:`Vector3D`], default: :obj:`UNITVECTOR3D_Y`
           Y-axis direction.














   ..
       !! processed by numpydoc !!
   .. py:method:: is_point_contained(point: ansys.geometry.core.math.point.Point3D) -> bool

      
      Check if a 3D point is contained in the plane.


      :Parameters:

          **point** : :obj:`Point3D`
              :class:`Point3D <ansys.geometry.core.math.point.Point3D>` class to check.

      :Returns:

          :ref:`bool <python:bltin-boolean-values>`
              ``True`` if the 3D point is contained in the plane.













      ..
          !! processed by numpydoc !!

   .. py:method:: __eq__(other: Plane) -> bool

      
      Equals operator for the ``Plane`` class.
















      ..
          !! processed by numpydoc !!

   .. py:method:: __ne__(other: Plane) -> bool

      
      Not equals operator for the ``Plane`` class.
















      ..
          !! processed by numpydoc !!


