:py:mod:`ansys.geometry.core.sketch.box`
========================================

.. py:module:: ansys.geometry.core.sketch.box

.. autoapi-nested-parse::

   Provides the ``Box`` class.

   ..
       !! processed by numpydoc !!


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ansys.geometry.core.sketch.box.Box




.. py:class:: Box(center: ansys.geometry.core.math.Point2D, width: beartype.typing.Union[pint.Quantity, ansys.geometry.core.misc.Distance, ansys.geometry.core.typing.Real], height: beartype.typing.Union[pint.Quantity, ansys.geometry.core.misc.Distance, ansys.geometry.core.typing.Real], angle: beartype.typing.Optional[beartype.typing.Union[pint.Quantity, ansys.geometry.core.misc.Angle, ansys.geometry.core.typing.Real]] = 0)


   Bases: :py:obj:`ansys.geometry.core.sketch.face.SketchFace`

   
   Provides for modeling quadrilaterals.


   :Parameters:

       **center: Point2D**
           2D point representing the center of the box.

       **width** : :obj:`Union`\[:obj:`Quantity`, :obj:`Distance`, :obj:`Real`]
           Width of the box.

       **height** : :obj:`Union`\[:obj:`Quantity`, :obj:`Distance`, :obj:`Real`]
           Height of the box.

       **angle** : :obj:`Union`\[:obj:`Quantity`, :obj:`Angle`, :obj:`Real`], default: 0
           Placement angle for orientation alignment.














   ..
       !! processed by numpydoc !!
   .. py:property:: center
      :type: ansys.geometry.core.math.Point2D

      
      Point that is the center of the box.
















      ..
          !! processed by numpydoc !!

   .. py:property:: width
      :type: pint.Quantity

      
      Width of the box.
















      ..
          !! processed by numpydoc !!

   .. py:property:: height
      :type: pint.Quantity

      
      Height of the box.
















      ..
          !! processed by numpydoc !!

   .. py:property:: perimeter
      :type: pint.Quantity

      
      Perimeter of the box.
















      ..
          !! processed by numpydoc !!

   .. py:property:: area
      :type: pint.Quantity

      
      Area of the box.
















      ..
          !! processed by numpydoc !!

   .. py:property:: visualization_polydata
      :type: pyvista.PolyData

      
      VTK polydata representation for PyVista visualization.

      The representation lies in the X/Y plane within
      the standard global cartesian coordinate system.


      :Returns:

          :obj:`pyvista.PolyData`
              VTK pyvista.Polydata configuration.













      ..
          !! processed by numpydoc !!


