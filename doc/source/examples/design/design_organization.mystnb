---
jupytext:
  text_representation:
    extension: .mystnb
    format_name: myst
    format_version: 0.13
    jupytext_version: 1.14.1
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3
---

# Design Organization

The ``Design`` instance creates a new design project within the remote Geometry Service to
complete all CAD modeling against.

All of the solid and surface bodies within each design can be organized within a customizable
component hierarchy.

The top-level design node and each child-component node can have one or more bodies assigned
and one or more components assigned.

The API requires each component of the design hierarchy to be given a user-defined name.

There are several design operations that result in a new body being created within the design.
Executing each of these methods against a specific component instance explicitly specifies the
node of the design tree to which the new body should be organized under.

+++

Start by importing the fundamental objects:

```{code-cell} ipython3
from ansys.geometry.core import Modeler
from ansys.geometry.core.math import UNITVECTOR3D_X, Point2D
from ansys.geometry.core.misc import UNITS, Distance
from ansys.geometry.core.sketch import Sketch
```

## Design organization

Two sketches are extruded to create bodies. The cylinder is assigned to the
top-level design component. The slot is assigned to the component nested 
one level beneath the top-level design component.

```{code-cell} ipython3
modeler = Modeler()

design = modeler.create_design("DesignHierarchyExample")

circle_sketch = Sketch()
circle_sketch.circle(Point2D([10, 10], UNITS.mm), Distance(10, UNITS.mm))

cylinder_body = design.extrude_sketch("10mmCylinder", circle_sketch, Distance(10, UNITS.mm))

slot_sketch = Sketch()
slot_sketch.slot(Point2D([40, 10], UNITS.mm), Distance(20, UNITS.mm), Distance(10, UNITS.mm))

nested_component = design.add_component("NestedComponent")
slot_body = nested_component.extrude_sketch("SlotExtrusion", slot_sketch, Distance(20, UNITS.mm))

design.plot()
```

## Another Nested Component

A component is simply an organization mechanism. The following creates a component nested
under the previously created component and then creates another cylinder from the previously
used sketch.

```{code-cell} ipython3

double_nested_component = nested_component.add_component("DoubleNestedComponent")

circle_surface_body = double_nested_component.create_surface("CircularSurfaceBody", circle_sketch)
circle_surface_body.translate(UNITVECTOR3D_X, Distance(-35, UNITS.mm))

design.plot()
```

## Cross Component Targets

Surfaces from any body across the entire design can be used as a reference for creating new bodies.

This example extrudes a cylinder from the surface body assigned to the child component.

```{code-cell} ipython3

cylinder_from_face = nested_component.extrude_face("CylinderFromFace", circle_surface_body.faces[0], Distance(30, UNITS.mm))
cylinder_from_face.translate(UNITVECTOR3D_X, Distance(-25, UNITS.mm))

design.plot()
```
