





:class:`ApiVersions`
====================


.. py:class:: ansys.geometry.core.connection.backend.ApiVersions(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   
   Provides an enum for all the compatibles API versions.
















   ..
       !! processed by numpydoc !!



.. py:currentmodule:: ApiVersions

Overview
--------

.. tab-set::





   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~V_21`
            - 
          * - :py:attr:`~V_22`
            - 
          * - :py:attr:`~V_231`
            - 
          * - :py:attr:`~V_232`
            - 
          * - :py:attr:`~V_241`
            - 
          * - :py:attr:`~V_242`
            - 
          * - :py:attr:`~V_251`
            - 
          * - :py:attr:`~V_252`
            - 


   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~parse_input`
            - Convert an input to an ApiVersions enum.





Import detail
-------------

.. code-block:: python

    from ansys.geometry.core.connection.backend import ApiVersions


Attribute detail
----------------

.. py:attribute:: V_21
   :value: 21


.. py:attribute:: V_22
   :value: 22


.. py:attribute:: V_231
   :value: 231


.. py:attribute:: V_232
   :value: 232


.. py:attribute:: V_241
   :value: 241


.. py:attribute:: V_242
   :value: 242


.. py:attribute:: V_251
   :value: 251


.. py:attribute:: V_252
   :value: 252




Method detail
-------------

.. py:method:: parse_input(version: Union[int, str, ApiVersions]) -> ApiVersions
   :staticmethod:


   
   Convert an input to an ApiVersions enum.


   :Parameters:

       **version** : :class:`python:int` | :class:`python:str` | :obj:`ApiVersions`
           The version to convert to an ApiVersions enum.



   :Returns:

       :obj:`ApiVersions`
           The version as an ApiVersions enum.











   ..
       !! processed by numpydoc !!




