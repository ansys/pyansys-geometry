




The ``docker_instance.py`` module
=================================

.. py:module:: ansys.geometry.core.connection.docker_instance


Summary
-------












.. py:currentmodule:: docker_instance
.. tab-set::




    .. tab-item:: Classes

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:attr:`~LocalDockerInstance`
            - Instantiates a Geometry service as a local Docker container.



    .. tab-item:: Enums

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:attr:`~GeometryContainers`
            - Provides an enum holding the available Geometry services.




    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:attr:`~get_geometry_container_type`
            - Given a ``LocalDockerInstance``, provide back the ``GeometryContainers`` value.









.. toctree::
   :titlesonly:
   :maxdepth: 1
   :hidden:

    üùÜ LocalDockerInstance<LocalDockerInstance>


.. toctree::
   :titlesonly:
   :maxdepth: 1
   :hidden:

    ‚âî GeometryContainers<GeometryContainers>








Description
-----------

Module for connecting to a local Docker container with the Geometry service.

..
    !! processed by numpydoc !!






Module detail
-------------

.. py:function:: get_geometry_container_type(instance: LocalDockerInstance) -> beartype.typing.Union[GeometryContainers, None]

   
   Given a ``LocalDockerInstance``, provide back the ``GeometryContainers`` value.


   :Parameters:

       **instance** : :obj:`LocalDockerInstance`
           The LocalDockerInstance object.

   :Returns:

       :obj:`Union`\[:obj:`GeometryContainers`, :data:`python:None`]
           The GeometryContainer value corresponding to the previous image or None
           if not match.








   .. rubric:: Notes

   This method returns the first hit on the available tags.





   ..
       !! processed by numpydoc !!



