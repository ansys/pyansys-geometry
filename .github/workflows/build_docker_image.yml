name: Build Docker images
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'docker/**'
      - '.github/workflows/build_docker_image.yml'
  push:
    paths:
      - 'docker/**'
      - '.github/workflows/build_docker_image.yml'
  release:
    types: [published]

env:
  MAIN_PYTHON_VERSION: '3.10'
  ANSRV_GEO_IMAGE_WINDOWS_TAG: ghcr.io/pyansys/geometry:windows-latest-tmp
  ANSRV_GEO_IMAGE_LINUX_TAG: ghcr.io/pyansys/geometry:linux-latest-tmp
  ANSRV_GEO_PORT: 700
  ANSRV_GEO_LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
  GEO_CONT_NAME: ans_geo

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  download-assets:
    name: Download release assets
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows binaries
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'latest'
          file: 'windows-binaries.zip'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Linux binaries
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'latest'
          file: 'linux-binaries.zip'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binaries to workflow artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-binaries.zip
          path: windows-binaries.zip
          retention-days: 7

      - name: Upload Linux binaries to workflow artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries.zip
          path: linux-binaries.zip
          retention-days: 7

# =================================================================================================
# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv    RUNNING ON SELF-HOSTED RUNNER    vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# =================================================================================================

  build-windows:
    name: Building Geometry Service - Windows
    runs-on: [self-hosted, pygeometry]
    needs: [download-assets]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download the Windows binaries
        uses: actions/download-artifact@v3
        working-directory: docker
        with:
          name: windows-binaries.zip
          path: windows-binaries.zip

      - name: Build Docker image
        working-directory: docker
        run: |
          docker build -f Dockerfile.windows -t ${{ env.ANSRV_GEO_IMAGE_WINDOWS_TAG }} .

      - name: Launch Geometry service
        run: |
          docker run --detach --name ${{ env.GEO_CONT_NAME }} -e LICENSE_SERVER=${{ env.ANSRV_GEO_LICENSE_SERVER }} -p ${{ env.ANSRV_GEO_PORT }}:50051 ${{ env.ANSRV_GEO_IMAGE_WINDOWS_TAG }}

      - name: Stop the Geometry service
        if: always()
        run: |
          docker stop ${{ env.GEO_CONT_NAME }}
          docker logs ${{ env.GEO_CONT_NAME }}
          docker rm ${{ env.GEO_CONT_NAME }}

      - name: Delete the Docker images (and untagged ones)
        if: always()
        run: |
          docker image rm stop ${{ env.ANSRV_GEO_IMAGE_WINDOWS_TAG }}
          docker system prune -f

# =================================================================================================
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    RUNNING ON SELF-HOSTED RUNNER    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# =================================================================================================

  build-linux:
    name: Building Geometry Service - Linux
    runs-on: ubuntu-latest
    needs: [download-assets]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download the Linux binaries
        uses: actions/download-artifact@v3
        working-directory: docker
        with:
          name: linux-binaries.zip
          path: linux-binaries.zip

      - name: Build Docker image
        working-directory: docker
        run: |
          docker build -f Dockerfile.linux -t ${{ env.ANSRV_GEO_IMAGE_LINUX_TAG }} .

      - name: Launch Geometry service
        run: |
          docker run --detach --name ${{ env.GEO_CONT_NAME }} -e LICENSE_SERVER=${{ env.ANSRV_GEO_LICENSE_SERVER }} -p ${{ env.ANSRV_GEO_PORT }}:50051 ${{ env.ANSRV_GEO_IMAGE_LINUX_TAG }}

      - name: Stop the Geometry service
        if: always()
        run: |
          docker stop ${{ env.GEO_CONT_NAME }}
          docker logs ${{ env.GEO_CONT_NAME }}
          docker rm ${{ env.GEO_CONT_NAME }}
